Search.setIndex({"docnames": ["analytical_engine/builtin_algorithms", "analytical_engine/customized_algorithms", "analytical_engine/deployment", "analytical_engine/design_of_gae", "analytical_engine/dev_and_test", "analytical_engine/faqs", "analytical_engine/flash", "analytical_engine/getting_started", "analytical_engine/guide_and_examples", "analytical_engine/ingress", "analytical_engine/key_concepts", "analytical_engine/networkx_compatibility", "analytical_engine/overview_and_architecture", "analytical_engine/performance_tuning", "analytical_engine/programming_model_pie", "analytical_engine/tutorial_dev_algo_cpp_flash", "analytical_engine/tutorial_dev_algo_cpp_pie", "analytical_engine/tutorial_dev_algo_java", "analytical_engine/tutorial_dev_algo_python", "analytical_engine/tutorial_networkx_algorithms", "analytical_engine/tutorial_networkx_operations", "analytical_engine/tutorial_run_builtin_algo", "analytical_engine/tutorial_run_giraph_apps", "analytical_engine/tutorial_run_graphx_apps", "analytical_engine/vertex_centric_models", "contact_us", "deployment/deploy_graphscope_on_clouds", "deployment/deploy_graphscope_on_existing_vineyard_cluster", "deployment/deploy_graphscope_on_self_managed_k8s", "deployment/deploy_graphscope_with_helm", "deployment/install_on_local", "design_of_gae", "development/code_style_guide", "development/dev_guide", "development/how_to_contribute", "development/how_to_debugging", "development/how_to_install_in_offline_mode", "development/how_to_submit_pr", "development/how_to_test", "frag_intro", "frequently_asked_questions", "getting_started_gle", "graph_workloads", "graphscope_for_data_scientists", "how_to_load_graphs", "how_to_report_bugs", "index", "interactive_engine/deployment", "interactive_engine/design_of_gie", "interactive_engine/faq", "interactive_engine/getting_started", "interactive_engine/guide_and_examples", "interactive_engine/supported_gremlin_steps", "interactive_engine/tutorial_ldbc_gremlin", "java_tutorials", "key_features", "learning_engine/design_of_gle", "learning_engine/dev_and_test", "learning_engine/getting_started", "learning_engine/graph_sampling", "learning_engine/guide_and_examples", "learning_engine/tutorial_node_classification_k8s", "learning_engine/tuttorial_node_classification_local", "overview/design_of_graphscope", "overview/getting_started", "overview/glossary", "overview/graph_analytics_workloads", "overview/graph_interactive_workloads", "overview/graph_learning_workloads", "overview/intro", "overview/positioning", "performance_and_benchmark", "python_tutorials", "reference/analytical_engine_index", "reference/app", "reference/context", "reference/cython_sdk", "reference/gae_java/about", "reference/gae_java/index", "reference/generated/graphscope.Vertex", "reference/generated/graphscope.declare", "reference/generated/graphscope.framework.app.load_app", "reference/generated/graphscope.framework.dag_utils.add_column", "reference/generated/graphscope.framework.dag_utils.add_labels_to_graph", "reference/generated/graphscope.framework.dag_utils.arrow_to_dynamic", "reference/generated/graphscope.framework.dag_utils.bind_app", "reference/generated/graphscope.framework.dag_utils.clear_edges", "reference/generated/graphscope.framework.dag_utils.clear_graph", "reference/generated/graphscope.framework.dag_utils.context_to_dataframe", "reference/generated/graphscope.framework.dag_utils.context_to_numpy", "reference/generated/graphscope.framework.dag_utils.copy_graph", "reference/generated/graphscope.framework.dag_utils.create_app", "reference/generated/graphscope.framework.dag_utils.create_graph", "reference/generated/graphscope.framework.dag_utils.create_graph_view", "reference/generated/graphscope.framework.dag_utils.create_loader", "reference/generated/graphscope.framework.dag_utils.create_subgraph", "reference/generated/graphscope.framework.dag_utils.create_unload_op", "reference/generated/graphscope.framework.dag_utils.dynamic_to_arrow", "reference/generated/graphscope.framework.dag_utils.fetch_gremlin_result", "reference/generated/graphscope.framework.dag_utils.get_context_data", "reference/generated/graphscope.framework.dag_utils.graph_to_dataframe", "reference/generated/graphscope.framework.dag_utils.graph_to_numpy", "reference/generated/graphscope.framework.dag_utils.gremlin_query", "reference/generated/graphscope.framework.dag_utils.gremlin_to_subgraph", "reference/generated/graphscope.framework.dag_utils.modify_edges", "reference/generated/graphscope.framework.dag_utils.modify_vertices", "reference/generated/graphscope.framework.dag_utils.output", "reference/generated/graphscope.framework.dag_utils.project_arrow_property_graph", "reference/generated/graphscope.framework.dag_utils.project_to_simple", "reference/generated/graphscope.framework.dag_utils.report_graph", "reference/generated/graphscope.framework.dag_utils.run_app", "reference/generated/graphscope.framework.dag_utils.to_data_sink", "reference/generated/graphscope.framework.dag_utils.to_directed", "reference/generated/graphscope.framework.dag_utils.to_undirected", "reference/generated/graphscope.framework.dag_utils.to_vineyard_dataframe", "reference/generated/graphscope.framework.dag_utils.to_vineyard_tensor", "reference/generated/graphscope.framework.dag_utils.unload_app", "reference/generated/graphscope.framework.dag_utils.unload_context", "reference/generated/graphscope.framework.dag_utils.unload_graph", "reference/generated/graphscope.framework.operation.Operation.__init__", "reference/generated/graphscope.framework.operation.Operation.as_op_def", "reference/generated/graphscope.framework.operation.Operation.eval", "reference/generated/graphscope.framework.operation.Operation.evaluated", "reference/generated/graphscope.framework.operation.Operation.key", "reference/generated/graphscope.framework.operation.Operation.signature", "reference/generated/graphscope.g", "reference/generated/graphscope.get_default_session", "reference/generated/graphscope.get_option", "reference/generated/graphscope.graphlearn", "reference/generated/graphscope.gremlin", "reference/generated/graphscope.has_default_session", "reference/generated/graphscope.session", "reference/generated/graphscope.set_option", "reference/gnn_engine/algo_en", "reference/gnn_engine/data_loader_en", "reference/gnn_engine/graph_object_en", "reference/gnn_engine/graph_query_en", "reference/gnn_engine/graph_sampling_en", "reference/gnn_engine/graph_traverse_en", "reference/gnn_engine/gsl_en", "reference/gnn_engine/install_en", "reference/gnn_engine/model_programming_en", "reference/gnn_engine/negative_sampling_en", "reference/gnn_engine/operator", "reference/gnn_engine/other_source", "reference/gnn_engine/quick_start_en", "reference/gnn_engine/system_config", "reference/graph", "reference/interactive", "reference/learning", "reference/networkx/builtin", "reference/networkx/functions", "reference/networkx/generated/graphscope.nx.classes.function.add_cycle", "reference/networkx/generated/graphscope.nx.classes.function.add_path", "reference/networkx/generated/graphscope.nx.classes.function.add_star", "reference/networkx/generated/graphscope.nx.classes.function.all_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.common_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.create_empty_copy", "reference/networkx/generated/graphscope.nx.classes.function.degree", "reference/networkx/generated/graphscope.nx.classes.function.degree_histogram", "reference/networkx/generated/graphscope.nx.classes.function.density", "reference/networkx/generated/graphscope.nx.classes.function.edge_subgraph", "reference/networkx/generated/graphscope.nx.classes.function.edges", "reference/networkx/generated/graphscope.nx.classes.function.freeze", "reference/networkx/generated/graphscope.nx.classes.function.induced_subgraph", "reference/networkx/generated/graphscope.nx.classes.function.info", "reference/networkx/generated/graphscope.nx.classes.function.is_directed", "reference/networkx/generated/graphscope.nx.classes.function.is_empty", "reference/networkx/generated/graphscope.nx.classes.function.is_frozen", "reference/networkx/generated/graphscope.nx.classes.function.is_negatively_weighted", "reference/networkx/generated/graphscope.nx.classes.function.is_weighted", "reference/networkx/generated/graphscope.nx.classes.function.neighbors", "reference/networkx/generated/graphscope.nx.classes.function.nodes", "reference/networkx/generated/graphscope.nx.classes.function.nodes_with_selfloops", "reference/networkx/generated/graphscope.nx.classes.function.non_edges", "reference/networkx/generated/graphscope.nx.classes.function.non_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.number_of_edges", "reference/networkx/generated/graphscope.nx.classes.function.number_of_nodes", "reference/networkx/generated/graphscope.nx.classes.function.number_of_selfloops", "reference/networkx/generated/graphscope.nx.classes.function.selfloop_edges", "reference/networkx/generated/graphscope.nx.classes.function.subgraph", "reference/networkx/generated/graphscope.nx.classes.function.to_directed", "reference/networkx/generated/graphscope.nx.classes.function.to_undirected", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas_g", "reference/networkx/generated/graphscope.nx.generators.classic.balanced_tree", "reference/networkx/generated/graphscope.nx.generators.classic.barbell_graph", "reference/networkx/generated/graphscope.nx.generators.classic.binomial_tree", "reference/networkx/generated/graphscope.nx.generators.classic.circulant_graph", "reference/networkx/generated/graphscope.nx.generators.classic.circular_ladder_graph", "reference/networkx/generated/graphscope.nx.generators.classic.complete_graph", "reference/networkx/generated/graphscope.nx.generators.classic.complete_multipartite_graph", "reference/networkx/generated/graphscope.nx.generators.classic.cycle_graph", "reference/networkx/generated/graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph", "reference/networkx/generated/graphscope.nx.generators.classic.empty_graph", "reference/networkx/generated/graphscope.nx.generators.classic.full_rary_tree", "reference/networkx/generated/graphscope.nx.generators.classic.ladder_graph", "reference/networkx/generated/graphscope.nx.generators.classic.lollipop_graph", "reference/networkx/generated/graphscope.nx.generators.classic.null_graph", "reference/networkx/generated/graphscope.nx.generators.classic.path_graph", "reference/networkx/generated/graphscope.nx.generators.classic.star_graph", "reference/networkx/generated/graphscope.nx.generators.classic.trivial_graph", "reference/networkx/generated/graphscope.nx.generators.classic.turan_graph", "reference/networkx/generated/graphscope.nx.generators.classic.wheel_graph", "reference/networkx/generated/graphscope.nx.generators.community.LFR_benchmark_graph", "reference/networkx/generated/graphscope.nx.generators.community.caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.connected_caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.gaussian_random_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.planted_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.random_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.relaxed_caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.ring_of_cliques", "reference/networkx/generated/graphscope.nx.generators.community.stochastic_block_model", "reference/networkx/generated/graphscope.nx.generators.community.windmill_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.configuration_model", "reference/networkx/generated/graphscope.nx.generators.degree_seq.degree_sequence_tree", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_configuration_model", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.expected_degree_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.havel_hakimi_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.random_degree_sequence_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gn_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gnc_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gnr_graph", "reference/networkx/generated/graphscope.nx.generators.directed.random_k_out_graph", "reference/networkx/generated/graphscope.nx.generators.directed.scale_free_graph", "reference/networkx/generated/graphscope.nx.generators.duplication.duplication_divergence_graph", "reference/networkx/generated/graphscope.nx.generators.duplication.partial_duplication_graph", "reference/networkx/generated/graphscope.nx.generators.ego.ego_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.chordal_cycle_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.margulis_gabber_galil_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.paley_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.geographical_threshold_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.soft_random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.thresholded_random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.waxman_graph", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hkn_harary_graph", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hnm_harary_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.general_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.k_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.uniform_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.joint_degree_graph", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielski_graph", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielskian", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees", "reference/networkx/generated/graphscope.nx.generators.small.LCF_graph", "reference/networkx/generated/graphscope.nx.generators.small.bull_graph", "reference/networkx/generated/graphscope.nx.generators.small.chvatal_graph", "reference/networkx/generated/graphscope.nx.generators.small.cubical_graph", "reference/networkx/generated/graphscope.nx.generators.small.desargues_graph", "reference/networkx/generated/graphscope.nx.generators.small.diamond_graph", "reference/networkx/generated/graphscope.nx.generators.small.dodecahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.frucht_graph", "reference/networkx/generated/graphscope.nx.generators.small.heawood_graph", "reference/networkx/generated/graphscope.nx.generators.small.house_graph", "reference/networkx/generated/graphscope.nx.generators.small.house_x_graph", "reference/networkx/generated/graphscope.nx.generators.small.icosahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.krackhardt_kite_graph", "reference/networkx/generated/graphscope.nx.generators.small.make_small_graph", "reference/networkx/generated/graphscope.nx.generators.small.moebius_kantor_graph", "reference/networkx/generated/graphscope.nx.generators.small.octahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.pappus_graph", "reference/networkx/generated/graphscope.nx.generators.small.petersen_graph", "reference/networkx/generated/graphscope.nx.generators.small.sedgewick_maze_graph", "reference/networkx/generated/graphscope.nx.generators.small.tetrahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.truncated_cube_graph", "reference/networkx/generated/graphscope.nx.generators.small.truncated_tetrahedron_graph", "reference/networkx/generated/graphscope.nx.generators.small.tutte_graph", "reference/networkx/generated/graphscope.nx.generators.social.davis_southern_women_graph", "reference/networkx/generated/graphscope.nx.generators.social.florentine_families_graph", "reference/networkx/generated/graphscope.nx.generators.social.karate_club_graph", "reference/networkx/generated/graphscope.nx.generators.social.les_miserables_graph", "reference/networkx/generated/graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge", "reference/networkx/generated/graphscope.nx.generators.sudoku.sudoku_graph", "reference/networkx/generated/graphscope.nx.generators.trees.prefix_tree", "reference/networkx/generated/graphscope.nx.generators.trees.random_tree", "reference/networkx/generated/graphscope.nx.generators.triads.triad_graph", "reference/networkx/generated/networkx.generators.internet_as_graphs.random_internet_as_graph", "reference/networkx/generated/networkx.generators.stochastic.stochastic_graph", "reference/networkx/generators", "reference/networkx/graphs", "reference/networkx/index", "reference/networkx/io", "reference/networkx/transformation", "reference/operation", "reference/python_index", "reference/selector", "reference/session", "resources_estimator", "storage_engine/gart", "storage_engine/getting_started", "storage_engine/graphar", "storage_engine/grin", "storage_engine/groot", "storage_engine/vineyard", "tutorial/builtin", "tutorial/scaling", "user_guide_and_examples_of_gae", "user_guide_and_examples_of_gle", "utilities/error_codes", "utilities/gs", "utilities/how_to_find_logs", "utilities/monitoring", "zh/analytics_engine", "zh/deployment", "zh/developer_guide", "zh/frequently_asked_questions", "zh/getting_started", "zh/graph_transformation", "zh/index", "zh/installation", "zh/interactive_engine", "zh/learning_engine", "zh/loading_graph", "zh/tutorials"], "filenames": ["analytical_engine/builtin_algorithms.md", "analytical_engine/customized_algorithms.md", "analytical_engine/deployment.md", "analytical_engine/design_of_gae.md", "analytical_engine/dev_and_test.md", "analytical_engine/faqs.md", "analytical_engine/flash.md", "analytical_engine/getting_started.md", "analytical_engine/guide_and_examples.md", "analytical_engine/ingress.md", "analytical_engine/key_concepts.rst", "analytical_engine/networkx_compatibility.md", "analytical_engine/overview_and_architecture.md", "analytical_engine/performance_tuning.md", "analytical_engine/programming_model_pie.md", "analytical_engine/tutorial_dev_algo_cpp_flash.md", "analytical_engine/tutorial_dev_algo_cpp_pie.md", "analytical_engine/tutorial_dev_algo_java.md", "analytical_engine/tutorial_dev_algo_python.rst", "analytical_engine/tutorial_networkx_algorithms.md", "analytical_engine/tutorial_networkx_operations.md", "analytical_engine/tutorial_run_builtin_algo.md", "analytical_engine/tutorial_run_giraph_apps.md", "analytical_engine/tutorial_run_graphx_apps.md", "analytical_engine/vertex_centric_models.md", "contact_us.md", "deployment/deploy_graphscope_on_clouds.md", "deployment/deploy_graphscope_on_existing_vineyard_cluster.md", "deployment/deploy_graphscope_on_self_managed_k8s.md", "deployment/deploy_graphscope_with_helm.md", "deployment/install_on_local.md", "design_of_gae.md", "development/code_style_guide.md", "development/dev_guide.md", "development/how_to_contribute.md", "development/how_to_debugging.md", "development/how_to_install_in_offline_mode.md", "development/how_to_submit_pr.md", "development/how_to_test.md", "frag_intro.md", "frequently_asked_questions.rst", "getting_started_gle.md", "graph_workloads.md", "graphscope_for_data_scientists.md", "how_to_load_graphs.md", "how_to_report_bugs.md", "index.rst", "interactive_engine/deployment.md", "interactive_engine/design_of_gie.md", "interactive_engine/faq.md", "interactive_engine/getting_started.md", "interactive_engine/guide_and_examples.md", "interactive_engine/supported_gremlin_steps.md", "interactive_engine/tutorial_ldbc_gremlin.md", "java_tutorials.md", "key_features.md", "learning_engine/design_of_gle.md", "learning_engine/dev_and_test.md", "learning_engine/getting_started.md", "learning_engine/graph_sampling.md", "learning_engine/guide_and_examples.md", "learning_engine/tutorial_node_classification_k8s.md", "learning_engine/tuttorial_node_classification_local.md", "overview/design_of_graphscope.md", "overview/getting_started.md", "overview/glossary.md", "overview/graph_analytics_workloads.md", "overview/graph_interactive_workloads.md", "overview/graph_learning_workloads.md", "overview/intro.md", "overview/positioning.md", "performance_and_benchmark.md", "python_tutorials.md", "reference/analytical_engine_index.rst", "reference/app.rst", "reference/context.rst", "reference/cython_sdk.rst", "reference/gae_java/about.rst", "reference/gae_java/index.rst", "reference/generated/graphscope.Vertex.rst", "reference/generated/graphscope.declare.rst", "reference/generated/graphscope.framework.app.load_app.rst", "reference/generated/graphscope.framework.dag_utils.add_column.rst", "reference/generated/graphscope.framework.dag_utils.add_labels_to_graph.rst", "reference/generated/graphscope.framework.dag_utils.arrow_to_dynamic.rst", "reference/generated/graphscope.framework.dag_utils.bind_app.rst", "reference/generated/graphscope.framework.dag_utils.clear_edges.rst", "reference/generated/graphscope.framework.dag_utils.clear_graph.rst", "reference/generated/graphscope.framework.dag_utils.context_to_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.context_to_numpy.rst", "reference/generated/graphscope.framework.dag_utils.copy_graph.rst", "reference/generated/graphscope.framework.dag_utils.create_app.rst", "reference/generated/graphscope.framework.dag_utils.create_graph.rst", "reference/generated/graphscope.framework.dag_utils.create_graph_view.rst", "reference/generated/graphscope.framework.dag_utils.create_loader.rst", "reference/generated/graphscope.framework.dag_utils.create_subgraph.rst", "reference/generated/graphscope.framework.dag_utils.create_unload_op.rst", "reference/generated/graphscope.framework.dag_utils.dynamic_to_arrow.rst", "reference/generated/graphscope.framework.dag_utils.fetch_gremlin_result.rst", "reference/generated/graphscope.framework.dag_utils.get_context_data.rst", "reference/generated/graphscope.framework.dag_utils.graph_to_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.graph_to_numpy.rst", "reference/generated/graphscope.framework.dag_utils.gremlin_query.rst", "reference/generated/graphscope.framework.dag_utils.gremlin_to_subgraph.rst", "reference/generated/graphscope.framework.dag_utils.modify_edges.rst", "reference/generated/graphscope.framework.dag_utils.modify_vertices.rst", "reference/generated/graphscope.framework.dag_utils.output.rst", "reference/generated/graphscope.framework.dag_utils.project_arrow_property_graph.rst", "reference/generated/graphscope.framework.dag_utils.project_to_simple.rst", "reference/generated/graphscope.framework.dag_utils.report_graph.rst", "reference/generated/graphscope.framework.dag_utils.run_app.rst", "reference/generated/graphscope.framework.dag_utils.to_data_sink.rst", "reference/generated/graphscope.framework.dag_utils.to_directed.rst", "reference/generated/graphscope.framework.dag_utils.to_undirected.rst", "reference/generated/graphscope.framework.dag_utils.to_vineyard_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.to_vineyard_tensor.rst", "reference/generated/graphscope.framework.dag_utils.unload_app.rst", "reference/generated/graphscope.framework.dag_utils.unload_context.rst", "reference/generated/graphscope.framework.dag_utils.unload_graph.rst", "reference/generated/graphscope.framework.operation.Operation.__init__.rst", "reference/generated/graphscope.framework.operation.Operation.as_op_def.rst", "reference/generated/graphscope.framework.operation.Operation.eval.rst", "reference/generated/graphscope.framework.operation.Operation.evaluated.rst", "reference/generated/graphscope.framework.operation.Operation.key.rst", "reference/generated/graphscope.framework.operation.Operation.signature.rst", "reference/generated/graphscope.g.rst", "reference/generated/graphscope.get_default_session.rst", "reference/generated/graphscope.get_option.rst", "reference/generated/graphscope.graphlearn.rst", "reference/generated/graphscope.gremlin.rst", "reference/generated/graphscope.has_default_session.rst", "reference/generated/graphscope.session.rst", "reference/generated/graphscope.set_option.rst", "reference/gnn_engine/algo_en.rst", "reference/gnn_engine/data_loader_en.rst", "reference/gnn_engine/graph_object_en.rst", "reference/gnn_engine/graph_query_en.rst", "reference/gnn_engine/graph_sampling_en.rst", "reference/gnn_engine/graph_traverse_en.rst", "reference/gnn_engine/gsl_en.rst", "reference/gnn_engine/install_en.rst", "reference/gnn_engine/model_programming_en.rst", "reference/gnn_engine/negative_sampling_en.rst", "reference/gnn_engine/operator.rst", "reference/gnn_engine/other_source.rst", "reference/gnn_engine/quick_start_en.rst", "reference/gnn_engine/system_config.rst", "reference/graph.rst", "reference/interactive.rst", "reference/learning.rst", "reference/networkx/builtin.rst", "reference/networkx/functions.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_cycle.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_path.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_star.rst", "reference/networkx/generated/graphscope.nx.classes.function.all_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.common_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.create_empty_copy.rst", "reference/networkx/generated/graphscope.nx.classes.function.degree.rst", "reference/networkx/generated/graphscope.nx.classes.function.degree_histogram.rst", "reference/networkx/generated/graphscope.nx.classes.function.density.rst", "reference/networkx/generated/graphscope.nx.classes.function.edge_subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.freeze.rst", "reference/networkx/generated/graphscope.nx.classes.function.induced_subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.info.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_directed.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_empty.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_frozen.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_negatively_weighted.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_weighted.rst", "reference/networkx/generated/graphscope.nx.classes.function.neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.nodes.rst", "reference/networkx/generated/graphscope.nx.classes.function.nodes_with_selfloops.rst", "reference/networkx/generated/graphscope.nx.classes.function.non_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.non_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_nodes.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_selfloops.rst", "reference/networkx/generated/graphscope.nx.classes.function.selfloop_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.to_directed.rst", "reference/networkx/generated/graphscope.nx.classes.function.to_undirected.rst", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas.rst", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas_g.rst", "reference/networkx/generated/graphscope.nx.generators.classic.balanced_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.barbell_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.binomial_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.circulant_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.circular_ladder_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.complete_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.complete_multipartite_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.cycle_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.empty_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.full_rary_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.ladder_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.lollipop_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.null_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.path_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.star_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.trivial_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.turan_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.wheel_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.LFR_benchmark_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.connected_caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.gaussian_random_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.planted_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.random_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.relaxed_caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.ring_of_cliques.rst", "reference/networkx/generated/graphscope.nx.generators.community.stochastic_block_model.rst", "reference/networkx/generated/graphscope.nx.generators.community.windmill_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.configuration_model.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.degree_sequence_tree.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_configuration_model.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.expected_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.havel_hakimi_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.random_degree_sequence_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gn_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gnc_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gnr_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.random_k_out_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.scale_free_graph.rst", "reference/networkx/generated/graphscope.nx.generators.duplication.duplication_divergence_graph.rst", "reference/networkx/generated/graphscope.nx.generators.duplication.partial_duplication_graph.rst", "reference/networkx/generated/graphscope.nx.generators.ego.ego_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.chordal_cycle_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.margulis_gabber_galil_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.paley_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.geographical_threshold_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.soft_random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.thresholded_random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.waxman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hkn_harary_graph.rst", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hnm_harary_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.general_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.k_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.uniform_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.joint_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielski_graph.rst", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielskian.rst", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees.rst", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees.rst", "reference/networkx/generated/graphscope.nx.generators.small.LCF_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.bull_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.chvatal_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.cubical_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.desargues_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.diamond_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.dodecahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.frucht_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.heawood_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.house_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.house_x_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.icosahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.krackhardt_kite_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.make_small_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.moebius_kantor_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.octahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.pappus_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.petersen_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.sedgewick_maze_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.tetrahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.truncated_cube_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.truncated_tetrahedron_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.tutte_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.davis_southern_women_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.florentine_families_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.karate_club_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.les_miserables_graph.rst", "reference/networkx/generated/graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge.rst", "reference/networkx/generated/graphscope.nx.generators.sudoku.sudoku_graph.rst", "reference/networkx/generated/graphscope.nx.generators.trees.prefix_tree.rst", "reference/networkx/generated/graphscope.nx.generators.trees.random_tree.rst", "reference/networkx/generated/graphscope.nx.generators.triads.triad_graph.rst", "reference/networkx/generated/networkx.generators.internet_as_graphs.random_internet_as_graph.rst", "reference/networkx/generated/networkx.generators.stochastic.stochastic_graph.rst", "reference/networkx/generators.rst", "reference/networkx/graphs.rst", "reference/networkx/index.rst", "reference/networkx/io.rst", "reference/networkx/transformation.rst", "reference/operation.rst", "reference/python_index.rst", "reference/selector.rst", "reference/session.rst", "resources_estimator.md", "storage_engine/gart.md", "storage_engine/getting_started.md", "storage_engine/graphar.md", "storage_engine/grin.md", "storage_engine/groot.md", "storage_engine/vineyard.md", "tutorial/builtin.rst", "tutorial/scaling.rst", "user_guide_and_examples_of_gae.md", "user_guide_and_examples_of_gle.md", "utilities/error_codes.md", "utilities/gs.md", "utilities/how_to_find_logs.md", "utilities/monitoring.md", "zh/analytics_engine.rst", "zh/deployment.rst", "zh/developer_guide.rst", "zh/frequently_asked_questions.rst", "zh/getting_started.rst", "zh/graph_transformation.rst", "zh/index.rst", "zh/installation.rst", "zh/interactive_engine.rst", "zh/learning_engine.rst", "zh/loading_graph.rst", "zh/tutorials.rst"], "titles": ["Built-in Algorithms", "Customized Algorithms", "Deployment for GAE", "Design of Analytical Engine", "Dev and Test", "FAQs", "Programming Model: FLASH", "Getting Started", "Guide and Examples", "Ingress: Incrementalize Graph Algorithms", "Key Concepts", "NetworkX Compatibility", "Overview and Architecture", "Performance Tuning", "Programming Model: PIE", "Tutorial: Develop Your Algorithms in C++ with FLASH Model", "Tutorial: Develop your Algorithm in C++ with PIE Model", "Tutorial: Develop your Algorithm in Java with PIE Model", "Tutorial: Develop algorithms in Python", "Tutorial: Graph Algorithms with NetowrkX APIs", "Tutorial: Graph Operations with NetowrkX APIs", "Tutorial: Running Builtin Algorithms", "Tutorial: Run Giraph Applications on GraphScope", "Tutorial: Run GraphX Applications on GraphScope", "Vertex-Centric Model", "Contact Us", "Deploy GraphScope on Clouds", "Use an existing vineyard cluster with multiple GraphScope sessions", "Deploy GraphScope on K8s cluster", "Deploy GraphScope with <code class=\"docutils literal notranslate\"><span class=\"pre\">helm</span></code>", "Install GraphScope on Local", "Design of GAE", "Code Style Guide", "Development Guide", "How to Contribute", "Debugging on local deployment", "Install GraphScope in offline mode", "How to Submit Pull-requests", "How to Test", "Introduction to ArrowFragment", "Frequently Asked Questions", "Getting Started for GLE", "Graph Workloads", "GrpahScope for Data Scientists", "How to Load Graphs", "How to Report Bugs", "GraphScope: A One-Stop Large-Scale Graph Computing System from Alibaba", "Standalone Deployment for GIE", "Design of GIE", "Frequently Asked Questions (FAQs) for GIE Gremlin Usage", "Getting Started", "Guide and Examples", "Supported Gremlin Steps", "Tutorial: LDBC Gremlin", "Tutorials for Java Users", "Key Features", "Design of GLE", "Dev and Test", "Getting Started", "Graph Sampling", "Guide and Examples", "Tutorial: Training a Node Classification Model on K8s Cluster", "Tutorial: Training a Node Classification Model on Your Local Machine", "Design of GraphScope", "Getting Started", "Glossary", "Graph Analytics Workloads", "Graph Interactive Workloads", "Graph Learning Workloads", "Introducing GraphScope", "Positioning of GraphScope", "Performance and Benchmark", "Tutorials for Python Users", "Analytical Engine API Reference", "Analytical App", "Context", "Cython SDK API", "About Grape JDK", "Java Reference (javadoc)", "graphscope.Vertex", "graphscope.declare", "graphscope.framework.app.load_app", "graphscope.framework.dag_utils.add_column", "graphscope.framework.dag_utils.add_labels_to_graph", "graphscope.framework.dag_utils.arrow_to_dynamic", "graphscope.framework.dag_utils.bind_app", "graphscope.framework.dag_utils.clear_edges", "graphscope.framework.dag_utils.clear_graph", "graphscope.framework.dag_utils.context_to_dataframe", "graphscope.framework.dag_utils.context_to_numpy", "graphscope.framework.dag_utils.copy_graph", "graphscope.framework.dag_utils.create_app", "graphscope.framework.dag_utils.create_graph", "graphscope.framework.dag_utils.create_graph_view", "graphscope.framework.dag_utils.create_loader", "graphscope.framework.dag_utils.create_subgraph", "graphscope.framework.dag_utils.create_unload_op", "graphscope.framework.dag_utils.dynamic_to_arrow", "graphscope.framework.dag_utils.fetch_gremlin_result", "graphscope.framework.dag_utils.get_context_data", "graphscope.framework.dag_utils.graph_to_dataframe", "graphscope.framework.dag_utils.graph_to_numpy", "graphscope.framework.dag_utils.gremlin_query", "graphscope.framework.dag_utils.gremlin_to_subgraph", "graphscope.framework.dag_utils.modify_edges", "graphscope.framework.dag_utils.modify_vertices", "graphscope.framework.dag_utils.output", "graphscope.framework.dag_utils.project_arrow_property_graph", "graphscope.framework.dag_utils.project_to_simple", "graphscope.framework.dag_utils.report_graph", "graphscope.framework.dag_utils.run_app", "graphscope.framework.dag_utils.to_data_sink", "graphscope.framework.dag_utils.to_directed", "graphscope.framework.dag_utils.to_undirected", "graphscope.framework.dag_utils.to_vineyard_dataframe", "graphscope.framework.dag_utils.to_vineyard_tensor", "graphscope.framework.dag_utils.unload_app", "graphscope.framework.dag_utils.unload_context", "graphscope.framework.dag_utils.unload_graph", "graphscope.framework.operation.Operation.__init__", "graphscope.framework.operation.Operation.as_op_def", "graphscope.framework.operation.Operation.eval", "graphscope.framework.operation.Operation.evaluated", "graphscope.framework.operation.Operation.key", "graphscope.framework.operation.Operation.signature", "graphscope.g", "graphscope.get_default_session", "graphscope.get_option", "graphscope.graphlearn", "graphscope.gremlin", "graphscope.has_default_session", "graphscope.session", "graphscope.set_option", "Developing Your Own Model", "Data Source", "Graph Object", "Graph Query", "Graph Sampling", "Graph Traversal", "Graph Sampling Language\uff08GSL)", "Install from pip", "Graph Learning Model", "Negative Sampling", "Defining Your Own Operator", "Integrating Other Data Sources", "Quick Start", "System configuration", "Graph", "Interactive Query", "Graph Learning", "Builtin algorithms", "Functions", "graphscope.nx.classes.function.add_cycle", "graphscope.nx.classes.function.add_path", "graphscope.nx.classes.function.add_star", "graphscope.nx.classes.function.all_neighbors", "graphscope.nx.classes.function.common_neighbors", "graphscope.nx.classes.function.create_empty_copy", "graphscope.nx.classes.function.degree", "graphscope.nx.classes.function.degree_histogram", "graphscope.nx.classes.function.density", "graphscope.nx.classes.function.edge_subgraph", "graphscope.nx.classes.function.edges", "graphscope.nx.classes.function.freeze", "graphscope.nx.classes.function.induced_subgraph", "graphscope.nx.classes.function.info", "graphscope.nx.classes.function.is_directed", "graphscope.nx.classes.function.is_empty", "graphscope.nx.classes.function.is_frozen", "graphscope.nx.classes.function.is_negatively_weighted", "graphscope.nx.classes.function.is_weighted", "graphscope.nx.classes.function.neighbors", "graphscope.nx.classes.function.nodes", "graphscope.nx.classes.function.nodes_with_selfloops", "graphscope.nx.classes.function.non_edges", "graphscope.nx.classes.function.non_neighbors", "graphscope.nx.classes.function.number_of_edges", "graphscope.nx.classes.function.number_of_nodes", "graphscope.nx.classes.function.number_of_selfloops", "graphscope.nx.classes.function.selfloop_edges", "graphscope.nx.classes.function.subgraph", "graphscope.nx.classes.function.to_directed", "graphscope.nx.classes.function.to_undirected", "graphscope.nx.generators.atlas.graph_atlas", "graphscope.nx.generators.atlas.graph_atlas_g", "graphscope.nx.generators.classic.balanced_tree", "graphscope.nx.generators.classic.barbell_graph", "graphscope.nx.generators.classic.binomial_tree", "graphscope.nx.generators.classic.circulant_graph", "graphscope.nx.generators.classic.circular_ladder_graph", "graphscope.nx.generators.classic.complete_graph", "graphscope.nx.generators.classic.complete_multipartite_graph", "graphscope.nx.generators.classic.cycle_graph", "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph", "graphscope.nx.generators.classic.empty_graph", "graphscope.nx.generators.classic.full_rary_tree", "graphscope.nx.generators.classic.ladder_graph", "graphscope.nx.generators.classic.lollipop_graph", "graphscope.nx.generators.classic.null_graph", "graphscope.nx.generators.classic.path_graph", "graphscope.nx.generators.classic.star_graph", "graphscope.nx.generators.classic.trivial_graph", "graphscope.nx.generators.classic.turan_graph", "graphscope.nx.generators.classic.wheel_graph", "graphscope.nx.generators.community.LFR_benchmark_graph", "graphscope.nx.generators.community.caveman_graph", "graphscope.nx.generators.community.connected_caveman_graph", "graphscope.nx.generators.community.gaussian_random_partition_graph", "graphscope.nx.generators.community.planted_partition_graph", "graphscope.nx.generators.community.random_partition_graph", "graphscope.nx.generators.community.relaxed_caveman_graph", "graphscope.nx.generators.community.ring_of_cliques", "graphscope.nx.generators.community.stochastic_block_model", "graphscope.nx.generators.community.windmill_graph", "graphscope.nx.generators.degree_seq.configuration_model", "graphscope.nx.generators.degree_seq.degree_sequence_tree", "graphscope.nx.generators.degree_seq.directed_configuration_model", "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph", "graphscope.nx.generators.degree_seq.expected_degree_graph", "graphscope.nx.generators.degree_seq.havel_hakimi_graph", "graphscope.nx.generators.degree_seq.random_degree_sequence_graph", "graphscope.nx.generators.directed.gn_graph", "graphscope.nx.generators.directed.gnc_graph", "graphscope.nx.generators.directed.gnr_graph", "graphscope.nx.generators.directed.random_k_out_graph", "graphscope.nx.generators.directed.scale_free_graph", "graphscope.nx.generators.duplication.duplication_divergence_graph", "graphscope.nx.generators.duplication.partial_duplication_graph", "graphscope.nx.generators.ego.ego_graph", "graphscope.nx.generators.expanders.chordal_cycle_graph", "graphscope.nx.generators.expanders.margulis_gabber_galil_graph", "graphscope.nx.generators.expanders.paley_graph", "graphscope.nx.generators.geometric.geographical_threshold_graph", "graphscope.nx.generators.geometric.random_geometric_graph", "graphscope.nx.generators.geometric.soft_random_geometric_graph", "graphscope.nx.generators.geometric.thresholded_random_geometric_graph", "graphscope.nx.generators.geometric.waxman_graph", "graphscope.nx.generators.harary_graph.hkn_harary_graph", "graphscope.nx.generators.harary_graph.hnm_harary_graph", "graphscope.nx.generators.intersection.general_random_intersection_graph", "graphscope.nx.generators.intersection.k_random_intersection_graph", "graphscope.nx.generators.intersection.uniform_random_intersection_graph", "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph", "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree", "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree", "graphscope.nx.generators.joint_degree_seq.joint_degree_graph", "graphscope.nx.generators.mycielski.mycielski_graph", "graphscope.nx.generators.mycielski.mycielskian", "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees", "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees", "graphscope.nx.generators.small.LCF_graph", "graphscope.nx.generators.small.bull_graph", "graphscope.nx.generators.small.chvatal_graph", "graphscope.nx.generators.small.cubical_graph", "graphscope.nx.generators.small.desargues_graph", "graphscope.nx.generators.small.diamond_graph", "graphscope.nx.generators.small.dodecahedral_graph", "graphscope.nx.generators.small.frucht_graph", "graphscope.nx.generators.small.heawood_graph", "graphscope.nx.generators.small.house_graph", "graphscope.nx.generators.small.house_x_graph", "graphscope.nx.generators.small.icosahedral_graph", "graphscope.nx.generators.small.krackhardt_kite_graph", "graphscope.nx.generators.small.make_small_graph", "graphscope.nx.generators.small.moebius_kantor_graph", "graphscope.nx.generators.small.octahedral_graph", "graphscope.nx.generators.small.pappus_graph", "graphscope.nx.generators.small.petersen_graph", "graphscope.nx.generators.small.sedgewick_maze_graph", "graphscope.nx.generators.small.tetrahedral_graph", "graphscope.nx.generators.small.truncated_cube_graph", "graphscope.nx.generators.small.truncated_tetrahedron_graph", "graphscope.nx.generators.small.tutte_graph", "graphscope.nx.generators.social.davis_southern_women_graph", "graphscope.nx.generators.social.florentine_families_graph", "graphscope.nx.generators.social.karate_club_graph", "graphscope.nx.generators.social.les_miserables_graph", "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge", "graphscope.nx.generators.sudoku.sudoku_graph", "graphscope.nx.generators.trees.prefix_tree", "graphscope.nx.generators.trees.random_tree", "graphscope.nx.generators.triads.triad_graph", "networkx.generators.internet_as_graphs.random_internet_as_graph", "networkx.generators.stochastic.stochastic_graph", "Graph generators", "Graph types", "NetworkX-style API", "Reading graphs", "Graph Transformation", "Operation", "Python API Reference", "Selector", "Session", "Resources Estimator", "GART: Bridging the Gap between Relational OLTP and Graph Workloads", "Getting Started", "GraphAr: Standard Graph Data File Format", "GRIN: Graph Retrieval INterface", "Groot: Persistent Graph Store", "In-memory immutable graphs on Vineyard", "Applications and algorithms", "Scaling and repartitioning", "User Guide and Examples of GAE", "User Guide and Examples of GLE", "Error Codes", "Command-line Utility <code class=\"docutils literal notranslate\"><span class=\"pre\">gs</span></code>", "How to Find logs", "Monitoring", "\u56fe\u5206\u6790\u5f15\u64ce", "\u90e8\u7f72", "\u5f00\u53d1\u8005\u6307\u5357", "\u5e38\u89c1\u95ee\u9898", "\u5feb\u901f\u4e0a\u624b", "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c", "GraphScope: \u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf", "\u5b89\u88c5", "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce", "\u56fe\u5b66\u4e60\u5f15\u64ce", "\u8f7d\u56fe", "\u5165\u95e8\u6559\u7a0b"], "terms": {"The": [0, 1, 2, 4, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 24, 27, 28, 29, 30, 31, 33, 34, 36, 38, 40, 46, 49, 50, 52, 53, 54, 55, 56, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 83, 98, 102, 103, 104, 105, 108, 116, 118, 119, 126, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 154, 155, 159, 160, 161, 164, 165, 167, 169, 170, 175, 178, 183, 184, 185, 186, 187, 188, 191, 194, 197, 200, 202, 203, 204, 206, 207, 209, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 284, 285, 287, 288, 291, 292, 294, 297, 298, 299, 300, 301, 302, 306, 308], "graph": [0, 3, 4, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 22, 23, 24, 28, 29, 33, 34, 40, 47, 48, 49, 50, 52, 54, 58, 60, 65, 69, 72, 73, 74, 75, 76, 82, 83, 84, 85, 86, 87, 90, 92, 93, 95, 97, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 118, 125, 128, 129, 134, 140, 143, 144, 148, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 286, 289, 290, 291, 292, 301, 302, 308, 312, 313, 314, 316, 317, 318], "analyt": [0, 1, 5, 8, 12, 14, 15, 16, 17, 18, 23, 28, 30, 31, 33, 38, 40, 53, 54, 64, 65, 67, 69, 70, 72, 76, 77, 80, 85, 147, 285, 290, 292, 298, 301, 302, 308], "engin": [0, 1, 2, 5, 8, 16, 17, 23, 28, 30, 31, 38, 40, 43, 44, 47, 48, 49, 51, 53, 56, 60, 61, 64, 65, 66, 67, 68, 70, 74, 77, 85, 102, 103, 128, 129, 133, 141, 147, 148, 149, 285, 291, 292, 294, 298, 299, 300, 301, 311, 312], "gae": [0, 3, 10, 12, 14, 15, 30, 40, 46, 47, 54, 55, 63, 66, 70, 71, 72, 77, 102, 103, 148, 309, 310], "graphscop": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 18, 24, 31, 32, 34, 35, 39, 40, 42, 44, 47, 51, 52, 53, 54, 55, 57, 60, 61, 62, 64, 65, 67, 71, 72, 74, 75, 77, 147, 148, 149, 150, 285, 287, 288, 289, 290, 291, 292, 293, 297, 298, 299, 300, 301, 302, 306, 308, 309, 311, 312, 313, 316, 318, 319], "offer": [0, 2, 9, 12, 20, 31, 46, 55, 56, 63, 64, 65, 69, 70, 297], "mani": [0, 6, 10, 12, 14, 24, 30, 31, 33, 34, 40, 43, 48, 50, 57, 64, 66, 68, 134, 141, 188, 232, 234, 285, 297, 302], "which": [0, 2, 6, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 36, 38, 40, 43, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 81, 84, 97, 108, 110, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 148, 149, 150, 164, 189, 191, 204, 205, 206, 214, 216, 233, 234, 235, 242, 244, 245, 263, 275, 277, 279, 283, 284, 285, 287, 288, 289, 291, 292, 294, 296, 297, 298, 299, 300, 302], "enabl": [0, 6, 15, 17, 18, 23, 36, 40, 53, 56, 61, 62, 63, 64, 68, 69, 70, 71, 73, 144, 150, 285, 292, 297, 298, 301, 302, 306], "user": [0, 2, 6, 9, 11, 12, 14, 15, 17, 18, 22, 23, 24, 28, 29, 31, 34, 36, 38, 40, 46, 48, 49, 52, 53, 55, 59, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 133, 135, 136, 137, 138, 139, 140, 142, 145, 148, 285, 291, 292, 294, 297, 298, 301, 312, 316], "analyz": [0, 7, 19, 28, 63, 64, 66, 69, 139, 297], "data": [0, 2, 3, 6, 9, 11, 12, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 31, 36, 40, 44, 46, 48, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 80, 82, 88, 89, 94, 100, 101, 106, 114, 115, 133, 135, 136, 137, 138, 139, 143, 147, 157, 163, 179, 180, 195, 212, 228, 247, 277, 285, 287, 288, 291, 292, 294, 297, 299, 300, 302, 308, 309, 311, 312, 317], "least": [0, 6, 34, 53, 150, 184, 206], "effort": [0, 31, 71, 297], "cover": [0, 6, 15, 38, 59], "wide": [0, 11, 12, 24, 50, 54, 55, 59, 63, 64, 66, 67, 68, 70, 137, 296, 302], "rang": [0, 18, 49, 52, 53, 55, 58, 59, 61, 62, 63, 64, 67, 70, 73, 75, 76, 88, 89, 100, 101, 106, 114, 115, 133, 138, 142, 190, 192, 194, 197, 200, 212, 218, 232, 233, 234, 235, 263, 285, 290, 297, 308, 311, 312, 316, 317], "applic": [0, 6, 8, 10, 11, 14, 24, 31, 40, 46, 47, 48, 55, 56, 65, 66, 67, 68, 71, 73, 74, 76, 85, 137, 216, 240, 296, 306], "commun": [0, 6, 8, 9, 12, 15, 16, 18, 24, 28, 46, 55, 63, 64, 65, 66, 69, 73, 74, 77, 135, 143, 236, 277, 282, 286, 296], "detect": [0, 6, 8, 9, 55, 63, 64, 66, 67, 69, 70, 74, 204, 208, 209, 210], "etc": [0, 6, 7, 15, 29, 43, 48, 56, 59, 64, 65, 67, 68, 71, 75, 133, 136, 137, 138, 141, 152, 164, 173, 178, 179, 285, 287, 298], "ar": [0, 2, 4, 6, 8, 9, 10, 12, 14, 15, 16, 17, 20, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 40, 43, 46, 47, 48, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 80, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 150, 159, 160, 161, 174, 175, 180, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 203, 204, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 224, 228, 230, 231, 232, 233, 234, 235, 236, 240, 242, 244, 246, 247, 250, 268, 277, 278, 279, 280, 281, 285, 288, 291, 292, 294, 296, 297, 298, 299, 301, 306, 318], "implement": [0, 1, 8, 9, 12, 16, 18, 22, 24, 31, 43, 46, 48, 52, 55, 56, 59, 63, 67, 70, 73, 74, 77, 133, 135, 137, 138, 139, 141, 144, 145, 147, 148, 150, 226, 227, 231, 232, 234, 236, 237, 238, 279, 280, 288, 308], "pie": [0, 1, 3, 8, 12, 31, 46, 53, 54, 55, 66, 77, 80, 290, 302, 312, 314], "program": [0, 3, 9, 15, 16, 17, 18, 20, 23, 24, 46, 54, 55, 59, 63, 65, 66, 68, 70, 71, 77, 133, 138, 139, 297, 298, 302], "model": [0, 1, 3, 8, 9, 18, 43, 46, 48, 53, 54, 55, 58, 59, 60, 63, 64, 66, 67, 70, 77, 135, 137, 139, 140, 204, 208, 212, 214, 216, 218, 224, 226, 227, 232, 233, 234, 235, 236, 240, 241, 275, 282, 292, 296, 302, 312], "highli": [0, 12, 31, 53, 55, 65, 66, 296], "optim": [0, 9, 12, 14, 31, 46, 48, 53, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 133, 145, 297, 299, 312], "best": [0, 16, 63, 65, 67, 70, 71, 74, 285, 308], "perform": [0, 3, 6, 9, 12, 14, 17, 22, 23, 24, 38, 46, 48, 52, 53, 54, 56, 63, 65, 66, 68, 69, 70, 75, 135, 139, 141, 242, 247, 277, 289, 291, 294, 298, 300, 302], "can": [0, 1, 2, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 77, 81, 83, 98, 109, 110, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 159, 160, 163, 167, 188, 191, 204, 205, 206, 213, 214, 216, 232, 233, 234, 235, 242, 246, 247, 254, 256, 258, 263, 266, 271, 272, 277, 279, 285, 288, 289, 291, 292, 294, 296, 297, 298, 299, 300, 302, 306, 308], "us": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 22, 23, 24, 29, 32, 33, 34, 35, 36, 38, 40, 43, 44, 46, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 82, 83, 109, 110, 119, 124, 133, 134, 135, 136, 137, 139, 141, 144, 146, 147, 148, 149, 150, 169, 170, 179, 191, 194, 198, 204, 205, 206, 212, 214, 218, 219, 221, 223, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 242, 246, 250, 263, 268, 277, 279, 282, 283, 285, 287, 288, 290, 292, 296, 297, 300, 301, 302, 306, 308, 312, 318], "them": [0, 1, 2, 6, 8, 12, 14, 15, 17, 24, 27, 28, 31, 33, 38, 40, 43, 48, 52, 53, 61, 63, 64, 66, 68, 70, 71, 72, 82, 133, 136, 145, 190, 277, 291, 297, 298, 308], "out": [0, 6, 9, 12, 28, 29, 31, 34, 44, 49, 56, 64, 65, 66, 67, 70, 74, 76, 133, 136, 137, 139, 147, 150, 207, 216, 217, 224, 225, 228, 242, 243, 279, 283, 285, 297, 298, 299, 301, 312, 316], "box": [0, 65, 278], "manner": [0, 2, 17, 18, 30, 33, 64, 66, 67], "here": [0, 4, 10, 14, 16, 17, 18, 20, 23, 28, 33, 34, 35, 38, 40, 47, 48, 49, 50, 52, 53, 55, 57, 58, 61, 62, 67, 68, 71, 74, 134, 135, 139, 142, 144, 145, 147, 150, 204, 216, 231, 232, 234, 243, 263, 285, 288, 296, 297, 298, 312], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 74, 75, 76, 77, 78, 81, 83, 109, 119, 121, 125, 126, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 158, 160, 162, 164, 165, 166, 167, 168, 169, 170, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 306, 308, 311, 312, 316, 317, 318], "full": [0, 12, 16, 17, 18, 22, 31, 49, 55, 56, 59, 63, 68, 70, 74, 133, 136, 137, 139, 195, 298, 302, 308, 317], "list": [0, 16, 19, 20, 31, 34, 35, 36, 47, 49, 52, 53, 55, 61, 65, 67, 68, 72, 74, 76, 94, 95, 104, 105, 119, 134, 137, 139, 147, 150, 159, 161, 164, 171, 173, 179, 180, 183, 184, 188, 190, 191, 209, 212, 214, 216, 217, 218, 219, 220, 232, 236, 239, 242, 243, 248, 250, 263, 279, 285, 286, 288, 292, 298, 301, 306, 313, 316], "support": [0, 3, 6, 9, 10, 12, 17, 18, 20, 22, 24, 29, 30, 31, 34, 40, 43, 46, 47, 48, 49, 50, 53, 54, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 74, 75, 77, 83, 133, 134, 135, 137, 138, 139, 141, 142, 144, 147, 150, 285, 288, 291, 292, 294, 296, 298, 299, 301, 302, 311], "bf": [0, 15, 17, 31, 71, 74, 308], "df": [0, 31], "hit": [0, 31, 74, 75, 150, 286, 291, 308], "lpa": [0, 7, 31, 64, 74, 308], "sssp": [0, 7, 8, 9, 14, 17, 18, 22, 24, 31, 39, 64, 71, 74, 75, 81, 291, 292, 300, 301, 308], "thi": [0, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 43, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 91, 106, 109, 124, 133, 134, 135, 137, 138, 139, 140, 141, 143, 145, 147, 150, 167, 181, 182, 183, 184, 185, 186, 191, 194, 196, 197, 204, 205, 206, 208, 209, 212, 213, 214, 216, 218, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 244, 246, 263, 265, 268, 273, 277, 279, 280, 282, 283, 284, 285, 287, 289, 291, 292, 293, 294, 296, 297, 298, 302, 308], "find": [0, 4, 8, 9, 22, 33, 34, 36, 38, 40, 43, 46, 49, 50, 52, 53, 61, 64, 66, 67, 71, 73, 81, 127, 132, 150, 155, 174, 175, 204, 292, 297, 298], "problem": [0, 2, 6, 9, 11, 14, 15, 24, 34, 35, 36, 40, 42, 43, 48, 53, 66, 68], "from": [0, 2, 3, 4, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 22, 23, 24, 27, 28, 29, 31, 33, 34, 35, 38, 40, 43, 44, 47, 48, 49, 50, 52, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 81, 98, 103, 104, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 164, 183, 185, 190, 192, 194, 197, 204, 207, 211, 212, 213, 214, 216, 219, 224, 225, 227, 228, 232, 233, 234, 235, 236, 237, 244, 251, 260, 272, 277, 279, 280, 284, 285, 287, 288, 291, 292, 297, 299, 308, 312, 313, 316, 318], "given": [0, 7, 9, 14, 20, 31, 43, 47, 48, 52, 53, 59, 64, 67, 68, 70, 74, 137, 139, 142, 145, 147, 149, 184, 191, 202, 214, 215, 216, 217, 218, 219, 220, 228, 236, 237, 238, 242, 243, 244, 245, 249, 277, 280, 281, 284, 285, 291, 292, 296, 297, 300, 301], "weight": [0, 7, 19, 20, 39, 52, 53, 59, 64, 66, 71, 74, 104, 133, 135, 136, 137, 138, 139, 142, 145, 150, 152, 153, 154, 158, 169, 170, 212, 224, 228, 232, 235, 275, 283, 284, 285, 287, 292, 317], "As": [0, 7, 12, 15, 16, 18, 20, 22, 24, 28, 40, 48, 50, 53, 58, 59, 63, 67, 133, 135, 141, 142, 143, 214, 296, 297], "result": [0, 2, 4, 6, 7, 9, 12, 14, 15, 16, 17, 18, 19, 24, 34, 43, 48, 52, 53, 55, 59, 63, 64, 66, 67, 68, 73, 74, 75, 82, 88, 89, 98, 99, 106, 108, 110, 111, 114, 115, 127, 133, 136, 137, 139, 141, 142, 144, 147, 148, 150, 214, 216, 219, 238, 285, 298, 300, 308, 312], "comput": [0, 3, 6, 9, 14, 15, 16, 17, 18, 19, 22, 23, 24, 31, 34, 36, 48, 52, 53, 55, 56, 59, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 137, 138, 141, 143, 150, 231, 234, 235, 239, 244, 253, 276, 277, 289, 292, 298, 299, 308], "minimum": [0, 6, 40, 52, 53, 74, 204, 292], "distanc": [0, 7, 15, 17, 18, 64, 74, 150, 185, 224, 228, 232, 233, 234, 235, 236, 254, 266, 308], "ani": [0, 2, 17, 19, 20, 22, 24, 28, 31, 33, 34, 35, 47, 48, 49, 50, 52, 53, 63, 66, 67, 70, 72, 73, 75, 83, 90, 137, 147, 148, 149, 150, 161, 165, 180, 204, 209, 211, 214, 216, 232, 234, 236, 285, 288, 291, 297], "vertex": [0, 2, 3, 6, 9, 12, 14, 15, 16, 17, 18, 19, 22, 27, 31, 39, 46, 47, 49, 52, 54, 55, 56, 59, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 80, 103, 134, 135, 136, 137, 138, 139, 142, 145, 147, 149, 150, 224, 229, 246, 247, 263, 288, 290, 294, 296, 298, 299, 302, 308, 313], "other": [0, 3, 6, 8, 9, 10, 12, 14, 16, 20, 23, 24, 27, 29, 31, 34, 40, 43, 46, 48, 49, 52, 53, 55, 56, 59, 61, 63, 65, 66, 67, 68, 69, 70, 74, 76, 133, 135, 137, 139, 143, 146, 147, 148, 150, 154, 185, 187, 191, 194, 204, 213, 219, 225, 234, 235, 277, 285, 287, 288, 291, 292, 296, 297, 298, 301], "vertic": [0, 6, 7, 9, 12, 14, 15, 16, 17, 18, 19, 22, 24, 39, 44, 47, 48, 49, 50, 52, 56, 59, 63, 64, 66, 67, 68, 73, 74, 75, 76, 105, 134, 135, 136, 137, 138, 139, 142, 145, 147, 208, 219, 229, 231, 246, 247, 258, 260, 271, 272, 278, 291, 292, 294, 296, 297, 298, 299, 308, 312, 313], "all_pairs_shortest_path_length": [0, 31], "refer": [0, 2, 4, 9, 10, 12, 16, 17, 23, 24, 27, 31, 33, 34, 38, 40, 47, 49, 50, 52, 53, 56, 57, 59, 66, 67, 68, 70, 74, 92, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 150, 183, 184, 195, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 284, 285, 298, 302, 316], "tendenc": [0, 20], "similar": [0, 10, 12, 20, 34, 47, 48, 49, 53, 56, 59, 63, 66, 70, 74, 133, 134, 135, 136, 139, 142, 147, 277, 285], "over": [0, 9, 12, 15, 16, 18, 22, 24, 31, 40, 43, 52, 54, 59, 63, 65, 66, 70, 71, 74, 76, 136, 150, 172, 173, 179, 231, 285, 294, 302], "dissimilar": 0, "measur": [0, 6, 20, 48, 66, 68, 74, 134, 150, 228, 229, 262], "extent": [0, 6], "same": [0, 2, 6, 10, 15, 17, 20, 22, 29, 34, 44, 48, 52, 53, 56, 66, 67, 71, 134, 135, 139, 140, 143, 145, 147, 149, 150, 178, 179, 200, 208, 209, 214, 216, 242, 243, 245, 278, 279, 285, 292, 296, 297, 298, 299, 300], "properti": [0, 6, 7, 9, 12, 15, 17, 20, 39, 44, 46, 64, 66, 68, 73, 74, 75, 76, 92, 108, 122, 123, 124, 136, 139, 147, 148, 232, 247, 277, 282, 285, 288, 291, 292, 294, 296, 298, 299, 306, 312, 313, 316], "each": [0, 6, 9, 10, 12, 14, 15, 16, 19, 20, 24, 27, 31, 32, 33, 38, 44, 47, 48, 49, 52, 53, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 123, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 147, 150, 159, 161, 179, 180, 185, 189, 191, 196, 202, 204, 206, 207, 208, 210, 211, 213, 214, 216, 217, 219, 224, 227, 229, 232, 233, 234, 235, 236, 239, 240, 242, 244, 245, 250, 253, 265, 270, 275, 279, 281, 282, 283, 285, 291, 292, 294, 296, 297, 298, 299, 302, 306], "attribute_assort": [0, 31], "nearest": [0, 74], "neighbor": [0, 6, 9, 14, 17, 18, 39, 52, 53, 56, 59, 66, 67, 68, 74, 76, 133, 134, 136, 137, 139, 141, 142, 143, 145, 146, 150, 155, 156, 175, 227, 228, 242, 245, 278, 285, 294, 297, 308], "return": [0, 6, 9, 15, 18, 20, 39, 48, 52, 53, 59, 61, 67, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 291, 292, 294, 297, 308, 317], "success": [0, 22, 77, 135, 219, 250], "0": [0, 9, 10, 14, 15, 16, 17, 18, 20, 22, 23, 24, 27, 28, 29, 32, 36, 40, 43, 47, 50, 52, 53, 56, 58, 59, 61, 62, 64, 71, 73, 74, 75, 76, 89, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 152, 153, 154, 156, 160, 161, 164, 165, 169, 179, 183, 184, 186, 187, 188, 189, 191, 194, 196, 197, 199, 200, 201, 203, 204, 207, 208, 209, 210, 212, 213, 214, 216, 217, 220, 223, 225, 232, 233, 234, 235, 236, 242, 243, 247, 250, 263, 268, 277, 279, 280, 285, 287, 288, 292, 294, 297, 298, 299, 300, 306, 308, 310, 311, 312, 313, 315, 316, 317, 318], "1": [0, 6, 7, 9, 10, 14, 15, 17, 19, 20, 22, 23, 24, 27, 30, 31, 32, 34, 36, 43, 44, 47, 48, 49, 50, 52, 53, 56, 58, 59, 61, 62, 64, 67, 68, 71, 74, 75, 133, 136, 138, 139, 140, 142, 147, 148, 149, 150, 152, 153, 154, 156, 160, 161, 164, 169, 170, 173, 178, 179, 183, 185, 186, 187, 188, 189, 191, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 285, 287, 288, 292, 297, 298, 299, 300, 306, 308, 312, 313, 315, 316, 317, 318], "2": [0, 6, 9, 10, 14, 17, 18, 19, 20, 22, 23, 30, 31, 34, 36, 44, 47, 48, 50, 52, 53, 56, 58, 59, 61, 62, 64, 67, 68, 71, 74, 75, 133, 136, 137, 138, 139, 140, 142, 150, 152, 153, 154, 156, 164, 165, 169, 170, 173, 178, 179, 186, 187, 188, 191, 196, 197, 202, 204, 206, 208, 210, 211, 212, 214, 215, 216, 218, 219, 220, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 252, 254, 256, 257, 258, 262, 263, 265, 267, 268, 270, 277, 278, 279, 280, 285, 287, 288, 292, 297, 298, 299, 300, 308, 309, 310, 312, 313, 315, 316, 317, 318], "average_degree_connect": [0, 74, 308], "source_degree_typ": 0, "target_degree_typ": 0, "paramet": [0, 2, 6, 9, 15, 16, 17, 27, 40, 44, 48, 52, 53, 59, 68, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 124, 127, 132, 134, 135, 137, 139, 142, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 161, 163, 164, 165, 167, 168, 169, 170, 174, 175, 179, 180, 183, 185, 187, 188, 190, 191, 192, 194, 195, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 292, 297, 298], "str": [0, 20, 61, 62, 74, 75, 76, 81, 82, 88, 89, 90, 92, 98, 100, 101, 102, 103, 106, 108, 109, 110, 111, 114, 115, 127, 145, 147, 148, 163, 165, 279, 285, 287, 291, 292, 298, 313, 318], "target": [0, 6, 17, 22, 24, 46, 56, 57, 63, 64, 68, 70, 74, 76, 139, 141, 147, 150, 221, 223, 242, 245, 277, 298, 308], "base": [0, 6, 9, 11, 12, 14, 18, 30, 31, 43, 48, 49, 52, 53, 55, 59, 63, 64, 66, 67, 68, 71, 73, 74, 75, 96, 104, 133, 135, 137, 139, 140, 141, 150, 221, 260, 275, 285, 297, 298, 302, 308, 317], "v": [0, 2, 6, 7, 9, 10, 14, 15, 18, 20, 22, 24, 33, 39, 43, 47, 49, 50, 53, 59, 64, 67, 68, 73, 74, 75, 76, 133, 136, 137, 138, 139, 142, 145, 147, 148, 149, 150, 156, 179, 204, 207, 212, 214, 218, 224, 227, 232, 235, 242, 245, 247, 279, 285, 291, 292, 297, 298, 308, 312, 316, 317], "sum": [0, 20, 49, 66, 74, 76, 150, 204, 209, 212, 214, 215, 216, 225, 232, 235, 236, 243, 244, 283, 285, 316], "fraction": [0, 74, 150, 204], "pass": [0, 2, 6, 9, 10, 14, 15, 16, 18, 20, 24, 28, 34, 48, 52, 53, 59, 67, 68, 74, 76, 80, 139, 143, 145, 194, 232, 234, 277, 285, 289, 298, 308, 313, 318], "through": [0, 2, 6, 12, 14, 15, 16, 19, 22, 24, 28, 30, 31, 34, 46, 47, 48, 50, 52, 53, 56, 59, 64, 66, 67, 68, 70, 75, 77, 134, 135, 137, 138, 139, 144, 145, 147, 150, 180, 194, 211, 250, 285, 297, 298], "betweenness_centr": [0, 31, 150], "normal": [0, 6, 28, 53, 74, 139, 147, 150, 207, 297], "endpoint": [0, 9, 10, 28, 29, 47, 52, 61, 64, 73, 139, 148, 150, 292, 294, 298, 308, 316, 318], "bool": [0, 6, 14, 15, 20, 39, 73, 74, 76, 121, 147, 150, 157, 167, 169, 170, 179, 208, 218, 224, 228, 244, 285, 287, 292, 297, 318], "whether": [0, 34, 47, 48, 52, 53, 63, 67, 73, 74, 134, 135, 139, 147, 207, 209, 212, 232, 243, 244, 285, 297, 298, 299], "should": [0, 6, 9, 16, 19, 20, 22, 23, 28, 34, 47, 48, 49, 50, 52, 53, 63, 68, 73, 74, 81, 84, 97, 108, 143, 144, 147, 149, 150, 180, 204, 232, 233, 234, 235, 285, 287, 294, 297, 298, 299, 300], "includ": [0, 3, 6, 7, 9, 12, 16, 17, 20, 22, 24, 28, 32, 33, 34, 43, 46, 47, 48, 52, 53, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 135, 136, 139, 141, 147, 150, 165, 204, 212, 218, 228, 277, 284, 285, 296, 297, 298, 306], "count": [0, 6, 47, 48, 49, 50, 53, 59, 64, 66, 73, 74, 137, 138, 142, 143, 146, 150, 160, 218, 285, 298, 312, 316], "an": [0, 6, 7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 28, 29, 31, 34, 36, 38, 40, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 81, 84, 85, 86, 87, 88, 89, 91, 92, 94, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 114, 115, 116, 118, 119, 128, 129, 133, 134, 135, 137, 138, 139, 141, 142, 144, 145, 147, 149, 150, 161, 162, 167, 172, 173, 179, 180, 182, 183, 184, 186, 189, 190, 191, 192, 194, 195, 197, 199, 200, 203, 205, 206, 214, 216, 217, 218, 220, 221, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 241, 242, 243, 244, 245, 246, 250, 252, 258, 263, 267, 270, 271, 275, 277, 278, 279, 280, 282, 283, 285, 288, 289, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302], "travers": [0, 6, 15, 17, 46, 47, 48, 56, 63, 64, 65, 66, 133, 136, 139, 141, 145, 148, 279, 285, 294, 297, 298, 299, 308, 316], "It": [0, 2, 4, 6, 9, 10, 11, 12, 15, 16, 24, 28, 29, 31, 34, 38, 40, 43, 47, 48, 49, 50, 52, 53, 55, 56, 62, 64, 65, 66, 68, 69, 70, 73, 74, 77, 125, 133, 134, 135, 139, 141, 143, 147, 148, 150, 154, 209, 213, 237, 238, 242, 245, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 266, 269, 271, 272, 277, 285, 292, 296, 297, 298, 299, 306], "start": [0, 2, 6, 9, 16, 19, 20, 28, 29, 30, 34, 36, 46, 47, 52, 59, 61, 67, 69, 72, 73, 75, 133, 137, 139, 148, 149, 150, 185, 210, 214, 216, 217, 220, 236, 250, 279, 287, 292, 297, 298, 302], "root": [0, 4, 28, 30, 33, 40, 65, 185, 187, 278, 279, 296], "explor": [0, 17, 43, 52, 53, 63, 64, 67, 297], "present": [0, 2, 20, 28, 53, 59, 60, 61, 62, 63, 64, 66, 77, 150, 161, 204, 285, 296, 297], "prior": [0, 12, 31, 53, 55, 63], "move": [0, 6, 65, 139, 242, 245, 292], "next": [0, 6, 9, 12, 14, 16, 24, 27, 29, 31, 46, 47, 53, 56, 59, 60, 63, 68, 133, 134, 137, 139, 141, 143, 144, 145, 211, 279, 291, 294, 297, 298, 300], "level": [0, 6, 12, 35, 43, 48, 63, 64, 65, 68, 74, 141, 195, 242, 243, 282, 297, 298], "int": [0, 14, 15, 16, 17, 18, 19, 20, 23, 24, 39, 61, 67, 73, 74, 75, 76, 109, 134, 135, 136, 137, 138, 139, 142, 145, 146, 147, 149, 150, 178, 183, 185, 187, 190, 192, 194, 195, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 220, 221, 222, 223, 224, 226, 227, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 246, 247, 248, 249, 280, 285, 287, 292, 294, 298, 308, 316, 318], "origin": [0, 6, 9, 12, 22, 48, 52, 56, 61, 62, 67, 68, 73, 75, 103, 133, 135, 147, 148, 204, 226, 232, 271, 279, 283, 285, 291, 292, 298, 299], "reciproc": [0, 150], "n": [0, 19, 20, 27, 35, 48, 52, 53, 55, 59, 68, 71, 74, 75, 137, 139, 142, 144, 150, 160, 164, 165, 167, 171, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 206, 207, 208, 213, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 246, 247, 250, 263, 278, 279, 280, 282, 285, 298], "reachabl": [0, 150], "node": [0, 10, 15, 18, 27, 28, 40, 43, 58, 59, 60, 63, 64, 66, 68, 70, 72, 74, 75, 76, 95, 99, 105, 108, 109, 128, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 171, 173, 175, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 297, 299, 308, 311, 312, 317], "wasserman": 0, "faust": 0, "propos": [0, 3, 6, 12, 14, 24, 31, 55, 63, 65, 66, 68, 70, 137, 143, 294, 297], "improv": [0, 6, 9, 17, 19, 23, 46, 49, 65, 68, 69, 70, 301], "formula": 0, "more": [0, 2, 3, 4, 6, 7, 9, 12, 14, 15, 16, 17, 20, 28, 29, 30, 31, 33, 34, 35, 38, 40, 43, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 63, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 133, 134, 137, 138, 139, 143, 144, 147, 150, 183, 224, 231, 232, 246, 247, 279, 285, 287, 292, 296, 297, 298, 301, 302], "than": [0, 15, 18, 23, 24, 29, 34, 40, 44, 47, 48, 52, 53, 54, 59, 63, 66, 67, 69, 70, 74, 135, 137, 139, 146, 150, 160, 194, 202, 204, 206, 211, 213, 224, 226, 235, 292, 297, 298, 301, 302], "one": [0, 2, 6, 9, 10, 12, 14, 15, 19, 20, 22, 24, 27, 29, 33, 34, 38, 40, 43, 46, 47, 48, 52, 53, 56, 59, 64, 67, 68, 70, 73, 74, 76, 81, 82, 98, 124, 133, 134, 135, 136, 137, 139, 143, 147, 150, 159, 183, 184, 187, 188, 191, 200, 201, 204, 213, 214, 219, 221, 222, 223, 224, 225, 227, 242, 245, 253, 256, 260, 263, 269, 270, 271, 277, 279, 281, 285, 291, 292, 294, 296, 297, 298, 301, 312, 316], "compon": [0, 6, 12, 19, 29, 30, 31, 35, 38, 40, 46, 50, 63, 65, 66, 73, 74, 150, 218, 232, 291, 297, 298], "ratio": [0, 53, 277], "actor": [0, 53, 63, 262], "group": [0, 2, 40, 48, 64, 66, 67, 73, 141, 147, 208, 209, 210, 212, 229, 257, 275, 296, 298, 316, 318], "who": [0, 11, 29, 53, 63, 67, 140, 145, 298], "closeness_centr": [0, 31], "wf": 0, "quantifi": 0, "how": [0, 2, 8, 9, 12, 14, 16, 20, 27, 28, 31, 33, 35, 40, 42, 43, 46, 47, 50, 51, 52, 53, 54, 60, 61, 62, 63, 64, 66, 67, 68, 70, 72, 75, 77, 85, 134, 135, 139, 141, 292, 293, 297, 299, 301, 302, 312], "its": [0, 6, 7, 9, 10, 12, 14, 18, 24, 27, 31, 36, 43, 49, 52, 53, 56, 58, 59, 62, 63, 64, 66, 68, 74, 75, 76, 124, 133, 135, 139, 143, 145, 147, 150, 192, 195, 202, 204, 224, 229, 242, 245, 253, 272, 282, 292, 297, 298, 300], "neighbour": [0, 165], "being": [0, 59, 67, 147, 184, 214, 294, 297, 298, 299], "cliqu": [0, 6, 53, 63, 66, 205, 206, 210, 211, 213, 227], "complet": [0, 14, 31, 36, 44, 48, 53, 67, 133, 135, 139, 160, 185, 186, 188, 190, 191, 197, 202, 211, 242, 245, 269, 285, 298], "have": [0, 2, 4, 6, 8, 9, 11, 12, 15, 19, 20, 23, 24, 27, 28, 29, 33, 34, 36, 38, 40, 43, 47, 48, 49, 50, 52, 53, 54, 55, 57, 59, 63, 64, 66, 67, 68, 70, 74, 75, 77, 81, 133, 134, 135, 136, 137, 139, 140, 142, 143, 145, 147, 150, 160, 164, 167, 179, 185, 190, 195, 204, 214, 215, 216, 218, 224, 227, 242, 243, 245, 261, 265, 279, 285, 291, 292, 296, 297, 298, 300, 302, 306, 312], "edg": [0, 6, 7, 9, 12, 15, 17, 18, 19, 22, 24, 27, 34, 39, 44, 47, 48, 49, 52, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 73, 74, 75, 76, 86, 87, 90, 95, 104, 108, 109, 128, 133, 134, 135, 136, 137, 138, 139, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 154, 157, 160, 161, 163, 164, 165, 167, 169, 170, 173, 174, 176, 178, 179, 180, 184, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 201, 202, 204, 206, 209, 210, 212, 214, 215, 216, 218, 220, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 275, 279, 282, 283, 284, 285, 286, 288, 291, 292, 294, 296, 298, 299, 300, 308, 312, 313, 317], "u": [0, 6, 14, 16, 18, 20, 34, 39, 40, 49, 53, 64, 74, 139, 143, 145, 147, 150, 156, 179, 191, 204, 218, 224, 227, 232, 235, 247, 285, 297, 308, 318], "equal": [0, 10, 40, 52, 53, 58, 62, 64, 150, 202, 204, 235, 240, 278, 312], "degree_assortativity_coeffici": [0, 74, 308], "hold": [0, 10, 20, 52, 73, 74, 75, 76, 98, 102, 103, 111, 135, 147, 148, 150, 285, 291], "numer": [0, 20, 63, 65, 66, 74, 75, 150, 285, 291, 297], "valu": [0, 6, 9, 15, 18, 20, 24, 29, 33, 39, 40, 47, 48, 56, 61, 66, 68, 73, 74, 75, 76, 110, 119, 127, 132, 133, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 149, 150, 159, 179, 194, 204, 232, 233, 234, 235, 242, 244, 245, 277, 278, 279, 285, 287, 288, 291, 292, 294, 297, 298, 299, 308, 316, 317, 318], "If": [0, 2, 6, 7, 8, 14, 15, 17, 20, 23, 27, 28, 29, 30, 33, 34, 40, 47, 50, 52, 53, 58, 64, 70, 74, 75, 77, 127, 132, 134, 135, 139, 140, 143, 144, 146, 147, 148, 149, 150, 155, 156, 158, 165, 169, 170, 179, 180, 185, 186, 187, 188, 190, 191, 192, 194, 195, 197, 199, 200, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 277, 280, 281, 283, 285, 287, 288, 291, 292, 294, 297, 298, 299, 306], "fals": [0, 15, 17, 18, 19, 20, 44, 47, 73, 74, 76, 133, 134, 135, 139, 145, 147, 149, 150, 163, 167, 169, 170, 179, 181, 182, 207, 208, 209, 212, 218, 228, 243, 285, 288, 292, 298, 308, 317], "ha": [0, 2, 6, 8, 9, 10, 12, 14, 15, 17, 23, 29, 31, 34, 36, 38, 40, 43, 48, 49, 50, 51, 53, 56, 59, 60, 61, 63, 64, 67, 68, 69, 70, 73, 74, 75, 76, 77, 124, 133, 134, 135, 136, 137, 139, 142, 143, 144, 145, 147, 148, 150, 167, 169, 170, 173, 178, 179, 185, 200, 202, 204, 215, 219, 224, 232, 233, 234, 235, 236, 242, 245, 251, 252, 256, 257, 261, 267, 269, 272, 275, 277, 279, 283, 285, 289, 291, 292, 300, 302, 312, 313, 316], "adjac": [0, 10, 16, 20, 24, 52, 53, 68, 74, 136, 141, 150, 173, 206, 230, 248, 263, 277, 278, 285, 286, 297], "direct": [0, 4, 9, 10, 15, 44, 47, 53, 56, 59, 62, 64, 68, 73, 74, 93, 125, 133, 135, 139, 142, 145, 147, 150, 155, 160, 166, 181, 192, 205, 206, 207, 208, 209, 212, 216, 217, 219, 228, 229, 230, 231, 242, 243, 252, 279, 283, 285, 286, 288, 296, 297, 299, 313, 317, 318], "three": [0, 6, 10, 12, 14, 18, 27, 31, 38, 47, 53, 63, 65, 70, 71, 77, 134, 137, 138, 139, 142, 143, 144, 145, 150, 179, 184, 191, 267, 272, 281, 285, 298, 302], "separ": [0, 6, 17, 27, 33, 47, 53, 63, 70, 134, 135, 232, 287, 297, 298], "defin": [0, 6, 10, 12, 18, 20, 24, 28, 40, 46, 47, 49, 52, 53, 55, 58, 61, 63, 64, 65, 67, 73, 74, 77, 92, 133, 134, 137, 139, 142, 144, 145, 150, 187, 209, 211, 234, 291, 292, 296, 297, 298, 312], "name": [0, 2, 4, 6, 12, 16, 17, 20, 22, 23, 27, 28, 29, 30, 33, 34, 35, 38, 40, 48, 49, 52, 53, 63, 65, 67, 73, 74, 75, 76, 81, 119, 134, 136, 139, 141, 143, 145, 147, 148, 150, 169, 170, 184, 251, 258, 263, 275, 281, 285, 287, 288, 291, 292, 296, 297, 298, 306, 308, 309, 311, 316, 318], "both": [0, 2, 10, 12, 18, 19, 20, 31, 49, 50, 56, 62, 63, 64, 65, 66, 67, 68, 74, 76, 133, 134, 135, 147, 148, 149, 164, 173, 178, 179, 184, 204, 228, 231, 236, 242, 245, 292, 294, 296, 297, 298, 300, 301, 315, 316], "degree_centr": [0, 31, 43, 74, 150, 286, 308], "centrality_typ": [0, 74], "appli": [0, 6, 9, 10, 12, 24, 28, 46, 47, 48, 52, 54, 56, 63, 64, 66, 70, 227, 234, 250, 277, 294, 297, 298, 300, 302], "far": [0, 63, 134], "possibl": [0, 6, 15, 40, 48, 56, 67, 68, 74, 135, 141, 142, 150, 218, 226, 227, 242, 243, 244, 245, 277, 281, 297], "along": [0, 6, 10, 20, 24, 36, 49, 52, 56, 76, 135, 139, 145, 279, 285, 299], "branch": [0, 53, 139, 185, 195, 316], "befor": [0, 17, 22, 23, 27, 28, 29, 34, 53, 59, 61, 73, 74, 77, 133, 139, 146, 185, 187, 188, 190, 192, 195, 197, 199, 200, 203, 214, 216, 217, 219, 221, 222, 223, 229, 230, 231, 237, 238, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 280, 287, 294, 297, 298, 300], "backtrack": 0, "influenc": [0, 28, 150], "relationship": [0, 40, 48, 53, 56, 59, 63, 66, 68, 134, 135, 145, 297, 298], "high": [0, 6, 9, 43, 44, 48, 53, 64, 65, 66, 68, 69, 70, 71, 141, 219, 250, 292, 294, 298], "score": [0, 53, 68], "contribut": [0, 46, 297], "low": [0, 6, 7, 30, 48, 58, 63, 64, 68, 69, 70, 277, 298], "A": [0, 6, 7, 9, 10, 24, 28, 29, 34, 43, 50, 53, 56, 58, 63, 65, 66, 67, 68, 71, 73, 74, 75, 76, 82, 83, 85, 86, 87, 90, 93, 95, 104, 105, 109, 110, 119, 137, 138, 139, 142, 144, 147, 148, 149, 150, 152, 153, 154, 156, 157, 159, 161, 163, 164, 165, 167, 168, 169, 170, 173, 178, 179, 180, 183, 184, 185, 187, 188, 190, 194, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 220, 224, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 251, 253, 262, 273, 277, 278, 279, 280, 282, 283, 285, 287, 292, 296, 297, 298, 299, 300], "mean": [0, 2, 20, 27, 29, 33, 34, 38, 47, 48, 49, 61, 73, 75, 80, 121, 135, 138, 139, 149, 150, 190, 207, 214, 224, 233, 234, 235, 285, 288, 291, 292, 294, 297, 298, 300], "themselv": [0, 48, 53, 56, 279], "eigenvector_centr": [0, 31, 74, 150, 286, 308], "toler": [0, 74, 150, 204], "max_round": [0, 74, 308], "doubl": [0, 9, 14, 16, 17, 18, 39, 67, 71, 76, 134, 144, 255, 279, 300, 308, 316, 318], "error": [0, 2, 33, 34, 35, 40, 46, 48, 50, 73, 74, 139, 143, 147, 150, 184, 285, 298], "check": [0, 6, 12, 17, 27, 28, 29, 31, 32, 34, 35, 40, 47, 48, 53, 59, 61, 66, 67, 74, 143, 147, 150, 243, 244, 285, 292, 297, 298, 306, 311, 312], "converg": [0, 6, 9, 14, 24, 68, 71, 74, 150], "maximum": [0, 47, 52, 53, 66, 74, 136, 150, 204, 220, 235, 236, 237, 238, 243, 284], "number": [0, 8, 9, 19, 20, 24, 27, 43, 47, 50, 51, 52, 53, 56, 60, 61, 64, 66, 68, 71, 73, 74, 76, 135, 136, 137, 138, 139, 142, 146, 150, 160, 165, 167, 176, 177, 178, 183, 184, 186, 188, 191, 195, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 258, 263, 268, 275, 277, 278, 280, 282, 283, 284, 285, 292, 294, 297, 298, 299, 306, 312, 316], "iter": [0, 6, 9, 14, 16, 17, 19, 20, 24, 52, 56, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 74, 76, 133, 136, 145, 149, 150, 152, 153, 154, 155, 156, 161, 172, 173, 174, 175, 179, 180, 190, 191, 192, 194, 197, 199, 200, 203, 204, 232, 233, 234, 235, 236, 242, 245, 247, 279, 285, 308, 312, 317], "import": [0, 2, 7, 10, 15, 16, 17, 18, 19, 20, 22, 27, 28, 29, 33, 34, 35, 43, 46, 47, 48, 50, 53, 54, 56, 58, 59, 61, 62, 64, 66, 68, 74, 75, 125, 128, 129, 133, 134, 135, 137, 140, 142, 144, 145, 146, 147, 150, 204, 232, 233, 234, 235, 285, 292, 296, 300, 302, 306, 308, 309, 310, 312, 313, 316, 317, 318], "rate": [0, 63, 69, 74, 232, 234, 235], "two": [0, 2, 6, 9, 16, 17, 18, 19, 29, 33, 34, 40, 43, 47, 48, 49, 53, 56, 57, 64, 66, 67, 68, 70, 71, 133, 134, 135, 136, 137, 139, 141, 143, 145, 147, 150, 156, 179, 186, 187, 189, 191, 192, 196, 213, 224, 225, 232, 233, 234, 235, 236, 240, 242, 245, 246, 251, 252, 260, 278, 279, 284, 285, 296, 297, 298, 312], "hub": [0, 29, 74, 75, 150, 203, 291], "author": [0, 28, 62, 64, 74, 150, 204, 292, 312], "estim": [0, 48, 53, 66, 67, 145, 150], "within": [0, 27, 33, 49, 52, 53, 57, 63, 64, 66, 68, 139, 148, 150, 204, 207, 208, 228, 234, 235, 292, 297, 306, 312, 316], "we": [0, 2, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 75, 77, 81, 83, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 188, 202, 204, 214, 216, 242, 263, 285, 288, 291, 292, 297, 298, 300, 302, 312, 318], "need": [0, 2, 4, 6, 7, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 27, 28, 29, 30, 31, 33, 34, 36, 38, 40, 43, 44, 47, 48, 53, 55, 56, 57, 58, 61, 63, 64, 65, 67, 68, 70, 73, 74, 77, 133, 134, 135, 137, 139, 142, 143, 144, 146, 147, 219, 232, 237, 243, 263, 279, 285, 288, 294, 297, 298, 300, 301, 302, 308], "rel": [0, 28, 48, 56, 68, 135, 139, 150, 298], "immedi": [0, 6, 48, 69, 74, 76, 139, 150, 288, 292], "also": [0, 1, 2, 6, 9, 10, 12, 16, 17, 19, 20, 22, 23, 27, 28, 29, 30, 31, 33, 34, 40, 43, 47, 48, 53, 55, 58, 61, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 133, 134, 135, 137, 140, 141, 142, 145, 147, 148, 150, 185, 204, 229, 231, 232, 236, 255, 260, 265, 277, 279, 283, 285, 288, 291, 292, 294, 296, 297, 298, 301, 302, 308], "under": [0, 9, 10, 14, 17, 24, 35, 53, 63, 65, 74, 77, 139, 141, 142, 150, 297], "consider": [0, 67, 150, 207], "katz_centr": [0, 31, 74, 150, 286, 308], "alpha": [0, 53, 74, 150, 224, 225, 236, 277], "beta": [0, 74, 150, 225, 236], "attenu": [0, 150], "factor": [0, 53, 74, 150, 185, 195, 217, 219, 297], "neighborhood": [0, 6, 46, 63, 65, 68, 74, 139, 143, 150, 228], "maxim": [0, 6, 150, 238, 284], "subgraph": [0, 6, 9, 17, 46, 53, 55, 64, 65, 66, 74, 95, 103, 133, 139, 141, 147, 148, 150, 161, 164, 186, 197, 228, 285, 312, 316], "contain": [0, 2, 6, 8, 17, 20, 23, 28, 30, 34, 35, 40, 43, 47, 48, 51, 52, 53, 56, 59, 60, 63, 64, 66, 68, 70, 71, 73, 76, 77, 133, 134, 137, 139, 142, 143, 144, 145, 147, 150, 152, 153, 154, 161, 164, 165, 180, 190, 191, 192, 194, 197, 212, 237, 238, 242, 243, 285, 288, 289, 292, 297, 298, 306, 310, 316], "found": [0, 4, 9, 16, 17, 18, 33, 40, 47, 53, 56, 57, 65, 71, 125, 146, 204, 246, 247, 283, 285, 296, 297, 298, 302], "recurs": [0, 6, 139, 187], "prune": 0, "less": [0, 2, 6, 17, 28, 44, 47, 74, 139, 146, 150, 202, 213, 224, 226, 298], "kkore": [0, 31], "order": [0, 6, 31, 48, 55, 65, 67, 68, 74, 75, 134, 139, 145, 150, 152, 153, 159, 183, 184, 187, 192, 199, 212, 213, 216, 248, 249, 252, 277, 278, 285, 291, 294, 298, 316], "That": [0, 28, 74, 144, 202, 245, 288, 300], "kshell": [0, 31], "fast": [0, 9, 20, 48, 74, 143], "where": [0, 2, 6, 12, 14, 18, 24, 34, 38, 40, 49, 55, 56, 63, 64, 67, 68, 70, 74, 119, 134, 135, 137, 139, 143, 150, 160, 167, 185, 214, 218, 220, 229, 232, 233, 234, 235, 263, 285, 292, 296, 297, 298, 312, 316], "assign": [0, 7, 9, 15, 18, 20, 33, 47, 49, 57, 64, 66, 68, 73, 74, 76, 150, 204, 212, 214, 216, 218, 232, 235, 240, 285, 288, 291, 294, 297, 298, 318], "unlabel": 0, "dure": [0, 6, 9, 24, 40, 50, 52, 53, 65, 66, 68, 73, 134, 139, 204, 294, 298, 299, 300, 301], "wai": [0, 1, 6, 10, 14, 20, 29, 34, 40, 43, 47, 48, 55, 65, 67, 68, 137, 139, 141, 143, 150, 204, 270, 277, 279, 285, 292, 296, 297, 299], "exist": [0, 2, 4, 6, 8, 9, 10, 12, 14, 15, 20, 28, 31, 34, 43, 46, 52, 56, 63, 65, 66, 67, 68, 70, 74, 76, 81, 83, 127, 130, 132, 134, 137, 139, 143, 144, 147, 150, 169, 170, 174, 216, 225, 239, 283, 285, 292, 294, 296], "variant": [0, 36, 68, 71], "follow": [0, 6, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 27, 28, 29, 31, 32, 34, 36, 40, 47, 49, 50, 52, 53, 54, 56, 58, 59, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 77, 81, 133, 134, 135, 136, 137, 139, 142, 143, 145, 147, 149, 184, 204, 214, 218, 224, 227, 237, 238, 244, 247, 268, 281, 285, 292, 294, 296, 297, 298, 299, 301, 302, 306], "networkx": [0, 3, 7, 8, 12, 20, 31, 43, 46, 55, 69, 72, 73, 74, 109, 150, 152, 153, 154, 155, 156, 157, 159, 161, 163, 164, 165, 167, 168, 169, 170, 174, 175, 179, 180, 184, 185, 187, 188, 190, 191, 192, 195, 197, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 225, 228, 229, 230, 231, 236, 237, 238, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 278, 280, 285, 287, 288, 290, 314, 319], "damp": 0, "set": [0, 2, 4, 6, 7, 9, 10, 14, 15, 16, 18, 20, 23, 28, 36, 38, 40, 43, 44, 47, 48, 52, 53, 55, 58, 59, 63, 64, 65, 67, 68, 71, 72, 73, 74, 76, 125, 132, 133, 134, 135, 137, 139, 142, 145, 146, 147, 148, 149, 150, 164, 188, 204, 218, 219, 224, 228, 236, 239, 240, 241, 246, 247, 265, 280, 283, 285, 288, 292, 296, 297, 298, 299, 302, 310, 311, 315], "sampling_path": [0, 31], "source_id": [0, 14], "cutoff": 0, "fix": [0, 6, 52, 53, 56, 68, 124, 277, 298, 300], "rank": [0, 6, 63, 73, 74, 75, 277, 291], "vote": [0, 74, 76], "scheme": [0, 6, 9, 47], "With": [0, 4, 12, 19, 24, 31, 33, 38, 49, 52, 53, 55, 60, 61, 63, 65, 223, 296], "top": [0, 9, 12, 22, 31, 52, 53, 67, 70, 137, 259, 298, 316], "highest": [0, 53, 219], "elect": 0, "num_of_nod": [0, 74], "select": [0, 9, 15, 48, 49, 56, 59, 63, 66, 68, 75, 82, 88, 89, 100, 101, 106, 114, 115, 133, 139, 147, 204, 213, 236, 248, 282, 285, 291, 292, 296, 297, 316], "influenti": 0, "extract": [0, 52, 63, 64, 65, 74, 81, 148, 292, 294, 298], "In": [1, 2, 6, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 30, 31, 34, 40, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 150, 207, 236, 239, 242, 243, 245, 285, 288, 291, 294, 297, 298, 300, 302], "addtion": 1, "built": [1, 3, 4, 8, 9, 12, 15, 18, 20, 22, 30, 31, 33, 38, 40, 46, 50, 53, 63, 64, 68, 69, 71, 72, 133, 147, 221, 222, 223, 294, 302], "provid": [1, 2, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 27, 29, 30, 31, 32, 33, 36, 40, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 91, 133, 135, 139, 140, 141, 145, 150, 181, 182, 204, 232, 233, 234, 235, 282, 285, 287, 292, 294, 296, 297, 298, 299, 302, 308], "run": [1, 2, 4, 6, 8, 9, 12, 19, 20, 24, 27, 28, 29, 30, 33, 35, 36, 40, 46, 47, 52, 54, 57, 60, 61, 63, 64, 68, 70, 72, 73, 74, 75, 110, 121, 139, 143, 144, 145, 147, 148, 237, 238, 288, 289, 292, 297, 298, 299, 300, 301, 302, 306, 308, 310, 315], "your": [1, 2, 7, 8, 12, 14, 20, 23, 24, 27, 28, 29, 30, 33, 35, 36, 38, 40, 46, 50, 56, 57, 58, 60, 61, 64, 70, 72, 74, 77, 135, 140, 144, 145, 194, 214, 285, 292, 294, 297, 308, 316], "own": [1, 6, 8, 12, 15, 24, 31, 34, 46, 49, 54, 55, 66, 72, 77, 124, 137, 140, 145, 204, 214, 292, 297, 298, 302], "design": [1, 6, 7, 12, 15, 18, 28, 43, 46, 50, 53, 58, 59, 60, 61, 65, 67, 68, 69, 70, 73, 133, 135, 141, 150, 285, 298], "extens": [1, 6, 28, 48, 59, 63, 134], "henc": [1, 2, 10, 30, 159, 282, 285, 298], "you": [1, 2, 4, 7, 8, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 33, 34, 36, 38, 40, 44, 47, 49, 50, 51, 52, 53, 57, 58, 60, 61, 64, 69, 70, 72, 74, 77, 127, 132, 134, 135, 138, 139, 140, 143, 144, 147, 150, 163, 194, 204, 214, 216, 228, 233, 234, 235, 285, 292, 294, 297, 298, 300, 306, 308, 318], "flash": [1, 3, 8, 12, 46, 63], "java": [1, 8, 12, 14, 31, 46, 55, 65, 66, 70, 74, 77, 81, 297, 308], "c": [1, 6, 8, 12, 14, 17, 18, 31, 36, 46, 52, 53, 55, 56, 63, 65, 66, 73, 74, 75, 77, 80, 92, 106, 135, 139, 143, 145, 150, 183, 184, 194, 214, 225, 238, 239, 242, 243, 277, 279, 281, 282, 285, 297, 298, 300, 306, 308, 310, 316], "python": [1, 7, 8, 11, 12, 14, 16, 17, 20, 22, 23, 27, 28, 29, 30, 31, 40, 43, 46, 47, 50, 53, 56, 58, 61, 63, 64, 66, 67, 69, 70, 73, 74, 80, 133, 136, 140, 143, 145, 148, 149, 285, 287, 288, 296, 297, 306, 308, 309, 311, 312, 314, 315, 316, 318], "alreadi": [2, 8, 20, 23, 24, 27, 28, 29, 34, 38, 43, 53, 59, 133, 283, 285, 318], "deploi": [2, 15, 40, 46, 48, 50, 55, 58, 63, 65, 70, 135, 292, 294, 299], "local": [2, 4, 6, 10, 14, 22, 24, 27, 28, 31, 34, 40, 46, 47, 53, 60, 63, 64, 68, 73, 74, 77, 109, 134, 135, 143, 144, 145, 147, 299, 315, 316], "machin": [2, 6, 7, 11, 14, 20, 24, 27, 28, 30, 33, 34, 35, 40, 47, 50, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 74, 133, 145, 292, 297], "take": [2, 4, 6, 9, 14, 15, 18, 24, 27, 28, 29, 33, 38, 40, 48, 53, 55, 56, 64, 65, 68, 77, 94, 134, 137, 138, 139, 143, 145, 147, 150, 213, 234, 265, 283, 285, 289, 291, 297, 298, 299, 300], "advantag": [2, 48, 55, 69, 70, 301], "3": [2, 6, 9, 10, 14, 17, 19, 20, 22, 23, 27, 28, 30, 31, 36, 38, 40, 43, 47, 48, 49, 50, 52, 53, 56, 59, 64, 67, 68, 71, 74, 75, 136, 137, 138, 139, 142, 147, 148, 150, 152, 153, 154, 156, 161, 165, 169, 170, 186, 188, 191, 194, 200, 204, 205, 206, 208, 209, 210, 212, 216, 219, 220, 224, 225, 229, 231, 242, 243, 245, 247, 250, 253, 258, 262, 263, 266, 269, 272, 274, 277, 278, 279, 280, 285, 287, 288, 297, 298, 300, 309, 312, 315, 316], "gie": [2, 30, 44, 46, 50, 53, 55, 63, 67, 70, 71, 72, 102, 103, 309, 310, 319], "gle": [2, 30, 46, 47, 55, 58, 59, 60, 63, 68, 70, 72, 309, 310, 317], "address": [2, 9, 14, 17, 23, 36, 40, 49, 63, 68, 298, 316], "differ": [2, 6, 9, 10, 12, 15, 17, 18, 20, 23, 27, 28, 31, 32, 34, 38, 43, 46, 48, 52, 53, 55, 56, 59, 63, 64, 65, 66, 67, 68, 70, 71, 74, 92, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 204, 208, 209, 210, 232, 235, 242, 262, 277, 285, 290, 294, 296, 297, 299, 300, 301, 302], "complex": [2, 6, 12, 22, 31, 34, 43, 48, 49, 50, 51, 52, 55, 56, 63, 65, 66, 67, 68, 69, 70, 74, 136, 150, 214, 218, 233, 234, 235, 297], "relat": [2, 23, 24, 28, 35, 40, 46, 48, 52, 56, 59, 62, 63, 64, 65, 67, 68, 73, 135, 139, 145, 241, 277, 282, 297, 298], "show": [2, 14, 19, 20, 28, 29, 35, 40, 48, 53, 55, 60, 61, 64, 66, 67, 68, 136, 137, 145, 288, 292, 294, 297], "kubernet": [2, 29, 40, 43, 46, 55, 60, 64, 69, 292, 298, 309, 311, 312, 314, 318, 319], "cluster": [2, 6, 7, 10, 14, 15, 17, 18, 19, 20, 22, 23, 29, 31, 40, 43, 46, 53, 55, 58, 60, 63, 64, 65, 66, 67, 68, 69, 74, 135, 145, 150, 207, 286, 292, 298, 299, 306, 308, 315], "howev": [2, 6, 9, 11, 15, 20, 24, 27, 34, 40, 43, 47, 48, 50, 53, 56, 63, 67, 68, 70, 134, 135, 136, 141, 150, 214, 285, 297, 298], "scenario": [2, 6, 8, 12, 38, 44, 48, 52, 53, 56, 59, 63, 67, 68, 70, 134, 135, 137], "quit": [2, 204], "common": [2, 6, 12, 15, 48, 53, 56, 59, 63, 65, 66, 67, 68, 70, 133, 134, 141, 142, 156, 277, 279, 285, 297, 306], "intend": [2, 33, 277, 291], "analysi": [2, 7, 8, 11, 48, 53, 55, 68, 69, 71, 72, 74, 238], "offlin": [2, 46, 55, 56, 65, 68, 69, 294], "everi": [2, 6, 23, 53, 59, 68, 73, 139, 150, 152, 153, 154, 169, 170, 188, 202, 265, 272, 285, 291, 297], "dai": [2, 20, 53, 285, 288], "export": [2, 4, 23, 29, 33, 36, 38, 40, 57, 296, 311], "warehous": 2, "without": [2, 6, 9, 14, 22, 27, 28, 29, 31, 34, 49, 52, 63, 65, 70, 77, 90, 134, 136, 137, 138, 139, 160, 197, 211, 218, 224, 225, 232, 233, 234, 235, 236, 285, 288, 292, 297, 300, 316], "real": [2, 6, 9, 12, 31, 43, 47, 52, 55, 63, 64, 66, 67, 68, 277, 298], "time": [2, 6, 9, 12, 14, 17, 19, 20, 23, 28, 29, 31, 34, 40, 48, 52, 53, 55, 59, 64, 67, 68, 71, 74, 134, 135, 139, 150, 183, 184, 220, 221, 222, 223, 233, 234, 235, 237, 238, 247, 250, 285, 297, 298, 300, 312, 316], "queri": [2, 7, 9, 14, 19, 22, 31, 40, 43, 46, 47, 50, 51, 52, 54, 55, 56, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 82, 88, 89, 98, 102, 103, 106, 110, 114, 115, 119, 129, 133, 135, 137, 139, 141, 145, 147, 149, 169, 170, 290, 292, 297, 300, 302, 306, 312], "sampl": [2, 27, 29, 36, 46, 47, 55, 56, 63, 64, 70, 77, 134, 135, 136, 138, 141, 143, 146, 149, 224, 244, 277, 298, 317], "case": [2, 6, 8, 10, 14, 15, 18, 28, 34, 38, 40, 43, 44, 46, 47, 48, 50, 53, 59, 67, 71, 76, 134, 135, 139, 141, 143, 146, 150, 204, 212, 218, 242, 253, 269, 291, 292, 297, 298, 302], "unnecessari": [2, 6, 9, 53, 297], "capabl": [2, 6, 11, 16, 20, 52, 63, 70, 285], "independ": [2, 6, 63, 70, 134, 148, 161, 164, 212, 239, 285], "document": [2, 4, 10, 28, 29, 32, 33, 35, 40, 46, 52, 55, 57, 68, 74, 133, 134, 140, 293], "walk": [2, 30, 47, 50, 53, 63, 64, 67, 139, 186, 197], "process": [2, 3, 6, 9, 11, 12, 14, 15, 16, 19, 22, 23, 24, 27, 28, 29, 30, 31, 32, 34, 43, 46, 47, 50, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 73, 83, 134, 135, 137, 139, 143, 145, 214, 216, 219, 247, 253, 285, 292, 294, 296, 297, 300, 302], "standalon": [2, 23, 28, 30, 40, 46, 53, 63, 299, 318], "self": [2, 47, 53, 119, 133, 136, 139, 150, 160, 173, 212, 214, 216, 218, 224, 232, 233, 234, 235, 236, 285, 286, 288, 292, 298, 313, 317, 318], "manag": [2, 10, 12, 14, 16, 27, 28, 29, 40, 43, 47, 53, 55, 59, 60, 61, 63, 65, 66, 68, 69, 70, 71, 73, 292, 298, 299, 308], "k8": [2, 7, 17, 22, 35, 38, 40, 43, 46, 55, 58, 60, 70, 72, 292, 298, 308, 309, 310, 312, 315, 318], "7": [2, 10, 20, 23, 27, 28, 30, 36, 40, 50, 53, 71, 134, 140, 145, 152, 153, 165, 188, 250, 256, 258, 262, 263, 266, 268, 280, 285, 300, 311, 315, 316], "To": [2, 6, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 27, 28, 29, 30, 31, 33, 34, 40, 43, 47, 48, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 68, 70, 71, 74, 77, 133, 134, 135, 137, 139, 140, 141, 143, 145, 150, 163, 214, 216, 221, 223, 232, 235, 275, 279, 285, 287, 291, 292, 294, 296, 297, 298, 301, 302, 306], "get": [2, 4, 6, 12, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 35, 36, 38, 40, 46, 47, 48, 52, 53, 56, 59, 67, 69, 72, 74, 75, 76, 93, 127, 129, 133, 136, 137, 138, 139, 142, 147, 148, 149, 150, 183, 204, 275, 285, 291, 292, 294, 297, 298, 302, 306, 308, 311, 312], "instal": [2, 4, 15, 16, 19, 23, 32, 38, 40, 47, 64, 74, 77, 143, 285, 288, 292, 309, 310, 311, 312, 315], "client": [2, 17, 22, 23, 29, 38, 39, 46, 48, 55, 61, 73, 74, 145, 292, 294, 296, 297, 298, 299, 308, 310, 315], "prepar": [2, 33, 46, 47, 50, 56, 57, 58, 59, 61, 62, 64, 68, 72, 297, 312, 315], "continu": [2, 6, 15, 16, 20, 28, 46, 48, 53, 55, 56, 63, 64, 68, 71, 133, 204, 242, 245, 297, 298, 299], "incas": 2, "doesn": [2, 29, 30, 34, 38, 53, 77, 139, 147, 214, 216, 218, 285, 291, 300], "t": [2, 6, 8, 17, 23, 27, 29, 30, 34, 38, 39, 40, 47, 52, 53, 65, 67, 71, 73, 74, 76, 77, 83, 133, 138, 139, 145, 147, 149, 150, 163, 179, 214, 216, 218, 238, 242, 243, 277, 279, 282, 285, 291, 298, 300, 317], "could": [2, 4, 6, 9, 15, 22, 28, 29, 30, 33, 35, 36, 38, 44, 52, 55, 72, 74, 128, 135, 137, 138, 147, 213, 296, 297, 298, 299], "creat": [2, 9, 10, 12, 16, 17, 19, 23, 27, 28, 29, 31, 36, 40, 47, 50, 52, 53, 63, 64, 68, 73, 74, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 103, 104, 105, 109, 112, 113, 119, 125, 126, 128, 129, 137, 139, 142, 144, 147, 148, 163, 185, 187, 188, 190, 191, 192, 194, 195, 197, 199, 200, 202, 203, 204, 206, 207, 209, 212, 214, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 229, 230, 231, 233, 234, 235, 237, 238, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 279, 280, 285, 287, 288, 289, 292, 298, 299, 300, 301, 306, 308, 311], "distinct": [2, 52, 63, 190, 252, 278, 297], "method": [2, 15, 16, 17, 18, 20, 22, 23, 29, 53, 59, 61, 66, 68, 73, 74, 76, 96, 109, 124, 133, 137, 141, 142, 147, 148, 150, 213, 221, 223, 232, 234, 285, 288, 290, 292, 297, 298, 302, 308], "entir": [2, 9, 31, 48, 53, 64, 68, 139, 150, 285], "discret": [2, 56, 68, 133, 204, 217, 219, 225, 229, 240], "util": [2, 4, 6, 9, 15, 30, 33, 38, 53, 55, 57, 62, 63, 64, 65, 66, 69, 73, 74, 76, 149, 250, 296, 297, 298, 301], "either": [2, 27, 31, 40, 47, 49, 53, 59, 74, 135, 139, 147, 148, 188, 191, 204, 231, 242, 275, 285, 299], "aforement": [2, 66, 68, 134, 139, 298], "per": [2, 47, 297], "prefer": [2, 28, 33, 297], "session": [2, 7, 8, 16, 17, 22, 28, 29, 40, 43, 46, 50, 51, 53, 55, 58, 60, 72, 74, 75, 92, 125, 126, 127, 128, 129, 130, 132, 147, 148, 285, 289, 290, 298, 300, 306, 308, 309, 310, 312, 313, 316, 318], "class": [2, 9, 15, 17, 18, 20, 22, 23, 53, 59, 62, 64, 68, 73, 74, 75, 76, 80, 133, 134, 147, 148, 149, 150, 194, 263, 285, 289, 292, 297, 298, 299, 308, 317], "option": [2, 4, 6, 15, 28, 29, 30, 33, 36, 38, 47, 49, 52, 53, 55, 57, 67, 70, 74, 75, 77, 80, 102, 103, 109, 110, 111, 121, 127, 132, 134, 137, 139, 147, 148, 150, 152, 153, 154, 169, 170, 179, 185, 187, 188, 190, 192, 194, 195, 197, 199, 200, 203, 207, 208, 209, 212, 214, 216, 217, 219, 220, 221, 222, 223, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 277, 280, 283, 285, 287, 288, 291, 292, 298, 299], "control": [2, 6, 28, 47, 63, 65, 73, 150, 285, 297], "subset": [2, 6, 20, 49, 52, 62, 64, 191, 202, 291, 292], "upon": [2, 9, 14, 70, 147, 298, 299], "launch": [2, 8, 9, 29, 33, 38, 40, 43, 47, 51, 58, 60, 61, 64, 72, 125, 144, 289, 292, 298, 299, 312], "For": [2, 6, 9, 10, 12, 15, 16, 17, 20, 22, 29, 32, 34, 38, 40, 43, 44, 47, 48, 49, 52, 53, 55, 56, 59, 61, 63, 64, 66, 67, 68, 74, 76, 81, 133, 134, 135, 136, 139, 141, 143, 145, 150, 162, 183, 186, 188, 191, 214, 216, 218, 219, 224, 227, 228, 232, 233, 234, 235, 236, 247, 250, 279, 285, 289, 291, 292, 298, 300, 301, 306], "exampl": [2, 7, 10, 15, 16, 18, 19, 20, 28, 36, 38, 43, 46, 47, 49, 50, 52, 53, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 74, 75, 80, 81, 125, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 150, 152, 153, 154, 156, 161, 163, 164, 169, 170, 173, 178, 179, 184, 186, 188, 190, 191, 194, 197, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 220, 221, 223, 225, 228, 232, 233, 234, 235, 236, 242, 245, 250, 275, 277, 278, 279, 280, 283, 285, 287, 288, 289, 291, 292, 296, 297, 298, 299, 300, 306, 308, 312, 317], "set_opt": [2, 7, 15, 17, 19, 29, 35, 40, 50, 58, 61, 62, 64, 292, 306, 311], "show_log": [2, 7, 15, 17, 19, 29, 35, 40, 50, 58, 61, 62, 64, 127, 132, 292, 306, 311], "true": [2, 6, 7, 9, 15, 16, 17, 18, 19, 20, 27, 29, 35, 40, 47, 50, 52, 53, 58, 59, 61, 62, 64, 73, 74, 76, 77, 121, 125, 130, 133, 134, 135, 139, 142, 145, 147, 150, 157, 166, 167, 168, 169, 170, 179, 181, 182, 188, 190, 208, 212, 214, 218, 224, 228, 231, 243, 283, 285, 287, 288, 292, 298, 299, 306, 308, 311, 316, 317, 318], "sess": [2, 16, 17, 22, 27, 28, 29, 43, 44, 61, 62, 74, 75, 121, 125, 147, 148, 292, 300, 306, 308, 309, 310, 312, 313, 316, 318], "enabled_engin": [2, 127, 132, 292], "g": [2, 4, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 29, 30, 31, 33, 38, 40, 43, 44, 46, 47, 49, 50, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 81, 128, 129, 133, 135, 136, 137, 138, 139, 140, 142, 143, 145, 147, 148, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 184, 185, 187, 188, 190, 191, 194, 195, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 241, 242, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 282, 283, 285, 287, 288, 291, 292, 294, 296, 297, 298, 299, 301, 302, 306, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318], "custom": [2, 3, 7, 8, 22, 29, 32, 46, 48, 55, 59, 63, 66, 68, 69, 133, 134, 137, 139, 141, 142, 143, 232, 234, 235, 282, 302], "command": [2, 4, 7, 16, 23, 28, 29, 30, 32, 33, 36, 38, 40, 46, 57, 58, 73, 134, 298, 299, 306], "line": [2, 4, 6, 7, 17, 33, 35, 38, 46, 48, 57, 58, 65, 70, 133, 134, 285, 287, 298, 299, 306, 317], "releas": [2, 28, 30, 32, 36, 40, 46, 61, 67, 71, 242, 245, 291, 292, 298, 311, 315], "replac": [2, 17, 19, 22, 23, 29, 48, 52, 65, 71, 136, 137, 138, 147, 285, 292], "my": [2, 18, 29, 285, 288, 292, 298], "illustr": [2, 29, 53, 56, 62, 66, 68, 136, 262], "Then": [2, 9, 14, 15, 16, 17, 19, 22, 23, 27, 28, 29, 43, 47, 48, 53, 59, 61, 63, 64, 133, 139, 279, 294, 300], "connect": [2, 6, 15, 17, 19, 20, 28, 34, 38, 40, 46, 47, 48, 53, 55, 59, 61, 63, 64, 65, 66, 68, 74, 75, 76, 134, 135, 137, 139, 142, 148, 150, 154, 171, 186, 188, 190, 192, 196, 197, 199, 200, 202, 203, 204, 206, 207, 208, 209, 211, 213, 218, 219, 224, 225, 227, 232, 234, 235, 236, 237, 238, 239, 241, 250, 260, 261, 263, 265, 267, 284, 285, 292, 299, 300, 308, 316], "servic": [2, 28, 29, 35, 46, 55, 61, 63, 66, 68, 73, 292, 299], "see": [2, 4, 19, 20, 27, 28, 29, 34, 35, 40, 47, 50, 53, 55, 67, 69, 74, 75, 77, 125, 128, 129, 134, 135, 137, 142, 145, 147, 183, 193, 198, 204, 207, 208, 209, 210, 212, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 232, 233, 234, 235, 236, 239, 240, 241, 242, 245, 250, 277, 280, 282, 285, 287, 291, 292, 296, 297, 298, 301], "detail": [2, 6, 7, 9, 12, 14, 17, 20, 27, 28, 29, 31, 35, 40, 42, 46, 47, 50, 53, 55, 58, 59, 66, 68, 70, 73, 74, 75, 125, 127, 128, 129, 132, 134, 135, 137, 138, 141, 142, 143, 145, 242, 285, 292, 296, 298, 301, 302], "addr": [2, 29, 76, 292], "ip": [2, 29, 47, 292, 298, 316], "port": [2, 23, 29, 35, 40, 47, 73, 292, 298, 316, 318], "mai": [2, 4, 6, 7, 8, 14, 15, 18, 20, 22, 24, 27, 28, 29, 30, 33, 34, 35, 36, 40, 43, 44, 47, 48, 49, 50, 52, 53, 56, 58, 61, 63, 64, 67, 68, 69, 70, 83, 134, 139, 141, 142, 143, 144, 147, 184, 207, 214, 216, 224, 285, 288, 291, 292, 297, 298, 300, 302], "would": [2, 4, 20, 29, 33, 34, 36, 38, 40, 53, 63, 73, 74, 139, 145, 288, 291, 292, 298], "previou": [2, 9, 15, 19, 28, 29, 36, 38, 53, 64, 74, 82, 133, 137, 139, 223, 298], "wcc_result": 2, "wcc": [2, 71, 74, 308, 313], "print": [2, 7, 16, 20, 27, 29, 40, 43, 47, 50, 53, 58, 59, 61, 62, 64, 74, 75, 136, 138, 139, 142, 145, 147, 148, 150, 163, 212, 280, 285, 288, 298, 306, 313, 316, 318], "to_datafram": [2, 7, 15, 43, 64, 75, 147, 291, 308], "id": [2, 7, 9, 15, 17, 18, 27, 39, 40, 43, 44, 46, 47, 48, 56, 59, 64, 67, 68, 71, 73, 74, 75, 76, 103, 109, 111, 133, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 149, 242, 243, 282, 285, 288, 291, 292, 298, 299, 306, 308, 309, 311, 312, 316, 317, 318], "r": [2, 6, 7, 15, 16, 17, 22, 32, 36, 43, 47, 64, 65, 68, 74, 75, 185, 195, 202, 208, 212, 224, 232, 241, 273, 278, 291, 292, 298, 308, 312, 313], "tip": [2, 270], "encount": [2, 34, 40, 66, 83], "fail": [2, 34, 40, 48, 52, 68, 150, 285, 298], "project": [2, 7, 15, 17, 23, 34, 48, 64, 65, 67, 73, 74, 75, 108, 140, 147, 292, 298, 308, 312, 313, 316], "simpl": [2, 7, 9, 15, 16, 17, 20, 27, 28, 30, 40, 46, 47, 48, 49, 50, 52, 53, 58, 63, 64, 67, 74, 75, 108, 133, 135, 148, 150, 214, 216, 219, 220, 242, 243, 244, 245, 247, 259, 277, 285, 291, 298, 308, 311, 312, 316], "empti": [2, 19, 29, 38, 39, 52, 53, 74, 76, 167, 191, 194, 224, 225, 263, 279, 285, 288, 298], "load": [2, 7, 10, 12, 15, 16, 17, 18, 19, 20, 22, 23, 29, 33, 40, 43, 46, 47, 48, 50, 58, 64, 65, 66, 68, 71, 72, 73, 74, 81, 83, 85, 116, 133, 135, 144, 145, 147, 292, 297], "dataset": [2, 4, 7, 15, 16, 17, 18, 19, 20, 22, 23, 28, 40, 43, 46, 50, 53, 58, 61, 62, 64, 68, 71, 74, 75, 133, 139, 145, 292, 308, 310, 312, 316, 318], "load_modern_graph": [2, 7, 27, 50, 64, 74, 148], "modern": [2, 6, 7, 47, 50, 53, 55, 64, 65, 66, 294, 298, 299], "current": [2, 7, 11, 12, 16, 17, 22, 28, 29, 30, 34, 43, 47, 48, 49, 52, 53, 55, 59, 61, 64, 66, 67, 69, 74, 76, 126, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 277, 280, 285, 292, 297, 298, 308, 315], "e": [2, 6, 9, 10, 12, 14, 17, 18, 19, 20, 22, 23, 30, 31, 39, 43, 49, 53, 54, 55, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70, 71, 74, 75, 83, 135, 136, 137, 138, 139, 142, 145, 147, 148, 149, 150, 186, 204, 214, 216, 218, 219, 221, 222, 223, 226, 231, 232, 239, 240, 241, 242, 245, 247, 263, 268, 274, 276, 285, 287, 288, 291, 292, 294, 296, 297, 299, 301, 302, 308, 312, 315, 316, 318], "path": [2, 4, 6, 7, 9, 17, 19, 22, 23, 24, 27, 28, 33, 36, 46, 47, 48, 55, 56, 59, 64, 66, 67, 70, 74, 81, 134, 135, 137, 139, 144, 145, 147, 150, 153, 186, 192, 196, 197, 199, 216, 279, 285, 287, 289, 291, 292, 296, 298, 300, 308, 309, 312, 313, 316], "store": [2, 10, 12, 16, 17, 31, 40, 44, 46, 47, 52, 53, 55, 63, 65, 66, 67, 69, 70, 75, 76, 88, 89, 106, 114, 115, 135, 141, 147, 148, 204, 209, 232, 233, 234, 235, 236, 285, 287, 294, 296, 297, 299, 306, 308, 311], "pod": [2, 27, 28, 29, 35, 38, 40, 43, 47, 61, 292, 298, 306, 309, 311, 312, 318], "elimin": [2, 6, 14, 135], "extran": 2, "resourc": [2, 28, 29, 35, 40, 43, 61, 63, 70, 74, 81, 204, 237, 292, 298, 301, 311], "fewer": 2, "inconveni": 2, "requir": [2, 6, 15, 17, 20, 30, 32, 34, 36, 40, 43, 44, 48, 49, 50, 52, 53, 56, 59, 61, 63, 64, 68, 70, 74, 77, 91, 133, 134, 135, 137, 138, 142, 143, 144, 145, 146, 183, 231, 232, 236, 285, 292, 297, 298, 301, 315], "equival": [2, 20, 40, 49, 52, 53, 139, 204, 241, 285], "function": [2, 6, 9, 12, 14, 16, 17, 19, 20, 24, 31, 40, 50, 52, 53, 56, 63, 65, 67, 68, 70, 73, 139, 143, 150, 183, 184, 191, 194, 214, 216, 221, 232, 233, 234, 235, 236, 244, 280, 283, 284, 285, 286, 287, 290, 296, 297, 302, 308], "when": [2, 6, 9, 10, 20, 23, 24, 28, 29, 34, 36, 40, 43, 44, 47, 48, 52, 53, 56, 59, 61, 63, 65, 66, 68, 70, 71, 74, 75, 76, 83, 119, 125, 134, 135, 136, 137, 138, 139, 142, 143, 144, 146, 147, 149, 150, 194, 204, 224, 232, 233, 234, 235, 241, 285, 287, 288, 292, 294, 296, 297, 298, 300, 306], "close": [2, 6, 27, 28, 29, 59, 61, 63, 74, 135, 145, 148, 287, 292, 298, 312], "free": [2, 9, 34, 40, 47, 59, 70, 225, 232, 242, 245, 247, 278, 284, 292], "delet": [2, 9, 27, 28, 29, 40, 104, 144, 292, 294, 298, 311], "handl": [3, 6, 8, 9, 11, 12, 20, 28, 31, 34, 46, 47, 48, 50, 53, 55, 63, 66, 67, 68, 75, 106, 134, 146, 149, 285, 287, 297], "variou": [3, 4, 8, 12, 14, 15, 20, 24, 27, 31, 35, 38, 46, 48, 49, 53, 55, 56, 63, 64, 65, 66, 68, 69, 94, 147, 250, 297, 302], "algorithm": [3, 4, 7, 8, 12, 14, 20, 24, 27, 40, 43, 44, 46, 48, 54, 56, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 135, 138, 139, 141, 195, 204, 207, 208, 216, 217, 218, 219, 220, 224, 225, 226, 227, 232, 237, 238, 241, 242, 244, 245, 268, 277, 282, 285, 286, 288, 290, 291, 301], "deriv": [3, 12, 31, 64, 67, 73, 75, 147, 150, 294], "grape": [3, 15, 16, 22, 23, 31, 46, 54, 63, 69, 73, 81, 294, 297, 299, 300, 301, 302, 308, 314], "system": [3, 6, 8, 9, 12, 24, 27, 31, 36, 40, 43, 47, 48, 49, 50, 53, 54, 55, 63, 65, 66, 67, 68, 69, 71, 134, 135, 140, 143, 282, 284, 294, 296, 297, 298, 300, 302, 308, 316], "sigmod": [3, 12, 14, 24, 31, 308, 314], "2017": [3, 12, 14, 31, 242, 243, 308], "further": [3, 6, 10, 14, 20, 27, 28, 31, 43, 49, 52, 53, 64, 65, 67, 75, 135, 147, 148, 163, 294, 297], "enhanc": [3, 9], "introduc": [3, 6, 10, 19, 20, 24, 46, 48, 52, 53, 54, 56, 63, 67, 70, 133, 136, 137, 139, 141, 150, 262, 284, 297, 302], "lot": [3, 34, 43, 50, 53, 54, 302], "new": [3, 4, 6, 9, 12, 14, 17, 20, 23, 27, 31, 34, 48, 50, 53, 57, 63, 64, 65, 73, 76, 82, 83, 126, 144, 147, 148, 150, 157, 163, 204, 216, 225, 227, 247, 276, 283, 285, 292, 294, 296, 297, 298, 300, 312], "featur": [3, 6, 9, 12, 23, 30, 31, 46, 54, 56, 58, 61, 62, 63, 64, 67, 68, 69, 70, 73, 77, 133, 134, 141, 145, 147, 285, 292, 297, 302, 312, 317], "type": [3, 6, 9, 12, 15, 16, 18, 19, 20, 27, 28, 29, 31, 34, 35, 43, 44, 46, 47, 48, 49, 52, 53, 56, 59, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74, 75, 80, 81, 83, 84, 88, 89, 92, 93, 96, 97, 100, 101, 103, 104, 105, 106, 108, 109, 111, 114, 115, 119, 125, 128, 129, 133, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 148, 149, 150, 155, 156, 159, 161, 164, 165, 167, 169, 170, 173, 174, 175, 178, 179, 180, 183, 184, 185, 187, 188, 190, 191, 192, 194, 195, 197, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 277, 278, 279, 280, 281, 282, 286, 287, 289, 290, 292, 294, 296, 297, 298, 300, 309, 312, 317], "storag": [3, 9, 40, 48, 49, 53, 65, 68, 70, 111, 135, 147, 296, 298, 299], "languag": [3, 12, 16, 32, 43, 48, 50, 52, 53, 55, 56, 59, 63, 64, 65, 66, 67, 70, 77, 102, 148, 297, 298, 302], "pattern": [3, 6, 12, 23, 48, 49, 52, 55, 59, 63, 66, 70, 74, 138, 143, 298], "better": [3, 8, 12, 20, 24, 29, 31, 47, 48, 53, 54, 68, 70, 292, 298, 302], "integr": [3, 9, 12, 23, 31, 46, 48, 54, 63, 65, 69, 70, 278, 297, 298, 300, 302], "big": [3, 6, 12, 30, 34, 50, 54, 65, 302, 315], "overview": [3, 23, 31, 53, 64, 294], "architectur": [3, 9, 46, 50, 63, 68, 74], "kei": [3, 20, 28, 46, 47, 52, 53, 67, 68, 69, 74, 75, 76, 108, 109, 110, 119, 127, 136, 139, 145, 147, 150, 179, 228, 232, 233, 234, 235, 283, 285, 287, 288, 291, 297, 298, 308, 318], "concept": [3, 46, 68, 133, 134], "centric": [3, 6, 9, 12, 14, 15, 17, 18, 31, 46, 54, 55, 63, 65, 66, 302], "ingress": [3, 12, 46], "increment": [3, 14, 16, 18, 20, 31, 46, 56, 65, 73, 302], "compat": [3, 7, 12, 15, 19, 20, 23, 31, 40, 43, 46, 55, 56, 58, 59, 61, 62, 64, 68, 69, 72, 74, 141, 291, 294, 296, 312], "tune": [3, 43, 44, 46, 63], "describ": [4, 6, 28, 33, 34, 35, 40, 47, 53, 56, 57, 63, 67, 68, 75, 134, 137, 139, 144, 145, 184, 188, 204, 205, 206, 209, 214, 216, 217, 242, 243, 256, 263, 265, 279, 281, 282, 296, 297, 298, 306, 311], "sourc": [4, 6, 7, 9, 14, 15, 18, 22, 23, 24, 29, 33, 34, 35, 39, 40, 46, 47, 50, 53, 56, 57, 59, 64, 66, 67, 68, 70, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 132, 135, 136, 137, 138, 139, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 289, 291, 292, 294, 296, 297, 298, 300, 308, 309, 310, 316, 318], "code": [4, 6, 14, 15, 16, 18, 29, 30, 31, 33, 36, 46, 48, 53, 57, 63, 64, 65, 70, 71, 73, 74, 76, 80, 133, 134, 135, 136, 139, 140, 145, 204, 246, 289, 297, 298, 300], "prebuilt": [4, 38], "docker": [4, 28, 30, 35, 38, 40, 47, 55, 298, 309, 312, 314, 315], "imag": [4, 29, 33, 35, 40, 47, 55, 57, 71, 136, 292], "necessari": [4, 6, 23, 28, 34, 38, 44, 84, 92, 97, 134, 135, 137, 139, 147, 297, 298, 306], "depend": [4, 17, 22, 27, 28, 32, 33, 38, 40, 46, 53, 57, 58, 65, 68, 74, 139, 207, 212, 298, 308], "shm": [4, 30, 33, 38, 57, 310], "size": [4, 6, 10, 16, 17, 23, 24, 30, 33, 38, 39, 40, 44, 56, 57, 59, 68, 71, 76, 134, 136, 137, 139, 144, 146, 190, 191, 202, 204, 205, 206, 207, 209, 210, 211, 212, 213, 216, 227, 236, 240, 242, 285, 292, 297, 298, 299, 310], "4096m": [4, 30, 33, 38, 57], "registri": [4, 28, 30, 33, 38, 57, 140, 292, 298, 310], "cn": [4, 23, 28, 29, 30, 33, 36, 38, 57, 140, 292, 298, 309, 310, 318], "hongkong": [4, 28, 30, 33, 38, 57, 292, 298, 310], "aliyunc": [4, 23, 28, 29, 30, 33, 36, 38, 57, 140, 292, 298, 309, 310, 318], "com": [4, 7, 17, 19, 22, 23, 27, 28, 29, 30, 32, 33, 36, 38, 50, 57, 58, 65, 66, 71, 74, 77, 140, 143, 150, 237, 246, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 265, 270, 292, 297, 298, 308, 309, 310, 311, 318], "latest": [4, 14, 30, 33, 34, 38, 57, 58, 292, 297, 298, 310, 315], "pleas": [4, 9, 12, 14, 16, 17, 23, 24, 27, 28, 31, 34, 38, 40, 47, 49, 50, 59, 61, 64, 133, 134, 135, 137, 138, 139, 140, 143, 145, 296, 302, 312], "singl": [4, 6, 7, 11, 14, 15, 20, 24, 28, 33, 38, 40, 47, 49, 52, 53, 57, 58, 60, 61, 63, 64, 66, 74, 75, 133, 147, 158, 165, 187, 191, 196, 206, 211, 228, 234, 279, 281, 285, 292, 296, 300], "clone": [4, 22, 27, 29, 30, 33, 34, 36, 77, 140, 298, 310], "repo": [4, 29, 33, 65, 298, 309, 310], "git": [4, 22, 27, 29, 30, 32, 33, 34, 36, 77, 143, 297, 310], "http": [4, 7, 19, 22, 23, 27, 28, 29, 30, 32, 33, 36, 40, 47, 50, 58, 61, 62, 64, 65, 66, 74, 77, 140, 143, 150, 204, 208, 209, 210, 224, 227, 234, 235, 237, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 269, 270, 271, 272, 277, 292, 297, 298, 308, 309, 310, 311, 312, 316, 318], "github": [4, 22, 27, 29, 30, 32, 33, 36, 65, 66, 74, 77, 140, 143, 235, 297, 308, 310, 318], "alibaba": [4, 17, 22, 23, 29, 30, 36, 47, 55, 63, 65, 68, 69, 77, 140, 143, 308, 310, 318], "cd": [4, 22, 29, 30, 32, 36, 47, 77, 140, 143, 145, 298, 306, 308, 310, 316], "make": [4, 6, 9, 14, 15, 16, 23, 27, 28, 29, 30, 32, 33, 34, 36, 38, 46, 47, 48, 53, 55, 57, 65, 66, 68, 71, 139, 140, 143, 145, 147, 163, 215, 279, 285, 292, 297, 298, 309, 310], "artifact": [4, 17, 23, 29, 33, 57], "analytical_engin": [4, 15, 33, 36, 77, 308], "grape_engin": [4, 109, 306], "togeth": [4, 9, 10, 20, 38, 48, 50, 53, 61, 63, 71, 139, 143, 186], "share": [4, 6, 33, 34, 36, 53, 57, 63, 65, 66, 292, 297, 299, 310], "librari": [4, 6, 12, 15, 16, 30, 36, 48, 63, 73, 74, 77, 298], "bunch": [4, 38, 70, 73], "binari": [4, 15, 28, 36, 68], "choos": [4, 6, 12, 22, 31, 33, 38, 48, 52, 53, 55, 56, 63, 68, 133, 134, 224, 225, 263], "locat": [4, 28, 33, 38, 47, 53, 67, 78, 135, 136, 147, 298, 299], "analytci": [4, 69], "prefix": [4, 33, 34, 36, 40, 147, 279, 297, 316], "usr": [4, 298], "depth": [4, 64, 133, 145, 150, 317], "view": [4, 20, 24, 63, 93, 158, 162, 181, 182, 285, 288, 294, 306], "These": [4, 9, 15, 20, 24, 47, 56, 63, 64, 66, 67, 68, 69, 139, 145, 297], "repeat": [4, 49, 67, 68, 139, 145, 219, 224, 227, 247, 250, 316], "item": [4, 20, 29, 63, 134, 135, 136, 139, 145, 150, 285, 298], "forwar": 4, "cmake": [4, 30, 33, 36, 40, 140], "cmakelist": 4, "txt": [4, 32, 36, 308], "look": [4, 15, 18, 20, 28, 47, 50, 53, 77, 146, 291, 294, 298, 299], "file": [4, 15, 17, 22, 23, 29, 32, 34, 40, 46, 47, 73, 74, 81, 106, 133, 134, 140, 145, 147, 183, 184, 235, 285, 287, 292, 294, 298, 299, 306, 308, 318], "want": [4, 6, 7, 18, 20, 22, 27, 28, 29, 30, 33, 38, 49, 50, 53, 58, 69, 77, 83, 127, 132, 143, 147, 194, 228, 285, 291, 294, 298], "investig": [4, 6], "easili": [4, 12, 20, 22, 23, 24, 27, 28, 29, 31, 38, 40, 47, 50, 53, 55, 63, 64, 67, 68, 70, 139, 141, 297], "work": [4, 8, 11, 14, 18, 20, 30, 31, 33, 34, 38, 43, 47, 48, 50, 52, 55, 57, 59, 63, 64, 65, 66, 68, 73, 75, 137, 139, 147, 284, 285, 291, 300], "directori": [4, 22, 27, 28, 30, 33, 36, 38, 40, 47, 55, 73, 78, 133, 144, 292, 296, 306, 309, 311, 312], "graphscope_hom": [4, 23, 38, 310], "pwd": [4, 27, 33, 145], "repositori": [4, 17, 29, 33, 34, 38, 47, 77, 292, 298], "about": [4, 7, 12, 14, 17, 31, 33, 34, 35, 47, 50, 53, 57, 58, 63, 68, 69, 73, 74, 139, 143, 144, 291, 292, 296, 301, 308], "download": [4, 7, 17, 19, 22, 23, 27, 28, 29, 30, 32, 33, 47, 50, 57, 58, 71, 140, 145, 310], "tmp": [4, 18, 19, 40, 47, 106, 111, 145, 292, 298, 306, 308, 311], "gstest": [4, 19, 22, 23, 27, 308, 310], "multipl": [4, 6, 12, 14, 17, 29, 38, 46, 47, 48, 52, 55, 56, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 134, 135, 139, 150, 247, 285, 291, 296, 297, 300, 306], "against": [4, 14, 34, 74, 267], "compar": [4, 19, 46, 48, 49, 52, 53, 66, 71, 73, 74, 136, 204, 291], "ground": [4, 68], "truth": [4, 68], "distribut": [6, 10, 11, 12, 14, 15, 18, 20, 22, 23, 24, 28, 30, 31, 40, 46, 47, 48, 50, 52, 55, 56, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 74, 77, 133, 136, 138, 142, 144, 145, 149, 204, 207, 214, 216, 225, 232, 233, 234, 235, 236, 244, 298, 299], "broad": [6, 65], "spectrum": [6, 65, 150, 277], "central": [6, 15, 43, 55, 56, 64, 65, 68, 69, 74, 139, 150, 262], "match": [6, 15, 48, 63, 65, 74, 184, 204, 212, 214, 216, 243, 279, 316], "mine": [6, 15, 63, 65, 66], "philosophi": [6, 24, 65], "step": [6, 9, 14, 15, 27, 28, 29, 30, 34, 36, 46, 47, 48, 50, 55, 56, 63, 64, 65, 67, 76, 133, 134, 135, 137, 139, 142, 145, 204, 212, 224, 277, 298, 306, 318], "stronger": [6, 65], "flexibl": [6, 12, 23, 53, 55, 63, 64, 65, 292, 296], "flow": [6, 65, 66, 133, 275], "oper": [6, 9, 12, 15, 27, 33, 36, 40, 43, 44, 46, 48, 49, 50, 52, 55, 56, 59, 63, 65, 66, 67, 68, 69, 74, 76, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 104, 105, 106, 108, 109, 112, 113, 114, 115, 134, 135, 136, 137, 138, 139, 141, 142, 144, 146, 147, 167, 246, 247, 285, 288, 290, 292, 294, 297, 298], "arbitrari": [6, 52, 53, 65, 137, 212, 216, 232, 233, 234, 235, 285, 288, 298, 316], "beyond": [6, 24, 65, 69, 245], "divers": [6, 10, 12, 31, 46, 48, 65, 66, 134, 294], "easi": [6, 7, 12, 43, 47, 48, 50, 53, 55, 58, 59, 63, 65, 69, 134, 139, 143], "write": [6, 8, 9, 12, 15, 17, 22, 24, 31, 34, 40, 43, 53, 55, 63, 64, 65, 66, 67, 72, 76, 77, 133, 139, 147, 148, 287, 288, 294, 297, 302, 308, 312], "runtim": [6, 17, 23, 36, 40, 48, 63, 65, 66, 67, 73, 74, 77, 297, 310, 311], "onli": [6, 9, 12, 14, 15, 17, 18, 20, 22, 23, 27, 28, 29, 31, 33, 43, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 81, 133, 134, 135, 137, 138, 139, 140, 147, 150, 169, 170, 179, 205, 206, 231, 232, 236, 244, 257, 278, 279, 285, 291, 292, 297, 298, 299, 302], "few": [6, 29, 40, 47, 65, 297], "satisfactori": [6, 65, 68], "major": [6, 12, 14, 66, 73], "recent": [6, 137, 298], "framework": [6, 9, 15, 16, 17, 18, 22, 23, 24, 40, 48, 56, 59, 63, 65, 66, 67, 68, 69, 70, 74, 75, 125, 137, 139, 141, 143, 147, 148, 289, 292, 294, 296, 308, 313, 318], "focu": [6, 38, 63, 67, 70, 143], "hand": [6, 27, 48, 49, 52, 265], "point": [6, 14, 22, 34, 48, 52, 59, 66, 133, 188, 213, 242, 245, 285, 298, 299, 300], "breadth": [6, 74, 150], "first": [6, 14, 15, 16, 17, 19, 20, 24, 29, 32, 34, 40, 43, 46, 48, 50, 52, 53, 56, 60, 61, 64, 65, 67, 68, 74, 75, 133, 134, 139, 141, 143, 147, 150, 154, 184, 200, 203, 212, 225, 228, 239, 240, 241, 242, 243, 246, 279, 284, 285, 288, 291, 294, 297, 298, 299, 300], "search": [6, 34, 46, 56, 63, 66, 68, 70, 74, 150, 314], "pagerank": [6, 8, 9, 17, 22, 31, 43, 63, 66, 69, 71, 74, 75, 150, 288, 291, 308], "shortest": [6, 7, 19, 24, 48, 64, 66, 74, 150, 300], "leav": [6, 53, 147, 185, 195], "larg": [6, 7, 9, 11, 12, 14, 18, 20, 23, 28, 31, 34, 40, 43, 44, 47, 48, 50, 53, 55, 56, 59, 60, 61, 63, 69, 70, 74, 119, 134, 135, 137, 139, 141, 145, 146, 159, 183, 184, 204, 239, 297, 308], "varieti": [6, 12, 31, 43, 63, 70], "suffer": [6, 43], "effici": [6, 9, 12, 16, 18, 23, 31, 40, 43, 46, 49, 53, 55, 56, 59, 63, 64, 65, 66, 67, 68, 69, 70, 77, 137, 139, 141, 218, 239, 296, 297, 299, 301], "limit": [6, 9, 22, 40, 46, 49, 56, 66, 67, 68, 70, 71, 292, 311, 316], "well": [6, 8, 9, 12, 18, 20, 28, 29, 31, 48, 55, 56, 64, 66, 67, 68, 72, 139, 147, 155, 188, 236, 285, 294, 298, 301, 302, 306], "known": [6, 8, 9, 24, 46, 53, 66, 74, 167, 185, 188, 237, 238, 255, 279, 300], "phase": [6, 16, 23, 24, 134, 139], "propag": [6, 7, 9, 14, 33, 63, 64, 66, 68, 74, 139, 157, 247], "short": [6, 65, 70, 71, 165, 297, 298], "isvp": 6, "until": [6, 9, 14, 17, 24, 27, 28, 52, 53, 68, 144, 204, 227, 298, 316], "all": [6, 9, 10, 12, 15, 16, 17, 20, 22, 23, 24, 27, 28, 29, 32, 34, 40, 46, 47, 48, 49, 50, 52, 53, 57, 59, 61, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 76, 98, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 154, 155, 157, 158, 162, 164, 179, 180, 184, 185, 188, 190, 191, 195, 204, 213, 222, 228, 242, 243, 245, 247, 271, 279, 280, 283, 285, 292, 296, 297, 298, 301, 306], "receiv": [6, 9, 14, 16, 17, 24, 34, 63, 66, 68, 76, 139, 143, 294, 308], "messag": [6, 10, 14, 15, 16, 17, 18, 24, 31, 33, 34, 35, 40, 48, 53, 59, 68, 73, 76, 146, 297, 308], "updat": [6, 9, 12, 14, 15, 17, 20, 24, 28, 29, 30, 31, 55, 56, 63, 66, 68, 70, 140, 143, 285, 292, 294, 298, 308, 309], "state": [6, 9, 10, 12, 24, 28, 31, 48, 55, 66, 67, 69, 71, 144, 147, 204, 207, 208, 209, 210, 212, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 232, 233, 234, 235, 236, 239, 240, 241, 245, 277, 280, 282], "thei": [6, 20, 24, 28, 36, 43, 48, 53, 55, 61, 63, 66, 68, 70, 133, 134, 142, 147, 191, 199, 204, 232, 234, 235, 278, 279, 285, 291, 292, 294, 297, 298], "send": [6, 10, 18, 24, 66, 76, 297, 308], "Such": [6, 67, 70, 106, 111, 244, 253], "abstract": [6, 43, 55, 59, 62, 63, 64, 65, 133, 134, 141, 143, 144, 299], "bring": [6, 38], "product": [6, 12, 30, 38, 40, 59, 63, 67, 70, 76, 134, 135, 139, 316], "some": [6, 10, 12, 17, 20, 23, 29, 31, 33, 34, 36, 47, 48, 49, 50, 52, 56, 63, 66, 67, 68, 74, 133, 134, 135, 141, 143, 145, 146, 147, 148, 195, 204, 214, 216, 219, 238, 279, 284, 285, 297, 298, 299], "sacrific": 6, "while": [6, 12, 19, 20, 29, 31, 43, 47, 49, 52, 53, 56, 63, 66, 67, 69, 70, 134, 139, 145, 181, 182, 242, 245, 247, 279, 285, 294, 297, 298, 306], "specif": [6, 9, 12, 14, 15, 16, 20, 24, 31, 34, 35, 38, 40, 43, 47, 48, 49, 50, 53, 55, 62, 63, 64, 65, 66, 68, 70, 71, 73, 74, 75, 76, 137, 138, 139, 142, 145, 147, 204, 232, 236, 285, 291, 294, 296, 297], "almost": [6, 22, 53, 220, 297], "infeas": 6, "kind": [6, 9, 12, 15, 28, 31, 40, 53, 64, 65, 70, 73, 75, 137, 139, 143, 144, 282, 291, 296, 298, 300, 301, 309, 311, 315], "At": [6, 12, 14, 15, 20, 31, 34, 48, 53, 134, 144, 298, 300], "advanc": [6, 7, 15, 48, 58, 59, 231], "pose": 6, "challeng": [6, 9, 42, 46, 63, 297], "after": [6, 9, 14, 15, 17, 18, 20, 22, 24, 29, 30, 31, 43, 49, 52, 56, 65, 66, 68, 74, 75, 76, 85, 133, 134, 135, 136, 143, 144, 145, 150, 247, 258, 277, 285, 289, 291, 292, 294, 297, 298, 299, 308], "repres": [6, 9, 12, 15, 43, 48, 49, 53, 56, 58, 59, 62, 63, 64, 65, 66, 68, 71, 73, 74, 75, 81, 110, 134, 135, 136, 137, 139, 143, 145, 147, 191, 224, 232, 233, 234, 235, 236, 244, 251, 254, 258, 266, 275, 277, 279, 280, 285, 289, 292, 297, 298], "non": [6, 9, 28, 52, 70, 73, 76, 136, 174, 175, 195, 214, 216, 219, 243, 247, 254, 272, 285, 286], "ones": [6, 9, 69, 74, 141], "distil": 6, "critic": [6, 56, 74], "context": [6, 15, 17, 18, 20, 28, 36, 46, 49, 67, 74, 76, 80, 81, 82, 88, 89, 106, 111, 114, 115, 117, 126, 130, 143, 147, 148, 150, 275, 290, 292, 297, 308], "fall": 6, "meet": [6, 15, 18, 34, 43, 48, 50, 59, 63, 68, 137, 138, 204, 233, 234, 235, 300, 302], "therefor": [6, 12, 15, 43, 48, 49, 50, 52, 53, 56, 64, 133, 134, 139, 231, 297, 306], "fulfil": [6, 15, 18, 65], "ligra": 6, "inherit": [6, 9, 16, 48, 65, 73, 133, 143], "By": [6, 17, 20, 27, 33, 40, 43, 49, 52, 53, 58, 66, 67, 68, 69, 134, 135, 150, 285, 294, 297, 306], "sinc": [6, 23, 24, 27, 29, 33, 48, 53, 57, 61, 63, 71, 83, 135, 139, 147, 183, 184, 214, 216, 263, 280, 287, 291, 297, 298], "parallel": [6, 12, 14, 15, 16, 24, 31, 43, 55, 63, 67, 73, 76, 135, 214, 216, 253, 285, 288, 298, 308], "must": [6, 24, 27, 28, 34, 40, 47, 52, 53, 63, 73, 75, 83, 134, 135, 137, 138, 139, 147, 149, 150, 163, 202, 204, 212, 215, 225, 227, 229, 232, 234, 236, 244, 247, 283, 285, 287, 291, 297, 298], "synchron": [6, 10, 12, 14, 15, 63, 297], "race": 6, "task": [6, 7, 14, 31, 38, 48, 50, 53, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 68, 134, 145, 297], "schedul": [6, 23, 33, 63, 292], "do": [6, 15, 16, 18, 20, 27, 29, 32, 36, 38, 40, 44, 46, 47, 48, 49, 50, 53, 73, 74, 75, 91, 109, 135, 147, 204, 216, 228, 232, 242, 245, 263, 279, 285, 288, 291, 292, 297, 302], "so": [6, 12, 34, 38, 40, 47, 48, 50, 53, 56, 59, 61, 63, 65, 74, 77, 133, 139, 141, 160, 195, 200, 213, 214, 215, 218, 233, 234, 235, 246, 279, 285, 297, 298, 312], "middlewar": 6, "call": [6, 12, 16, 17, 19, 24, 40, 49, 52, 53, 59, 67, 73, 76, 133, 135, 139, 142, 143, 147, 148, 180, 194, 195, 225, 236, 265, 277, 285, 288, 292, 296, 297, 298], "flashwar": 6, "hide": [6, 43], "abov": [6, 7, 9, 14, 15, 16, 19, 22, 27, 28, 30, 43, 47, 50, 53, 54, 58, 66, 67, 133, 134, 135, 139, 143, 188, 204, 224, 247, 281, 291, 298, 300, 302, 306], "automat": [6, 9, 12, 14, 31, 47, 48, 55, 63, 66, 67, 68, 70, 75, 145, 147, 285, 298, 300, 301, 318], "adapt": [6, 22, 48, 68, 70, 71, 300, 301], "70": [6, 15, 316], "40": [6, 15, 71, 135, 136, 138, 212, 278], "commonli": [6, 52, 55, 59], "now": [6, 7, 20, 23, 28, 47, 53, 58, 74, 143, 216, 298, 300, 313], "much": [6, 19, 22, 40, 48, 50, 52, 53, 135, 139, 297], "succinct": [6, 67], "interfac": [6, 9, 11, 12, 17, 18, 19, 22, 23, 31, 40, 43, 46, 48, 50, 53, 54, 56, 59, 63, 66, 67, 68, 69, 70, 73, 77, 135, 136, 137, 139, 140, 141, 142, 285, 292, 302], "help": [6, 9, 12, 16, 17, 30, 34, 35, 52, 53, 66, 143, 297, 299, 309], "evalu": [6, 14, 15, 16, 18, 34, 55, 64, 65, 68, 71, 73, 74, 75, 85, 110, 119, 121, 125, 128, 129, 147, 148, 292, 302, 316], "demonstr": [6, 16, 47, 48, 55, 60, 62, 63, 64, 66, 68, 70, 75, 133, 145, 147, 292, 297], "": [6, 9, 14, 15, 17, 18, 19, 20, 23, 24, 28, 29, 32, 34, 38, 40, 46, 47, 52, 53, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 71, 74, 83, 100, 101, 119, 133, 135, 137, 139, 142, 144, 146, 147, 150, 186, 197, 204, 207, 209, 212, 216, 219, 221, 222, 223, 239, 247, 248, 249, 272, 275, 277, 285, 291, 292, 294, 296, 297, 298, 299, 316, 317], "up": [6, 20, 23, 33, 34, 46, 52, 53, 55, 57, 59, 69, 76, 143, 146, 184, 188, 212, 279, 297, 298, 315], "92": [6, 150], "bulk": [6, 15], "bsp": [6, 15], "paradigm": [6, 15, 46, 55, 59, 63, 133, 139], "primari": [6, 15, 49, 63, 67, 70, 298], "constitut": [6, 62], "superstep": [6, 16, 17, 24, 76], "vertexsubset": [6, 15], "indic": [6, 24, 35, 47, 53, 65, 66, 67, 71, 81, 134, 136, 139, 147, 191, 194, 204, 207, 208, 209, 210, 212, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 232, 233, 234, 235, 236, 239, 240, 241, 245, 275, 277, 280, 282, 287, 297], "maintain": [6, 10, 14, 32, 49, 52, 63, 66, 67, 298], "onc": [6, 12, 15, 17, 20, 24, 27, 28, 29, 31, 48, 56, 74, 76, 135, 136, 139, 145, 147, 148, 150, 180, 285, 298], "vsize": [6, 15], "size_t": [6, 39, 73, 76, 144, 294, 297], "vertexmap": [6, 15, 39], "map": [6, 46, 52, 53, 66, 67, 73, 134, 143, 147, 277, 298, 299, 313, 316], "condit": [6, 9, 14, 24, 28, 35, 48, 53, 59, 71, 204, 233, 234, 235, 243, 244, 297], "f": [6, 20, 47, 58, 64, 139, 150, 237, 238, 284, 298, 306, 312], "output": [6, 14, 17, 24, 27, 28, 29, 31, 35, 43, 49, 52, 53, 56, 58, 59, 62, 63, 64, 68, 71, 73, 103, 111, 119, 133, 139, 141, 145, 147, 148, 232, 234, 236, 277, 289, 291, 298, 308, 309, 312, 317], "form": [6, 20, 48, 49, 52, 53, 56, 59, 67, 68, 74, 133, 135, 136, 139, 186, 206, 236, 251, 253, 256, 259, 263, 285, 291], "special": [6, 20, 53, 63, 134, 253, 269, 279, 302], "m": [6, 7, 9, 18, 20, 23, 27, 28, 30, 32, 36, 47, 48, 50, 53, 58, 64, 74, 75, 150, 160, 191, 195, 197, 208, 214, 216, 218, 220, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 264, 273, 277, 278, 282, 285, 308], "omit": [6, 75, 158, 299, 318], "filter": [6, 15, 23, 44, 46, 48, 67, 74, 75, 277, 291, 297, 316], "semant": [6, 48, 59, 138, 297], "unchang": 6, "edgemap": [6, 15], "logic": [6, 9, 14, 16, 17, 48, 52, 53, 55, 65, 71, 136, 296, 297, 298, 306, 308], "satisfi": [6, 9, 24, 50, 53, 67, 70, 74, 77, 144, 150, 202, 232, 236, 243, 244, 302], "h": [6, 9, 15, 16, 20, 33, 38, 56, 57, 71, 81, 150, 161, 164, 185, 212, 216, 232, 277, 284, 285, 297, 309, 314], "conduct": [6, 15, 46, 53, 71, 139], "allow": [6, 11, 12, 20, 22, 24, 27, 28, 43, 44, 47, 48, 49, 52, 53, 54, 55, 59, 63, 64, 66, 67, 68, 69, 70, 134, 139, 209, 214, 216, 219, 224, 227, 232, 277, 285, 294, 297, 302], "dynam": [6, 12, 31, 48, 55, 63, 65, 66, 68, 74, 84, 97, 205, 206, 288, 294, 298], "even": [6, 8, 20, 48, 53, 66, 141, 147, 150, 214, 224, 242, 244, 245, 285, 297], "virtual": [6, 9, 23, 50, 64, 73, 143, 144], "gener": [6, 9, 14, 17, 28, 31, 38, 43, 48, 53, 56, 59, 63, 64, 65, 66, 67, 68, 74, 82, 133, 134, 135, 139, 145, 147, 149, 150, 285, 286, 290, 292, 294, 296, 297, 298, 299, 300, 306], "execut": [6, 9, 12, 14, 15, 17, 23, 24, 28, 29, 38, 43, 47, 48, 50, 52, 53, 55, 64, 65, 67, 68, 73, 74, 75, 102, 103, 129, 139, 143, 147, 148, 150, 245, 289, 292, 294, 298, 300, 306, 308, 312, 316], "index": [6, 12, 36, 39, 46, 56, 59, 67, 68, 73, 74, 75, 135, 136, 144, 147, 149, 150, 159, 183, 184, 214, 216, 217, 218, 220, 297, 314, 318], "pre": [6, 28, 29, 30, 40, 48, 53, 58, 62, 64, 67, 292, 311], "conveni": [6, 29, 47, 53, 56, 65, 139, 283, 285], "revers": [6, 20, 53, 90, 93, 149, 150, 228, 236, 285], "exchang": [6, 14], "chosen": [6, 214, 221, 222, 223, 224, 225, 236, 240, 280], "temporari": 6, "sequenti": [6, 12, 14, 18, 31, 33, 63, 183, 184, 220, 297, 302, 308], "pull": [6, 12, 14, 28, 29, 30, 31, 35, 40, 46, 47, 66, 140, 143, 292, 298, 310], "mode": [6, 15, 28, 30, 33, 38, 40, 46, 60, 73, 74, 75, 125, 129, 133, 137, 143, 145, 147, 148, 287, 292, 302, 306, 318], "push": [6, 12, 31, 34, 47, 48, 66, 143], "anoth": [6, 9, 10, 20, 33, 46, 48, 52, 53, 63, 64, 68, 76, 214, 247, 285, 297, 300, 301], "final": [6, 9, 14, 17, 19, 24, 48, 53, 56, 61, 63, 67, 73, 133, 139, 141, 227, 247, 285, 299], "reduc": [6, 9, 14, 15, 17, 48, 59, 134, 137, 233, 234, 235, 285, 298], "associ": [6, 9, 29, 52, 68, 219, 231, 277, 279, 285, 292, 297, 298], "commut": 6, "ensur": [6, 9, 32, 34, 48, 49, 70, 292], "correct": [6, 14, 35, 48, 139, 147, 150, 297], "alwai": [6, 53, 61, 75, 181, 182, 221, 223, 242, 245, 279, 297], "default": [6, 15, 20, 23, 27, 29, 30, 33, 38, 40, 43, 47, 49, 52, 53, 58, 61, 71, 73, 74, 75, 76, 92, 98, 103, 125, 126, 130, 134, 135, 139, 146, 147, 149, 150, 152, 153, 154, 157, 179, 181, 182, 185, 187, 188, 190, 192, 194, 195, 197, 199, 200, 203, 204, 207, 208, 209, 210, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 277, 278, 280, 282, 283, 285, 287, 288, 292, 294, 298, 306, 318], "ctrue": 6, "doe": [6, 11, 12, 20, 31, 34, 44, 52, 59, 65, 67, 70, 136, 139, 144, 150, 169, 170, 212, 214, 216, 231, 242, 285, 287, 292, 297], "sometim": [6, 28, 53, 195, 255], "similarli": [6, 19, 20, 53, 66, 150, 188, 214, 216, 232, 235, 242, 285, 306], "suppli": [6, 40, 67, 234], "edgeset": 6, "d": [6, 9, 15, 17, 19, 20, 47, 53, 74, 137, 139, 142, 145, 150, 160, 205, 206, 214, 216, 217, 219, 220, 221, 223, 228, 232, 233, 234, 235, 236, 239, 276, 285, 287, 298], "auxiliari": [6, 15, 16, 53], "union": [6, 147, 213, 313], "minu": [6, 188], "intersect": [6, 67, 286], "add": [6, 15, 19, 20, 23, 29, 34, 40, 53, 64, 65, 73, 76, 82, 83, 92, 134, 145, 147, 152, 153, 154, 204, 211, 224, 242, 245, 247, 263, 285, 288, 292, 297, 298, 309, 312, 313, 318], "getv": [6, 48], "besid": [6, 10, 144, 145], "combin": [6, 14, 18, 31, 46, 48, 53, 55, 63, 64, 133, 134, 135, 139, 285, 292, 301, 308], "primit": 6, "thu": [6, 12, 16, 20, 28, 31, 33, 40, 43, 53, 61, 68, 74, 138, 180, 188, 285, 297], "natur": [6, 12, 24, 43, 53, 67], "multi": [6, 36, 46, 49, 53, 55, 56, 59, 63, 65, 67, 68, 69, 70, 74, 137, 139, 141, 294, 298], "tradit": [6, 48, 49, 68, 262], "awkward": 6, "structur": [6, 9, 12, 15, 16, 17, 20, 24, 43, 47, 48, 53, 62, 64, 65, 66, 67, 68, 74, 134, 135, 136, 195, 214, 262, 277, 279, 285, 286, 296, 297, 298, 301], "supplement": 6, "perspect": [6, 24, 65], "whole": [6, 9, 12, 24, 31, 47, 48, 53, 56, 63, 65, 67, 68, 141, 298, 301], "pick": [6, 53, 71, 227, 242, 245], "transfer": [6, 43, 46, 55, 67, 69, 316], "intuit": [6, 48, 49, 55, 292], "sever": [6, 9, 15, 17, 20, 23, 27, 33, 34, 46, 48, 53, 55, 56, 59, 63, 66, 68, 69, 71, 75, 133, 139, 141, 143, 144, 150, 191, 285, 291, 292, 297, 298], "main": [6, 31, 34, 48, 49, 53, 70, 133, 142, 145, 150, 298, 317, 318], "shown": [6, 7, 9, 10, 12, 15, 16, 18, 24, 28, 31, 48, 50, 53, 58, 59, 66, 68, 71, 134, 135, 136, 139, 145], "figur": [6, 9, 12, 24, 28, 31, 48, 53, 56, 59, 64, 66, 67, 68, 135, 137, 268, 294], "input": [6, 9, 12, 15, 17, 22, 24, 43, 56, 58, 59, 62, 63, 64, 67, 68, 74, 92, 96, 119, 133, 134, 135, 136, 137, 139, 142, 145, 148, 150, 218, 232, 234, 236, 242, 243, 277, 285, 288, 289, 292, 297, 298, 312, 317], "second": [6, 28, 43, 53, 56, 67, 70, 71, 75, 141, 230, 231, 239, 240, 241, 242, 246, 284, 285, 292, 298, 299], "fundament": [6, 9, 48, 65], "modul": [6, 8, 9, 15, 19, 20, 23, 46, 48, 52, 55, 63, 64, 65, 67, 68, 146, 284, 314], "produc": [6, 35, 38, 48, 71, 74, 82, 133, 145, 147, 148, 150, 204, 218, 220, 228, 289, 298], "abil": [6, 12, 31, 49, 53, 59, 63], "activ": [6, 9, 23, 24, 50, 61, 64, 68, 145, 292], "dens": [6, 56, 66, 68, 136, 145], "spars": [6, 56, 68, 133, 136, 212, 285, 288], "dispatch": [6, 31, 63, 73], "kernel": [6, 221], "auto": [6, 14, 16, 31, 39, 53, 76, 294, 297, 299], "switch": [6, 12, 23, 31, 38, 66, 242, 245, 297], "prove": [6, 24, 277], "world": [6, 9, 43, 52, 53, 63, 64, 66, 73, 150, 205, 206, 232], "dual": 6, "edgemapdens": 6, "edgemapspars": 6, "instead": [6, 16, 20, 34, 44, 52, 53, 65, 135, 136, 137, 143, 144, 147, 211, 218, 223, 231, 232, 236, 242, 285, 291, 294, 297], "thread": [6, 36, 47, 56, 71, 146], "co": [6, 43, 64, 134, 312], "lead": [6, 17, 24, 40, 53, 68, 214, 216], "access": [6, 12, 14, 27, 28, 29, 35, 36, 40, 47, 53, 56, 59, 63, 65, 66, 67, 68, 134, 135, 136, 137, 138, 139, 144, 145, 147, 285, 288, 292, 294, 296, 297, 298, 299, 306, 318], "master": [6, 19, 22, 23, 24, 36, 308], "broadcast": [6, 73, 297], "mirror": [6, 7, 10, 24, 28, 30, 33, 50, 57, 58], "On": [6, 27, 28, 34, 48, 49, 52, 74, 219, 282, 297], "contrari": 6, "total": [6, 8, 12, 31, 43, 47, 48, 53, 76, 160, 204, 227, 244, 250, 285, 299, 312], "4": [6, 9, 10, 17, 19, 20, 22, 28, 36, 40, 48, 49, 52, 53, 64, 67, 71, 81, 133, 135, 136, 138, 139, 140, 150, 156, 161, 163, 164, 169, 170, 188, 190, 191, 200, 208, 211, 213, 220, 229, 231, 236, 245, 252, 255, 256, 262, 263, 269, 271, 278, 279, 280, 285, 287, 288, 292, 297, 298, 299, 300, 301, 308, 311, 312, 316], "redund": 6, "partit": [6, 9, 10, 12, 14, 15, 18, 24, 47, 48, 59, 63, 66, 67, 68, 74, 138, 143, 202, 207, 208, 209, 212, 243, 302], "programm": [6, 17, 63, 77], "scope": [6, 23, 147], "disabl": [6, 36, 71, 292], "addit": [6, 9, 10, 12, 15, 18, 20, 24, 30, 31, 43, 48, 50, 52, 53, 54, 55, 56, 59, 67, 71, 92, 110, 134, 135, 136, 137, 147, 279, 285, 298, 302], "ad": [6, 9, 15, 17, 19, 29, 34, 55, 56, 68, 70, 71, 81, 82, 135, 147, 152, 153, 163, 221, 222, 223, 225, 279, 285, 294, 316, 318], "encourag": [6, 15, 24, 34], "develop": [6, 8, 9, 11, 12, 14, 24, 29, 31, 34, 38, 43, 48, 53, 54, 55, 56, 57, 63, 66, 67, 68, 70, 77, 137, 139, 140, 141, 143, 204, 297], "between": [6, 9, 10, 12, 18, 19, 40, 46, 48, 53, 56, 66, 68, 73, 74, 134, 135, 137, 139, 145, 150, 207, 208, 209, 212, 218, 224, 225, 227, 231, 232, 233, 234, 236, 239, 241, 242, 243, 245, 250, 280, 282, 285, 297, 298], "katz": [6, 74, 150], "eigenvector": [6, 74, 150, 277], "harmon": 6, "coeffici": [6, 19, 74, 150], "fluid": 6, "version": [6, 15, 17, 18, 20, 23, 28, 29, 34, 40, 50, 58, 63, 65, 67, 70, 71, 74, 140, 147, 205, 206, 221, 223, 236, 242, 263, 285, 294, 296, 297, 298, 308, 311], "color": [6, 19, 20, 53, 285], "label": [6, 7, 15, 20, 39, 47, 49, 58, 62, 63, 64, 66, 67, 68, 73, 74, 75, 76, 83, 133, 136, 139, 145, 147, 150, 185, 189, 196, 200, 201, 203, 213, 214, 216, 217, 218, 219, 220, 262, 263, 285, 287, 288, 291, 292, 296, 298, 299, 312, 313, 316, 317], "biconnect": 6, "bridg": [6, 46, 65], "seven": [6, 145, 184], "strongli": [6, 50, 53, 139, 224, 292], "cut": [6, 12, 24, 270], "core": [6, 12, 31, 40, 48, 50, 63, 64, 65, 74, 77, 145, 150, 292, 312], "k": [6, 20, 39, 53, 56, 63, 64, 65, 67, 74, 75, 137, 150, 187, 195, 205, 206, 207, 208, 210, 212, 213, 214, 221, 224, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 250, 285, 291, 297, 312, 316], "decomposit": [6, 64, 150], "degeneraci": 6, "onion": 6, "layer": [6, 48, 56, 59, 65, 68, 70, 133, 134, 137, 141, 145, 317], "minim": [6, 11, 66, 145, 236, 237, 258, 284], "domin": [6, 150, 297], "cycl": [6, 67, 70, 73, 152, 188, 189, 192, 203, 225, 229, 250, 252, 268, 272], "triangl": [6, 53, 64, 67, 74, 150, 247, 251, 255, 259, 271, 286, 308, 312], "acycl": [6, 279], "cyclic": [6, 63, 67, 192], "diamond": [6, 255], "rectangl": 6, "tail": [6, 52, 53, 65, 306], "approxim": [6, 204, 277], "densest": 6, "articlerank": 6, "hyperlink": [6, 74, 150], "induc": [6, 49, 52, 74, 95, 161, 164, 180, 228, 285], "topic": [6, 7, 50, 58, 64, 74], "person": [6, 7, 27, 47, 49, 50, 52, 53, 64, 147, 265, 274, 285, 288, 291, 297, 298, 299, 313, 318], "standard": [6, 32, 46, 48, 50, 53, 65, 148, 218, 233, 234, 235, 297], "diamet": 6, "span": [6, 20], "forest": 6, "center": [6, 53, 200, 203, 228], "four": [6, 9, 12, 20, 62, 64, 65, 73, 133, 136, 145, 232, 236, 297], "random": [6, 36, 59, 61, 63, 71, 137, 138, 139, 142, 145, 186, 197, 204, 207, 208, 209, 210, 212, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 245, 277, 280, 282, 284, 292], "guid": [7, 9, 16, 28, 29, 30, 34, 38, 46, 47, 50, 52, 58, 61, 62, 64, 77, 312], "give": [7, 12, 31, 36, 50, 53, 58, 71, 139, 147, 212, 232, 252, 284, 285], "quick": [7, 46, 50, 58, 298], "ll": [7, 20, 29, 58], "python3": [7, 23, 27, 28, 30, 32, 36, 40, 50, 58, 64, 308, 310, 311], "pip": [7, 27, 28, 30, 36, 40, 47, 50, 58, 64, 143, 298, 311, 315], "upgrad": [7, 23, 30, 50, 58, 315], "occur": [7, 9, 14, 30, 40, 52, 58, 298], "veri": [7, 30, 43, 44, 48, 50, 53, 55, 58, 64, 68, 135, 137, 308], "speed": [7, 30, 33, 53, 57, 58, 65, 146, 212, 285], "try": [7, 17, 23, 30, 33, 38, 40, 43, 50, 57, 58, 61, 62, 64, 72, 74, 163, 204, 288, 292, 312], "site": [7, 30, 50, 58], "aliyun": [7, 28, 30, 33, 50, 57, 58, 71, 292, 309], "pypi": [7, 28, 30, 40, 50, 58, 311], "trust": [7, 28, 30, 50, 58], "host": [7, 15, 17, 22, 23, 28, 30, 43, 47, 50, 58, 71, 73, 74, 75, 288, 292, 308, 316, 318], "packag": [7, 8, 11, 17, 18, 20, 22, 23, 27, 28, 29, 33, 40, 46, 47, 50, 58, 64, 143, 232, 234, 285, 288, 298, 310], "everyth": [7, 58, 64, 297], "job": [7, 23, 43, 48, 58, 63, 64, 69, 73, 109, 134, 298], "modern_graph": [7, 27, 47, 50, 64, 299], "gremlin": [7, 29, 40, 43, 46, 47, 48, 50, 51, 56, 59, 63, 64, 65, 69, 70, 72, 98, 102, 103, 139, 148, 292, 298, 306, 311, 312, 314, 319], "apach": [7, 17, 22, 23, 36, 47, 54, 55, 63, 64, 67, 296, 298, 302, 308, 310, 314], "tinkerpop": [7, 43, 46, 47, 50, 55, 64, 148, 298, 314], "org": [7, 17, 23, 40, 47, 58, 61, 62, 64, 66, 74, 150, 208, 209, 210, 224, 227, 234, 247, 251, 252, 253, 254, 256, 257, 258, 264, 265, 266, 267, 269, 270, 271, 272, 277, 298, 308, 311, 312, 316], "doc": [7, 16, 17, 27, 47, 64, 65, 73, 78, 147, 234], "tutori": [7, 8, 12, 14, 24, 47, 50, 51, 55, 60, 64, 66, 68, 145, 234, 302], "trigger": [7, 14, 15, 18, 34, 59, 64, 83, 300], "ret": [7, 18, 64, 308, 313], "selector": [7, 15, 35, 46, 64, 73, 75, 82, 88, 89, 100, 101, 106, 114, 115, 147, 290, 292, 308, 313], "homogen": [7, 56, 64, 68, 135], "pg": [7, 64, 74, 292, 297], "none": [7, 9, 20, 28, 36, 47, 61, 64, 74, 75, 81, 88, 89, 92, 95, 100, 101, 102, 103, 104, 106, 109, 111, 114, 115, 119, 125, 128, 132, 133, 134, 139, 147, 148, 149, 150, 158, 162, 164, 165, 169, 170, 179, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 277, 279, 280, 282, 285, 287, 288, 289, 292, 297, 298, 313, 317, 318], "know": [7, 8, 27, 47, 51, 52, 53, 60, 64, 67, 134, 135, 143, 147, 298, 299, 313, 316, 318], "src": [7, 15, 16, 17, 18, 27, 31, 39, 43, 49, 58, 59, 62, 64, 74, 75, 81, 133, 135, 147, 291, 294, 297, 298, 300, 308, 312, 317, 318], "our": [7, 12, 17, 30, 31, 33, 34, 38, 43, 48, 57, 64, 66, 67, 68, 70, 71, 72, 140, 141, 150, 298, 300, 308], "learn": [7, 28, 30, 33, 34, 38, 43, 47, 48, 50, 55, 59, 60, 61, 65, 66, 69, 72, 128, 134, 137, 138, 139, 140, 143, 145, 290, 292, 312, 314], "technic": [7, 58, 141, 279, 285], "disaggreg": [7, 33, 46], "deploy": [7, 27, 29, 40, 43, 53, 63, 69, 135, 145, 292, 298], "scale": [7, 11, 12, 20, 23, 28, 31, 34, 43, 47, 53, 55, 56, 63, 64, 66, 68, 69, 70, 135, 137, 139, 141, 146, 214, 225, 232, 284, 297], "usag": [7, 17, 30, 33, 34, 36, 46, 50, 52, 53, 57, 58, 59, 75, 136, 137, 138, 142, 147, 204, 285, 292, 298, 299], "giraph": [7, 8, 12, 17, 23, 24, 54, 70, 302], "graphx": [7, 8, 12, 17, 24, 54, 70, 302], "section": [8, 28, 29, 51, 53, 56, 60, 63, 139, 140, 147, 184, 297, 298], "assum": [8, 23, 27, 28, 47, 51, 53, 60, 64, 134, 147, 183, 244, 283, 285, 292, 297, 312], "read": [8, 20, 24, 34, 43, 50, 51, 60, 63, 65, 133, 134, 139, 144, 145, 147, 183, 184, 283, 285, 286, 290, 292, 294, 296, 298, 316], "getting_start": [8, 51, 60], "most": [8, 9, 15, 22, 40, 44, 48, 50, 52, 53, 56, 64, 66, 68, 70, 71, 75, 133, 135, 139, 141, 143, 205, 206, 230, 233, 234, 235, 298], "suffici": [8, 17, 40, 63, 134], "louvain": [8, 66, 74, 308], "social": [8, 43, 53, 63, 66, 68, 71, 212, 262, 277, 286], "scientist": [8, 55, 70], "familiar": [8, 14, 16, 29, 48], "api": [8, 15, 16, 18, 22, 24, 27, 31, 43, 46, 55, 63, 69, 72, 77, 83, 133, 135, 137, 138, 139, 143, 149, 285, 297, 299, 308, 319], "manipul": [8, 11, 19, 20, 52, 53, 55, 70, 72, 73, 285], "invok": [8, 9, 12, 14, 15, 17, 24, 31, 73, 137, 138, 142, 292, 308], "pydata": [8, 69], "eco": 8, "pregel": [8, 12, 17, 22, 31, 55, 63, 66, 290, 302, 312, 314], "still": [8, 24, 28, 31, 43, 53, 66, 163, 292, 297, 298], "jar": [8, 22, 23, 32, 74, 298, 308], "directli": [8, 12, 20, 24, 27, 30, 31, 33, 34, 35, 43, 49, 53, 54, 56, 59, 68, 73, 134, 137, 139, 140, 141, 142, 277, 285, 288, 292, 298, 302], "migrat": [8, 48, 58, 61, 62, 64, 65, 70, 294, 312], "transpar": [8, 63], "don": [8, 17, 23, 27, 34, 40, 47, 53, 83, 179, 285, 298], "sourcecod": 8, "autom": [9, 29, 65], "abl": [9, 24, 28, 47, 65, 138, 242, 297, 298], "batch": [9, 12, 19, 56, 59, 65, 68, 133, 136, 138, 139, 141, 143, 145, 149, 298, 317], "counterpart": [9, 55, 65], "redesign": [9, 65], "underli": [9, 43, 48, 53, 65, 141, 297], "equip": [9, 54, 55, 65, 71, 302], "polici": [9, 40, 65, 73, 292], "memori": [9, 12, 23, 24, 28, 31, 33, 40, 43, 46, 55, 57, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 133, 134, 135, 141, 145, 285, 292, 298, 301, 310, 311], "todai": 9, "static": [9, 16, 36, 47, 73, 298, 300], "chang": [9, 11, 12, 14, 20, 23, 31, 33, 46, 53, 63, 67, 68, 70, 71, 74, 90, 124, 134, 147, 150, 163, 285, 292, 298], "recomput": 9, "costli": 9, "consum": [9, 40, 68, 141, 144], "especi": [9, 44], "trillion": 9, "commerc": [9, 63, 66], "constantli": 9, "issu": [9, 17, 34, 40, 43, 65, 66, 70, 208, 209, 210, 274, 311], "involv": [9, 34, 38, 43, 48, 53, 56, 59, 63, 66, 67, 68, 69, 70], "adjust": [9, 12, 40], "old": [9, 12, 14, 31], "respons": [9, 12, 16, 28, 31, 33, 34, 40, 48, 63, 73, 143, 146, 292, 294], "typic": [9, 24, 43, 46, 49, 52, 53, 63, 66, 67, 70, 134, 139, 214, 285, 291, 297], "small": [9, 11, 20, 43, 53, 66, 67, 70, 150, 205, 206, 232, 275, 286, 292, 298], "often": [9, 34, 43, 47, 63, 66, 67, 68, 70, 135, 136, 139, 285, 298, 306], "overlap": [9, 292], "manual": [9, 28, 40, 63, 70, 147, 298], "intervent": 9, "burden": [9, 15, 135], "expert": 9, "light": 9, "overal": [9, 68], "verifi": [9, 28, 35, 43, 47, 71, 139], "characterist": [9, 49, 59, 63, 68, 133, 138], "deduc": [9, 147, 318], "appropri": [9, 28, 38, 48, 56, 63, 68, 133], "record": [9, 47, 53, 144, 294, 298], "part": [9, 34, 43, 48, 52, 56, 59, 65, 139, 140, 143, 145, 268, 285, 297, 298], "intermedi": [9, 12, 17, 48, 53, 55, 63], "deliv": [9, 316], "There": [9, 10, 12, 31, 34, 40, 47, 48, 53, 64, 66, 67, 68, 74, 135, 138, 139, 141, 285, 291, 292, 297, 298], "reshap": [9, 145], "eas": [9, 12, 31, 68, 70, 71], "achiev": [9, 12, 20, 24, 28, 31, 53, 63, 66, 71, 294], "decid": [9, 135, 232], "round": [9, 14, 17, 24, 74, 76, 202, 212], "due": [9, 40, 63, 70, 139], "among": [9, 48, 53, 63, 70, 73, 144, 150, 279, 298], "identifi": [9, 24, 49, 52, 53, 63, 64, 66, 67, 74, 124, 212, 279, 282, 285, 292, 298, 318], "fetch": [9, 15, 17, 98, 292, 298, 308], "suffic": 9, "replai": [9, 59, 65, 294], "affect": [9, 33, 34, 285], "area": [9, 15, 236, 282], "readili": 9, "obtain": [9, 14, 17, 27, 29, 47, 48, 55, 56, 59, 62, 64, 68, 134, 138, 139, 141, 260, 263, 279, 285, 292, 298], "simpli": [9, 17, 20, 47, 53, 139, 207, 211, 285], "coincid": 9, "idea": [9, 34, 56, 68, 77, 141], "strategi": [9, 10, 12, 16, 24, 47, 52, 53, 59, 67, 68, 71, 76, 137, 138, 139, 142, 143, 288, 301, 316], "invalid": [9, 147, 292], "miss": [9, 137, 147, 195, 292], "comparison": [9, 19, 52, 53, 55, 70, 71], "those": [9, 29, 47, 49, 53, 72, 137, 147, 150, 161, 190, 192, 194, 285, 287, 291], "although": [9, 12, 14, 22, 31, 43, 64, 77, 184, 297, 298], "solut": [9, 36, 40, 67, 68, 70, 150, 311], "enough": [9, 59, 134, 137, 204, 296], "usual": [9, 19, 28, 35, 40, 43, 48, 52, 53, 56, 59, 60, 61, 68, 139, 143, 146, 213, 236, 279, 285, 297, 299, 300, 306], "caus": [9, 14, 22, 30, 34, 40, 58, 68, 135, 141, 184], "overwhelm": 9, "overhead": [9, 70, 134, 135], "mf": 9, "delta": [9, 12, 74], "php": 9, "mp": 9, "cc": [9, 297, 313], "sswp": 9, "mv": 9, "track": 9, "gcn": [9, 55, 59, 64, 68, 72, 133, 137, 141, 145, 312, 314, 317, 319], "commnet": 9, "me": 9, "keep": [9, 53, 59, 76, 139, 147, 242, 245, 298], "graphsag": [9, 55, 59, 68, 72, 133, 137, 139, 141, 145, 314, 317, 319], "gin": [9, 68], "vldb": [9, 308, 314], "paper": [9, 14, 24, 56, 58, 61, 62, 63, 64, 65, 71, 145, 150, 282, 292, 308, 312], "publish": [9, 14, 24, 29, 63, 64], "2021": 9, "templat": [9, 15, 39, 73, 297], "denot": [9, 52, 53, 138, 213, 298], "w": [9, 47, 74, 150, 212, 218, 232, 235, 237, 242, 245, 247, 275, 285, 287, 298, 316], "respect": [9, 16, 46, 48, 52, 63, 64, 67, 68, 74, 92, 111, 119, 136, 139, 150, 191, 204, 251, 285, 291, 297, 298], "initi": [9, 16, 18, 19, 53, 66, 68, 73, 134, 135, 145, 147, 149, 150, 224, 226, 227, 285, 288, 298, 302, 308], "init_v": 9, "init_m": 9, "aggreg": [9, 46, 48, 68, 76, 133, 139, 141, 145, 297, 316], "simplic": 9, "vector": [9, 39, 56, 62, 64, 68, 73, 76, 133, 141, 143, 150, 232, 236], "element": [9, 52, 53, 66, 73, 134, 137, 139, 147, 150, 180, 212, 257, 279, 291, 292, 297], "specifi": [9, 16, 20, 23, 24, 27, 33, 44, 47, 49, 52, 55, 59, 64, 66, 74, 76, 81, 88, 89, 100, 101, 106, 110, 114, 115, 127, 132, 133, 134, 136, 139, 142, 147, 149, 150, 161, 169, 170, 191, 204, 214, 216, 217, 220, 221, 228, 232, 233, 234, 235, 236, 242, 245, 247, 250, 263, 282, 285, 287, 291, 292, 298, 299], "addition": [9, 12, 14, 56, 62, 63, 65, 70, 141, 150, 297, 306], "correspond": [9, 10, 15, 17, 18, 38, 48, 49, 52, 53, 55, 59, 67, 70, 74, 109, 133, 134, 135, 136, 138, 139, 143, 147, 150, 183, 184, 214, 216, 217, 218, 219, 220, 232, 278, 279, 281, 285, 287, 288, 294, 298, 306], "iteratorkernel": 9, "void": [9, 14, 15, 16, 17, 24, 39, 73, 294, 297, 298, 299, 308], "m1": [9, 40, 50, 186, 311, 315], "m2": [9, 186], "below": [9, 10, 12, 20, 31, 32, 33, 34, 59, 63, 64, 66, 67, 68, 71, 134, 137, 139, 142, 145, 184, 214, 216, 250, 285, 292, 298], "ssspkernel": 9, "public": [9, 15, 16, 17, 28, 64, 71, 73, 143, 298, 308, 312], "dbl_max": 9, "backend": [9, 28, 29, 55, 58, 63, 68, 147, 285, 292, 299, 312], "seamless": [9, 43, 69, 298], "extend": [9, 17, 23, 49, 52, 53, 70, 75, 134, 142, 143, 231, 297, 308], "block": [9, 40, 48, 136, 212, 298], "spawn": 9, "worker": [9, 14, 23, 31, 46, 59, 61, 135, 138, 145, 147, 292], "adopt": [9, 70, 137, 298], "csc": [9, 296], "csr": [9, 39, 147, 296, 299], "sent": [9, 10, 14, 16, 24], "reli": [9, 19, 140, 292, 297], "mainten": [9, 297], "preserv": [9, 75, 147, 247, 277], "effect": [9, 33, 34, 43, 52, 59, 63, 68, 137, 216, 285, 298], "readi": [9, 27, 30, 34, 40, 43, 47, 63, 135, 137, 292, 298, 306], "accept": [9, 150, 232, 236, 298, 299], "insert": [9, 14, 48, 104, 298], "newli": [9, 38], "particular": [9, 34, 52, 74, 136, 139, 214], "incid": [9, 20, 49, 52, 53, 161, 162, 204, 226, 275, 285], "encod": [9, 67, 74, 134, 139, 145, 149, 287, 298, 317], "dummi": 9, "furthermor": [9, 53, 55, 63, 70], "proprieti": 9, "deduct": 9, "techniqu": [9, 31, 46, 50, 59, 66, 139], "cancel": 9, "compens": 9, "whose": [9, 24, 53, 137, 139, 150, 155, 175, 257, 261, 277, 279, 280, 296, 297], "proce": [9, 204], "inner": [10, 16, 39, 46, 53, 76, 147, 297], "outer": [10, 14, 39, 76, 200, 297], "cross": [10, 49, 77, 260], "fragment": [10, 12, 14, 16, 17, 18, 39, 46, 48, 66, 68, 76, 109, 147, 148, 294, 299, 302, 308], "f_": 10, "instanc": [10, 15, 23, 27, 28, 29, 40, 47, 49, 53, 61, 63, 66, 67, 71, 73, 74, 75, 81, 83, 85, 98, 102, 103, 110, 128, 136, 147, 185, 187, 188, 190, 192, 194, 195, 197, 199, 200, 203, 214, 216, 217, 219, 221, 222, 223, 225, 229, 230, 231, 237, 238, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 280, 287, 292, 297, 298, 306], "5": [10, 19, 20, 36, 40, 52, 53, 58, 59, 61, 62, 64, 67, 71, 133, 136, 138, 139, 140, 142, 145, 150, 156, 161, 163, 169, 188, 191, 204, 208, 209, 210, 212, 213, 221, 223, 230, 231, 232, 233, 235, 236, 250, 251, 253, 254, 255, 256, 258, 259, 262, 264, 266, 268, 269, 275, 280, 285, 291, 292, 298, 300, 306, 311, 312, 316], "6": [10, 17, 18, 22, 36, 43, 47, 50, 52, 53, 71, 74, 134, 139, 145, 150, 169, 188, 217, 218, 219, 236, 250, 252, 258, 259, 262, 265, 269, 270, 278, 280, 285, 298, 300, 308, 311, 312, 316], "9": [10, 36, 50, 53, 64, 134, 150, 188, 190, 236, 254, 262, 275, 280, 315], "12": [10, 20, 40, 53, 71, 74, 134, 135, 136, 138, 140, 152, 153, 154, 190, 252, 253, 257, 261, 265, 271, 311, 316], "split": [10, 52, 53, 61, 62, 134, 135, 292, 298], "roughli": 10, "across": [10, 14, 31, 32, 63, 66, 67, 70, 297, 299], "divid": [10, 53, 56, 63, 74, 134, 137, 141, 142, 150, 296], "place": [10, 18, 19, 33, 47, 53, 143, 144, 147, 212, 232, 233, 234, 235, 236, 265, 283], "itself": [10, 20, 22, 34, 52, 53, 56, 63, 76, 133, 135, 291, 292, 297], "replic": [10, 226], "resid": [10, 14], "j": [10, 36, 39, 74, 145, 150, 183, 184, 205, 206, 214, 216, 217, 219, 225, 236, 239, 240, 241, 263, 297], "outcom": 10, "outgo": [10, 16, 24, 52, 53, 67, 76, 139, 150, 285, 297], "incom": [10, 14, 16, 31, 52, 53, 73, 76, 150], "consid": [10, 15, 18, 28, 34, 53, 59, 66, 74, 75, 134, 135, 150, 214, 277, 294, 297], "vice": [10, 232], "versa": [10, 232], "compani": [10, 297], "syncstateonoutervertexastarget": 10, "certain": [10, 24, 43, 44, 70, 134, 135, 139, 142, 297, 298], "regardless": [10, 65, 134, 230, 297], "friendli": [11, 12, 34, 46, 55, 66, 68, 69, 70], "research": [11, 59, 68, 275, 292], "particularli": [11, 68, 277], "field": [11, 27, 28, 35, 47, 59, 61, 62, 64, 137, 141, 145, 147, 231, 292, 298, 309, 312], "scienc": [11, 239, 262], "environ": [11, 19, 20, 23, 24, 28, 29, 34, 40, 43, 46, 50, 55, 61, 64, 72, 74, 77, 140, 144, 150, 292, 297, 298, 299, 306, 311, 315], "solv": [11, 24, 34, 40, 42, 53, 66], "recast": [12, 14, 31], "ga": 12, "plug": [12, 31, 63], "minor": [12, 14, 31, 55, 63, 68, 71, 300], "cope": [12, 31], "life": [12, 30, 31, 47, 63], "fledg": [12, 63], "extrem": [12, 28, 63, 141, 186, 197, 297], "fashion": [12, 20], "consist": [12, 20, 24, 27, 31, 32, 48, 49, 52, 53, 55, 56, 59, 66, 67, 68, 70, 71, 73, 74, 76, 136, 137, 139, 141, 187, 188, 189, 200, 203, 211, 257, 279, 294, 296, 297, 298, 299], "format": [12, 20, 22, 31, 32, 43, 46, 53, 56, 68, 69, 71, 74, 102, 103, 110, 133, 136, 139, 141, 144, 145, 147, 148, 285, 287, 292, 294, 310], "unifi": [12, 31, 43, 46, 48, 134, 294], "care": [12, 31, 53, 143, 144, 297], "written": [12, 20, 53, 63, 65, 102, 148, 263, 294, 297, 300, 308], "foreign": [12, 297], "ecosystem": [12, 54, 55, 67, 70, 302], "freedom": 12, "accord": [12, 19, 33, 40, 44, 47, 48, 52, 53, 56, 63, 67, 68, 73, 137, 139, 143, 204, 212, 224, 225, 294, 298], "demand": [12, 48, 66, 297, 298, 302], "sdk": [12, 18, 40, 46, 47, 54, 55, 66, 70, 77, 290, 298, 302, 308], "sub": [12, 14, 18, 53, 55, 75, 137, 139, 297, 302], "domain": [12, 63, 68, 232, 233, 234, 235, 236], "dedic": 12, "treat": [12, 14, 20, 31, 53, 147, 285, 287, 292], "immut": [12, 31, 46, 65, 67], "persist": [12, 15, 31, 40, 46, 47, 63, 65, 70, 296], "fortun": [12, 20, 43], "grin": [12, 46], "awar": [12, 34, 40, 47, 65], "introduct": [12, 31, 46, 66, 138, 139, 142, 150, 195, 277, 297], "foundat": [12, 63], "visit": [12, 29, 53, 67, 134], "meanwhil": [12, 43, 55, 68, 297], "compress": [12, 64, 74, 134, 250], "pipelin": [12, 31, 55, 63, 66, 70, 301], "balanc": [12, 135, 185], "link": [12, 34, 36, 40, 42, 48, 49, 56, 68, 71, 74, 147, 150, 187, 208, 210, 211, 221, 222, 223, 282, 285, 292], "popular": [12, 22, 29, 43, 68, 133, 145, 298], "freeli": [12, 24], "background": [12, 42], "interoper": [12, 297], "panda": [12, 43, 73, 75, 88, 100, 147, 285, 314], "mar": [12, 28, 43, 52, 65, 292], "fastffi": [12, 77], "via": [12, 14, 17, 18, 20, 22, 23, 24, 28, 30, 40, 47, 52, 54, 55, 63, 67, 70, 73, 186, 197, 204, 280, 283, 285, 292, 302, 308], "emploi": [12, 24, 31, 62, 65, 66], "captur": [12, 68], "20": [12, 28, 29, 30, 31, 47, 52, 53, 55, 71, 74, 75, 135, 136, 138, 204, 232, 233, 254, 256, 285, 308, 309, 315, 316], "100": [12, 31, 53, 58, 61, 62, 64, 74, 145, 150, 207, 214, 218, 225, 234, 285, 292, 312, 316], "build": [12, 15, 31, 32, 34, 36, 40, 46, 48, 55, 56, 65, 73, 74, 83, 85, 135, 139, 141, 143, 144, 147, 233, 234, 235, 277, 292, 294, 310, 317], "been": [12, 17, 23, 24, 29, 34, 40, 48, 50, 52, 53, 54, 56, 63, 66, 67, 68, 70, 74, 124, 137, 139, 147, 148, 150, 204, 227, 277, 289, 292, 302], "netowrkx": [12, 72, 285], "misc": 13, "express": [14, 15, 24, 48, 49, 59, 65, 67, 75, 134, 136, 139, 236, 285, 316], "modifi": [14, 20, 24, 47, 86, 87, 104, 105, 140, 163, 216, 283, 296, 297], "adher": [14, 32, 297], "think": [14, 24], "like": [14, 15, 18, 19, 20, 23, 24, 28, 33, 34, 38, 40, 43, 46, 47, 48, 50, 53, 55, 57, 63, 64, 68, 69, 70, 72, 73, 74, 134, 139, 143, 145, 147, 204, 214, 216, 224, 285, 291, 292, 294, 297, 298, 299, 318], "principl": [14, 143], "privileg": 14, "experienc": 14, "inform": [14, 15, 16, 19, 28, 29, 35, 40, 48, 62, 64, 66, 67, 68, 69, 77, 91, 133, 134, 135, 136, 139, 141, 143, 147, 150, 165, 183, 224, 246, 247, 275, 285, 292, 294, 298], "hop": [14, 48, 49, 52, 53, 55, 56, 59, 63, 67, 68, 133, 137, 139, 141, 142, 143, 145], "slow": [14, 50], "consequ": [14, 63, 66], "piec": [14, 46, 144, 292], "destin": [14, 47, 53, 56, 64, 73, 75, 90, 134, 135, 136, 138, 139, 145, 147, 149, 291, 296, 297, 298, 318], "abovement": 14, "peval": [14, 16, 17, 18, 31, 66, 73, 80, 302, 308], "incev": [14, 16, 17, 18, 31, 66, 73, 80, 302, 308], "assembl": [14, 31, 48, 65, 66, 73, 147], "unlik": [14, 17, 56, 59, 63, 285], "modif": [14, 22, 55, 63, 68, 147, 288], "convent": [14, 34, 40, 218, 244, 306], "taught": [14, 53], "colleg": 14, "textbook": 14, "answer": [14, 31, 34, 40, 63, 298], "collect": [14, 31, 52, 53, 67, 68, 69, 145, 285], "partial": [14, 16, 18, 31, 52, 73, 75, 134, 227, 302], "revis": [14, 71], "intricaci": 14, "fixpoint": 14, "monoton": 14, "guarante": [14, 47, 59, 70, 134, 142, 150, 220, 285], "accur": 14, "long": [14, 17, 27, 53, 65, 67, 70, 74, 139, 297, 298, 308, 316], "note": [14, 20, 28, 29, 48, 53, 56, 61, 62, 64, 66, 74, 75, 76, 83, 124, 126, 135, 139, 147, 150, 159, 160, 163, 167, 180, 181, 182, 183, 184, 185, 191, 192, 197, 200, 202, 204, 205, 206, 207, 209, 211, 213, 214, 216, 217, 218, 219, 220, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 262, 277, 278, 279, 280, 282, 285, 287, 288, 291, 292, 296, 298, 312, 318], "const": [14, 15, 16, 39, 73, 76, 143, 144, 297, 298, 299], "fragment_t": [14, 15, 16, 73], "frag": [14, 17, 18, 39, 80, 294, 299, 308], "context_t": [14, 15, 16, 73], "ctx": [14, 17, 22, 73, 308], "message_manager_t": [14, 16, 73], "vertex_t": [14, 16, 39, 73], "native_sourc": [14, 18, 308], "getinnervertex": [14, 73], "partial_result": 14, "getoutgoingadjlist": [14, 16, 17, 39, 73, 294, 308], "get_neighbor": 14, "std": [14, 15, 39, 73, 294, 299], "min": [14, 18, 24, 76, 308, 316], "static_cast": [14, 16, 39, 294], "get_data": [14, 39], "isoutervertex": [14, 73], "put": [14, 16, 17, 22, 143, 292], "channel": [14, 16, 34], "syncstateonoutervertex": 14, "els": [14, 16, 18, 39, 53, 135, 145, 147, 243, 297, 308], "next_modifi": 14, "inner_vertic": [14, 16], "innervertic": [14, 16, 17, 39, 73, 294, 308], "parallelprocess": [14, 16], "thread_num": [14, 16], "tid": [14, 16], "msg": [14, 16, 24, 53, 76, 297], "atomic_min": 14, "curr_modifi": 14, "foreach": [14, 16], "distv": [14, 18, 308], "ndistu": 14, "outer_vertic": 14, "outervertic": [14, 39, 73], "dijkstra": [14, 18, 66, 150, 308], "checkout": [14, 34, 140], "seri": [15, 53, 68, 73, 139, 297], "strong": [15, 48, 66], "app": [15, 16, 17, 18, 46, 75, 76, 77, 82, 85, 110, 116, 119, 134, 147, 290, 291, 297, 308], "typenam": [15, 16, 39, 73], "frag_t": [15, 16, 73], "yourapp": 15, "flashappbas": 15, "v_type": 15, "install_flash_work": 15, "flashvertexdatacontext": 15, "v_res_typ": 15, "sync_all_": 15, "re": [15, 34, 47, 53, 67, 136, 139, 143, 145, 291, 300], "shared_ptr": [15, 39, 73, 294, 299], "fw_t": 15, "fw": 15, "Or": [15, 17, 19, 22, 29, 33, 38, 53, 292, 308, 318], "global": [15, 24, 48, 52, 53, 68, 125, 147, 277, 292, 299, 316], "flashglobaldatacontext": 15, "g_res_typ": 15, "let": [15, 18, 19, 38, 47, 48, 53, 68, 247, 291], "bfsflash": 15, "bfs_type": 15, "value_t": 15, "di": 15, "oid_t": [15, 16, 39, 73], "o_sourc": 15, "vid_t": [15, 16, 39, 73], "oid2flashid": 15, "definemapv": 15, "init": [15, 16, 17, 18, 39, 61, 73, 74, 76, 80, 133, 135, 136, 140, 143, 145, 285, 288, 292, 294, 302, 308, 317, 318], "vset_t": 15, "ctruev": 15, "definefv": 15, "definemap": 15, "cond": [15, 193], "len": [15, 53, 61, 135, 150, 159, 190, 207, 209, 212, 214, 215, 219, 285], "ed": [15, 23, 218, 232, 239, 262, 268], "ctruee": 15, "rather": [15, 18, 53, 67, 69, 70, 150, 204, 246, 297], "py": [15, 133, 140, 145, 308, 309, 310, 317], "project_to_simpl": 15, "not_compatible_for": 15, "arrow_properti": [15, 27, 84, 288], "dynamic_properti": [15, 97, 288], "def": [15, 18, 23, 58, 61, 62, 64, 80, 133, 135, 136, 137, 138, 139, 142, 145, 191, 298, 308, 312, 313, 317, 318], "arg": [15, 61, 73, 74, 75, 76, 110, 136, 137, 138, 139, 142, 145, 149, 292, 298], "appasset": [15, 18, 80, 81, 85, 290, 308], "algo": [15, 16, 17, 22, 23, 74, 81], "flash_bf": 15, "vertex_data": [15, 16, 74, 81], "configur": [15, 16, 17, 23, 28, 32, 34, 35, 36, 40, 46, 52, 53, 61, 63, 73, 74, 84, 85, 91, 92, 97, 124, 144, 145, 147, 204, 214, 216, 292, 294, 299], "coordin": [15, 28, 29, 32, 38, 50, 61, 73, 98, 147, 197, 292, 298, 306, 309, 310, 312], "gscoordin": [15, 33], "builtin": [15, 19, 20, 286, 288, 290], "gs_conf": [15, 16, 81], "yaml": [15, 16, 29, 35, 47, 74, 81, 296, 298, 316], "cpp_flash": 15, "class_nam": [15, 16, 81], "compatible_graph": [15, 16, 81], "immutableedgecutfrag": 15, "arrowprojectedfrag": [15, 16, 73, 81], "log": [15, 17, 35, 40, 46, 61, 62, 63, 65, 297, 299, 311], "p2p": [15, 17, 22, 23], "network": [15, 28, 40, 43, 46, 53, 56, 60, 62, 63, 64, 66, 69, 70, 71, 72, 74, 133, 134, 135, 137, 139, 141, 145, 150, 205, 206, 212, 214, 218, 221, 222, 223, 226, 238, 262, 273, 274, 276, 277, 282, 286, 300, 311], "load_p2p_network": [15, 16, 17, 18, 43, 74, 75, 308], "attribut": [15, 19, 49, 59, 62, 64, 66, 68, 73, 74, 108, 119, 135, 136, 138, 141, 145, 146, 149, 150, 152, 153, 154, 169, 170, 179, 191, 204, 209, 228, 232, 233, 234, 235, 236, 239, 240, 241, 275, 277, 279, 282, 283, 285, 286, 288, 294], "convert": [15, 20, 23, 56, 74, 88, 89, 100, 101, 114, 115, 133, 134, 141, 145, 205, 206, 263, 280, 285, 287, 288, 294], "simple_graph": [15, 16], "dist": [15, 17, 74, 75, 140, 143, 232, 234, 236, 292, 308, 316], "codegen": [15, 48], "compil": [15, 30, 31, 36, 40, 48, 63, 74, 85, 297, 298, 300, 306], "bit": [15, 50, 52, 53], "longer": [15, 61, 76, 292], "vineyard": [15, 16, 23, 36, 39, 40, 46, 47, 55, 60, 61, 63, 67, 69, 70, 73, 75, 106, 111, 114, 115, 147, 148, 292, 297, 298, 306, 308, 311, 312, 313, 316, 318], "object": [15, 50, 52, 53, 56, 59, 63, 66, 68, 71, 73, 84, 97, 111, 125, 134, 136, 137, 138, 139, 142, 145, 148, 149, 163, 183, 184, 242, 282, 285, 287, 288, 290, 291, 296, 298, 308, 318], "retriev": [15, 46, 49, 52, 64, 65, 75, 88, 89, 100, 101, 106, 110, 114, 115, 136, 137, 139, 145, 150, 291, 298, 299], "displai": [15, 134], "vertex_rang": [15, 75, 88, 89, 100, 101, 106, 114, 115, 147, 291], "begin": [15, 16, 27, 39, 43, 51, 53, 64, 75, 76, 224, 291, 297], "end": [15, 16, 39, 43, 52, 53, 59, 60, 61, 62, 63, 64, 67, 70, 75, 76, 139, 144, 150, 164, 173, 178, 179, 192, 204, 287, 291, 297, 302], "10": [15, 16, 17, 20, 28, 36, 40, 42, 43, 48, 49, 52, 53, 58, 59, 61, 62, 64, 71, 74, 134, 135, 136, 138, 139, 145, 150, 152, 153, 154, 188, 194, 204, 207, 209, 218, 219, 220, 221, 223, 227, 232, 236, 240, 256, 262, 267, 280, 285, 292, 298, 306, 308, 311, 312, 316], "sort_valu": 15, "pip3": [16, 19, 23, 32, 34, 40, 309, 311, 315], "degre": [16, 19, 20, 39, 43, 53, 59, 74, 76, 136, 137, 142, 150, 159, 184, 185, 204, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 230, 242, 243, 244, 245, 279, 285, 286, 298], "libgrap": [16, 31, 36, 65, 77], "lite": [16, 31, 36, 65, 77], "vertexdatacontext": [16, 17, 73, 150, 308], "myappcontext": 16, "uint64_t": [16, 294], "explicit": [16, 73, 229, 285, 292], "parallelmessagemanag": [16, 17, 308], "param1": 16, "setvalu": [16, 17, 308], "vertex_array_t": [16, 73], "member": [16, 53, 73, 275], "variabl": [16, 29, 38, 40, 52, 80, 204, 298, 299, 311], "And": [16, 18, 23, 29, 33, 36, 43, 48, 50, 52, 53, 71, 74, 75, 138, 143, 288, 291, 292], "zero": [16, 65, 74, 134, 139, 150, 167, 185, 194, 227, 279, 280, 299], "myapp": 16, "parallelappbas": [16, 17, 308], "parallelengin": [16, 17, 308], "install_parallel_work": 16, "constexpr": [16, 73], "messagestrategi": [16, 18, 73, 76, 308], "message_strategi": [16, 73], "ksynconoutervertex": [16, 18, 73, 76, 308], "loadstrategi": [16, 73], "load_strategi": [16, 73], "kbothoutin": [16, 73], "initchannel": 16, "noth": [16, 76, 91, 147, 149, 285], "forc": [16, 34], "forcecontinu": [16, 17, 308], "getincomingadjlist": [16, 39, 73], "basic": [16, 20, 46, 50, 52, 67, 133, 136, 141, 143, 144, 145, 204, 214, 219, 291], "counter": [16, 53], "runnabl": [16, 17, 23], "content": [16, 43, 53, 62, 64, 150, 282, 296, 318], "my_app": [16, 18, 308], "cpp_pie": [16, 74, 81], "context_typ": [16, 73, 74, 81], "dynamicprojectedfrag": 16, "arrowfrag": [16, 73, 299], "codebas": [16, 32], "my_app_context": 16, "comand": 16, "zip": [16, 47, 81, 232, 236, 285, 316], "jr": 16, "load_app": [16, 17, 18, 22, 308], "_project_to_simpl": [16, 17, 22], "path_to_your_gar_resourc": 16, "to_numpi": [16, 17, 22, 74, 75, 147, 291, 308], "practic": [16, 48, 56, 59, 63, 67, 68, 134, 135, 137, 298], "constain": 17, "demo": [17, 22, 23, 50, 77, 292, 296, 298, 306, 308], "turn": [17, 40, 71, 77, 279, 306], "verbos": [17, 23, 35, 40, 306], "lauch": [17, 22, 308], "cluster_typ": [17, 22, 74, 75, 292, 308, 318], "add_lib": [17, 22, 292], "home": [17, 22, 23, 43, 73, 140, 141, 143, 144, 146, 147, 150, 194, 306, 308, 310, 318], "19": [17, 22, 23, 40, 53, 71, 135, 136, 138, 306, 311, 315], "shade": [17, 22, 23, 308], "java_pi": [17, 74], "threadnum": [17, 308], "info": [17, 40, 50, 53, 76, 147, 285, 288, 292, 296, 297, 298, 299, 306], "maven": [17, 23, 77, 298, 308], "groupid": [17, 23, 298, 308], "artifactid": [17, 23, 298, 308], "shall": [17, 23], "fat": 17, "plugin": [17, 23, 298, 308], "spark": [17, 296], "drastic": 17, "great": [17, 23, 34, 298], "coverg": 17, "suppos": [17, 53, 147, 279, 297], "traversecontext": [17, 308], "overrid": [17, 73, 133, 143, 308], "ifrag": [17, 308], "parallelcontextbas": [17, 308], "messagemanag": [17, 308], "adjlist": [17, 73, 76, 296, 308], "nbr": [17, 20, 39, 73, 76, 285, 308], "dst": [17, 18, 27, 43, 49, 59, 75, 133, 136, 147, 149, 291, 294, 297, 308, 317, 318], "largest": [17, 53, 150, 230, 308], "vertexarrai": [17, 73, 76, 308], "math": [17, 58, 62, 64, 150, 234, 235, 312, 314], "max": [17, 76, 146, 150, 308, 316], "pars": [17, 48, 74, 134, 294, 298], "maxiter": [17, 308], "jsonobject": [17, 308], "gsvertexarrai": [17, 308], "createfficontext": [17, 308], "arrai": [17, 39, 56, 68, 73, 74, 75, 136, 137, 139, 142, 145, 285, 288, 300, 308], "avail": [17, 23, 27, 29, 38, 43, 59, 65, 67, 71, 74, 127, 132, 145, 233, 234, 235, 285, 292, 294, 297, 298, 308], "containskei": [17, 308], "getinteg": [17, 308], "javadoc": [17, 32], "mvn": [17, 22, 77, 298], "proper": [17, 34], "javaapp": [17, 290, 308], "But": [17, 47, 53, 70, 77, 285, 291], "rememb": [17, 22, 23, 27], "singel": 17, "full_jar_path": [17, 74, 308], "pack": [17, 23, 308], "java_app_class": [17, 74, 308], "fullli": [17, 308], "qualifi": [17, 74, 308], "b": [17, 18, 22, 34, 52, 53, 139, 194, 212, 225, 231, 232, 236, 241, 242, 243, 245, 273, 281, 285, 308, 316], "param": [17, 23, 29, 40, 74, 93, 94, 110, 125, 127, 128, 129, 132, 139, 145, 147, 292, 298, 308], "string": [17, 23, 47, 67, 73, 74, 76, 80, 119, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 149, 150, 165, 169, 170, 179, 277, 279, 281, 285, 287, 294, 297, 298, 299, 308, 316, 318], "bother": 17, "click": [17, 34, 59, 135, 136, 139, 309], "pure": [18, 73, 302], "just": [18, 19, 23, 28, 40, 43, 47, 52, 53, 70, 77, 143, 147, 285, 288, 292, 300], "udf": [18, 80, 291, 308], "decor": [18, 308], "vd_type": [18, 76, 80, 308], "md_type": [18, 76, 80, 308], "youralgorithm": [18, 308], "staticmethod": [18, 80, 308], "statu": [18, 27, 28, 29, 35, 40, 61, 143, 144, 150, 298, 302, 306], "cython": [18, 31, 40, 46, 110, 290, 308], "sssp_pie": [18, 308], "v_label_num": [18, 299, 308], "vertex_label_num": [18, 76, 294, 299, 308], "v_label_id": [18, 76, 308], "init_valu": [18, 76, 308], "1000000000": [18, 74, 308], "pieaggregatetyp": [18, 76, 308], "kminaggreg": [18, 76, 308], "register_sync_buff": [18, 76, 308], "get_config": [18, 76, 292, 308], "declar": [18, 48, 52, 53, 55, 67, 70, 135, 308], "get_inner_nod": [18, 76, 308], "break": [18, 145, 308], "set_node_valu": [18, 76, 308], "e_label_num": [18, 39, 299, 308], "edge_label_num": [18, 76, 294, 299, 308], "e_label_id": [18, 308], "get_outgoing_edg": [18, 76, 308], "third": [18, 46, 63, 67, 147, 270, 271], "column": [18, 39, 43, 44, 48, 49, 56, 64, 68, 73, 75, 76, 82, 134, 144, 147, 278, 294, 298, 299, 308, 312, 318], "get_int": [18, 76, 308], "get_node_valu": [18, 76, 308], "iv": [18, 308], "inner_nod": [18, 76, 308], "v_dist": [18, 308], "u_dist": [18, 39, 308], "classic": [18, 59, 138, 286], "yourpregelalgorithm": [18, 308], "sssp_pregel": [18, 308], "set_valu": [18, 76, 308], "src_id": [18, 39, 59, 134, 135, 136, 138, 139, 142, 145, 149, 308], "cur_dist": [18, 308], "new_dist": [18, 308], "outgoing_edg": [18, 76, 308], "vote_to_halt": [18, 76, 308], "sin": [18, 308], "m_pi": [18, 308], "translat": [18, 34, 63], "test": [18, 23, 29, 40, 46, 47, 50, 53, 55, 58, 61, 62, 64, 68, 133, 143, 145, 149, 169, 170, 204, 285, 287, 292, 297, 298, 309, 310, 312, 317], "save": [18, 29, 47, 135, 150, 298], "futur": [18, 52, 53], "to_gar": [18, 308], "my_sssp_pregel": [18, 308], "gar": [18, 74, 81, 296, 308], "later": [18, 20, 30, 33, 50, 53, 67, 147, 292, 297, 298, 315], "construct": [19, 53, 56, 59, 63, 64, 73, 125, 133, 134, 135, 136, 137, 147, 148, 152, 153, 193, 214, 216, 217, 219, 225, 229, 230, 231, 239, 242, 243, 244, 245, 247, 263, 267, 271, 277, 279, 292, 296, 299], "expand": [19, 46, 48, 53, 137, 139, 286], "add_edges_from": [19, 20, 169, 285], "add_nod": [19, 20, 285, 288], "number_of_nod": [19, 20, 150, 194, 278, 285], "number_of_edg": [19, 20, 159, 194, 278, 285], "sort": [19, 20, 39, 48, 53, 150, 156, 184, 188, 191, 194, 219, 220, 278, 279, 285, 297], "connected_compon": [19, 150], "nx": [19, 20, 43, 84, 86, 87, 90, 93, 95, 97, 104, 105, 109, 112, 113, 147, 150, 285, 287, 288], "add_nodes_from": [19, 20, 285], "red": [19, 20, 34, 134, 285], "green": [19, 20, 34], "add_edg": [19, 20, 43, 147, 163, 169, 170, 173, 178, 179, 285, 288, 312, 313, 318], "1415": [19, 20], "all_pairs_shortest_path": 19, "sp": 19, "dict": [19, 20, 28, 74, 75, 102, 103, 111, 132, 135, 136, 139, 147, 148, 232, 233, 234, 235, 242, 243, 263, 285, 291, 292, 298], "draw": [19, 53, 232, 235], "matplotlib": [19, 53], "with_label": 19, "font_weight": 19, "bold": [19, 71], "twitter": [19, 71], "wget": [19, 22, 23, 29, 32, 140, 316], "raw": [19, 22, 23, 47, 48, 56, 100, 101, 135, 141, 143, 144, 149], "githubusercont": [19, 22, 23], "p": [19, 20, 36, 52, 53, 65, 74, 135, 145, 150, 208, 209, 210, 212, 221, 222, 223, 226, 227, 229, 231, 233, 234, 235, 236, 239, 241, 316], "netwrokx": 19, "o": [19, 22, 23, 27, 28, 35, 73, 145, 150, 167, 218, 220, 225, 233, 234, 235, 237, 238, 239, 285, 298, 309, 312], "gs_nx": 19, "g1": [19, 147, 289, 300, 301], "read_edgelist": [19, 287], "expandvar": [19, 22], "nodetyp": [19, 287], "create_us": [19, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 214, 215, 216, 217, 219, 221, 222, 223, 225, 229, 230, 231, 237, 238, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 280, 287], "g2": [19, 147, 285, 289, 300, 301], "ret_g": 19, "ret_nx": 19, "lack": [20, 30, 69, 150], "hashabl": [20, 165, 180, 242, 285, 287], "float": [20, 61, 67, 71, 74, 133, 134, 135, 136, 144, 145, 146, 150, 204, 207, 208, 209, 210, 212, 223, 224, 225, 226, 227, 232, 233, 234, 235, 236, 239, 240, 241, 277, 285, 287, 292, 300, 316, 317, 318], "tupl": [20, 53, 134, 135, 136, 145, 147, 150, 169, 170, 179, 191, 232, 236, 242, 281, 285, 287, 292], "though": [20, 204, 285, 298], "yield": [20, 139, 145, 232, 236, 285], "node_attribute_dict": 20, "discuss": [20, 40, 53, 150, 297, 311], "incorpor": 20, "path_graph": [20, 150, 161, 163, 164, 170, 285, 287], "grown": [20, 194, 227, 285], "unpack": [20, 47, 73, 285], "ebunch": [20, 285], "dictionari": [20, 74, 119, 150, 232, 233, 234, 235, 242, 243, 244, 245, 285, 287], "arrtibut": 20, "11": [20, 27, 28, 30, 36, 50, 53, 71, 74, 134, 135, 136, 138, 152, 153, 154, 190, 285, 298, 306, 309, 315], "complaint": 20, "clear": [20, 34, 52, 53, 86, 87, 185, 187, 188, 190, 192, 194, 195, 197, 199, 200, 203, 214, 216, 217, 219, 221, 222, 223, 225, 229, 230, 231, 237, 238, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 280, 285, 287], "quietli": [20, 180, 285], "ignor": [20, 150, 161, 180, 285, 292], "spam": 20, "stage": [20, 40, 46, 56, 69, 70, 139, 297], "8": [20, 30, 32, 36, 40, 53, 55, 58, 71, 74, 134, 188, 211, 230, 253, 262, 264, 270, 274, 280, 282, 285, 287, 298, 300, 311, 316], "seen": [20, 48, 63, 297], "facilit": [20, 55, 56, 59, 68, 134, 297, 298], "report": [20, 40, 46, 71, 109, 208, 209, 210, 285, 288], "adj": [20, 76, 150, 285], "One": [20, 48, 63, 68, 69, 70, 74, 137, 139, 216, 225, 279, 298], "nbunch": [20, 158, 162, 164, 180, 285], "remove_nod": [20, 285], "remove_nodes_from": [20, 285], "remove_edg": [20, 285], "remove_edges_from": [20, 214, 216, 285], "instanti": [20, 74, 145, 300], "digraph": [20, 147, 152, 162, 164, 169, 170, 173, 178, 179, 190, 207, 208, 209, 212, 216, 217, 219, 221, 222, 223, 224, 228, 279, 280, 281, 283, 286, 287, 288], "edgelist": [20, 263, 287], "subscript": [20, 285], "notat": [20, 250, 252, 254, 256, 258, 264, 266, 285], "yellow": [20, 134], "blue": [20, 134, 285], "pair": [20, 49, 53, 73, 74, 76, 132, 145, 184, 189, 190, 196, 212, 230, 236, 285, 288, 291, 297, 299], "undirect": [20, 44, 68, 74, 93, 135, 139, 147, 150, 156, 160, 182, 205, 206, 212, 214, 221, 223, 226, 228, 229, 230, 232, 233, 234, 235, 236, 242, 247, 251, 252, 255, 258, 259, 261, 267, 280, 282, 285, 299], "twice": [20, 263, 285], "fg": [20, 299], "add_weighted_edges_from": [20, 169, 285], "125": [20, 134, 218, 229], "75": [20, 53, 58, 61, 62, 64, 71, 150, 208, 209, 210, 212, 292, 312], "375": 20, "eattr": [20, 285], "wt": 20, "attach": [20, 73, 134, 221, 224], "fridai": [20, 285, 288], "mondai": 20, "5pm": [20, 285], "2pm": [20, 285], "room": [20, 285], "714": [20, 285], "to_direct": [20, 147, 205, 206, 221, 223, 285], "representaion": 20, "dg": [20, 55, 68], "represent": [20, 48, 63, 68, 147, 283, 285, 296], "dgv": 20, "as_view": [20, 181, 182, 285], "shallow": 20, "out_edg": [20, 162, 285], "in_degre": [20, 59, 61, 137, 139, 142, 145, 216, 242, 243, 285], "predecessor": [20, 155, 228, 279, 285], "successor": [20, 121, 155, 222, 223, 228, 285], "out_degre": [20, 216, 242, 243, 285], "feel": [20, 34, 40], "inconsist": [20, 71], "inde": [20, 22], "lump": 20, "danger": 20, "probabl": [20, 34, 52, 59, 68, 74, 137, 142, 207, 208, 209, 210, 212, 214, 218, 221, 223, 224, 225, 226, 227, 232, 233, 234, 235, 236, 239, 241], "to_undirect": [20, 147, 221, 223, 285], "represet": 20, "retrun": 20, "theoret": 20, "load_ldbc": [20, 53, 316], "foo": [20, 285], "famou": [22, 23, 284], "hadoop": [22, 298], "cetric": 22, "aim": [22, 53, 62, 65, 66, 67, 68, 70], "stop": [22, 27, 28, 69, 73, 150], "intergr": 22, "open": [22, 34, 47, 59, 67, 70, 145, 287, 297], "actual": [22, 49, 52, 53, 59, 78, 138, 236, 285, 288, 296, 306], "loader": [22, 73, 83, 94, 290, 299, 313, 314], "vertexinputformat": 22, "edgeinputformat": 22, "load_from": [22, 27, 147, 292], "vformat": [22, 147], "p2pvertexinputformat": 22, "eformat": [22, 147], "p2pedgeinputformat": 22, "gs_test_dir": 22, "graphscope_sess": [22, 147], "31": [22, 23, 43, 44, 135, 136, 138, 318], "v_prop": [22, 73, 108], "vdata": 22, "e_prop": [22, 73, 108], "giraph_sssp": 22, "sourceid": 22, "faster": [22, 150], "toward": [22, 298], "offici": [22, 47, 50, 67], "pl": 22, "snapshot": [22, 67, 70, 294, 298], "writabl": 22, "degrad": [22, 70], "procedur": [22, 29, 47, 48, 53, 83, 227], "except": [22, 40, 58, 61, 62, 64, 69, 138, 145, 163, 180, 184, 195, 204, 214, 216, 265, 285, 292, 297, 312], "right": [22, 143, 186, 195, 197, 218, 283], "inputformat": 22, "coloc": 23, "sparksess": 23, "gssparksess": 23, "experi": [23, 30, 34, 43, 48, 55, 66, 68, 70, 71, 207], "enviro": 23, "proceed": [23, 28, 207, 225], "side": [23, 34, 48, 52, 74, 92, 135, 188, 297], "venv": [23, 50, 64], "virtualenv": 23, "pyspark_venv": 23, "bin": [23, 36, 47, 50, 53, 63, 64, 159, 298, 306, 310, 316], "pyspark_venv_g": 23, "tar": [23, 29, 36, 298], "gz": [23, 36, 287, 298], "neccessari": [23, 74], "upload": [23, 47], "pyspark_driver_python": 23, "pyspark_python": 23, "archiv": [23, 63, 316], "oss": [23, 29, 36, 73, 140, 147, 298, 308, 309, 318], "beij": [23, 29, 36, 56, 68, 134, 298, 309], "fixm": 23, "yuansi": [23, 57], "env": [23, 40, 50, 64, 140], "var": [23, 145, 298, 306, 318], "gs_jar": 23, "l": [23, 29, 32, 59, 68, 137, 205, 206, 208, 209, 210, 217, 218, 219, 221, 222, 223, 226, 233, 234, 235, 236, 238, 242, 243, 244, 245, 274, 277, 285, 306], "lib": [23, 36, 81, 298], "7077": 23, "master_url": 23, "conf": [23, 47, 73, 298, 316], "executor": [23, 32, 47, 63, 306], "driver": [23, 28, 47, 111, 147, 298, 316], "2g": 23, "10g": [23, 310], "minregisteredresourcesratio": 23, "bfstest": 23, "placehold": 23, "acut": [23, 65], "url": [23, 147, 148, 298, 316], "rdd": 23, "pom": [23, 298], "xml": [23, 73, 298], "classifi": [23, 56, 58, 62, 64, 68, 145, 308], "sure": [23, 27, 28, 38, 53, 139, 143, 145, 298], "conflict": [23, 50, 53, 58, 147, 275], "correctli": [23, 34, 40, 55, 150, 298], "resolv": [23, 40, 147, 299], "goal": [23, 48, 56, 65, 68, 297], "reloc": 23, "shadedpattern": 23, "insteadof": 23, "graphgscop": 23, "memroi": 23, "vineyardmemori": 23, "memorystr": 23, "builder": [23, 39, 48, 191, 298], "config": [23, 28, 36, 47, 109, 119, 127, 132, 133, 146, 149, 289, 292, 294, 298, 299, 316, 317], "socket": [23, 73, 299], "bound": [23, 52, 53, 67, 110, 204, 297, 300], "vineyardsock": 23, "filepath": 23, "sock": 23, "gssubmitjar": 23, "grapegraph": 23, "togsgraph": 23, "vd": 23, "classtag": 23, "grapegraphimpl": 23, "loadgraphtog": 23, "vfilepath": 23, "efilepath": 23, "numpartit": 23, "performac": 23, "observ": [23, 40], "argument": [23, 52, 53, 59, 150, 152, 153, 154, 183, 191, 221, 228, 232, 233, 234, 235, 236, 263, 285, 288, 291, 292, 298, 299, 308], "shell": [23, 32, 74], "grow": [24, 43, 55, 63, 204, 214, 221, 222, 223, 284, 297], "capac": [24, 285], "indivis": 24, "succinctli": 24, "oppos": [24, 59], "orient": [24, 59, 70, 142, 298], "googl": [24, 32, 66, 310], "powergraph": [24, 70, 71], "wa": [24, 27, 29, 34, 52, 53, 65, 71, 139, 150, 204, 219, 232, 233, 234, 235, 284, 298], "2010": [24, 71, 74, 150, 210, 277, 282], "sequenc": [24, 52, 53, 74, 147, 184, 204, 214, 215, 216, 217, 218, 219, 220, 236, 242, 243, 246, 279, 280, 285, 286, 299], "conceptu": 24, "behavior": [24, 52, 53, 76, 292], "becom": [24, 43, 53, 59, 285, 297, 298], "inact": 24, "again": [24, 40, 300], "termin": 24, "halt": [24, 67, 76, 224], "individu": [24, 46, 47, 62, 64], "messageiter": [24, 76], "mindist": 24, "issourc": 24, "vertex_id": [24, 43, 318], "inf": 24, "done": [24, 56, 59, 134, 145, 150, 247, 299], "getvalu": [24, 39], "mutablevalu": 24, "outedgeiter": 24, "getoutedgeiter": 24, "sendmessageto": 24, "votetohalt": 24, "drop": [24, 40, 298], "dramat": 24, "face": [24, 36, 48, 53, 66, 270, 271], "power": [24, 53, 55, 74, 150, 204, 214, 262, 285], "law": [24, 204, 214], "gather": [24, 292], "scatter": [24, 135], "accumul": [24, 59, 279], "reus": [27, 56, 59, 65, 74, 145, 147, 292, 294], "instruct": [27, 28, 29, 47, 50, 64, 67, 73, 85, 139], "linux": [27, 28, 36, 47, 71, 77, 315], "maco": [27, 28, 40, 50, 309, 311, 312, 315], "recommend": [27, 28, 34, 40, 47, 50, 53, 56, 63, 64, 68, 139], "minikub": [27, 28, 47, 298], "simplifi": [27, 47, 63, 64, 65, 67, 69, 134, 139, 297], "etcd": [27, 40, 47, 292, 294, 309], "vineyard_replica": 27, "vineyard_etcd_replica": 27, "vineyardctl": 27, "vineyard_deploy": 27, "create_namespac": 27, "namespac": [27, 28, 29, 35, 292], "kubectl": [27, 28, 29, 35, 40, 47, 298, 306, 311], "restart": [27, 46, 306], "ag": [27, 48, 49, 52, 53, 56, 68, 133, 134, 147, 291, 306, 316, 317], "etcd0": 27, "73m": 27, "vineyardd": [27, 292], "5db59987f": 27, "vr2fg": 27, "copi": [27, 28, 29, 47, 63, 65, 70, 90, 150, 157, 161, 163, 164, 222, 228, 283, 285, 288, 296, 297, 298, 299, 300], "mount": [27, 33, 40, 48, 144, 292, 309, 311, 312], "onto": 27, "vm": [27, 28, 73], "stai": 27, "aliv": 27, "testingdata": [27, 28, 309, 312], "k8s_namespac": [27, 127, 132, 292], "k8s_vineyard_deploy": [27, 127, 132, 292], "reload": [27, 298], "k8s_volum": [27, 28, 127, 132, 292, 309, 312], "hostpath": [27, 28, 47, 292, 309, 312], "mountpath": [27, 28, 292, 309, 312], "vineyard_id": [27, 147, 306], "last": [27, 28, 53, 139, 144, 147, 207, 279, 306], "new_sess": 27, "22731319746904674": 27, "softwar": [27, 47, 52, 55, 63, 147, 299], "successfulli": [27, 56, 61, 204, 298], "distributedli": [28, 135, 141, 143, 144, 145], "workload": [28, 33, 43, 46, 48, 50, 51, 53, 55, 63, 65, 71, 298, 300, 301], "grpc": [28, 36, 40, 73, 298, 309, 311], "interact": [28, 29, 33, 38, 43, 44, 47, 48, 51, 53, 55, 63, 65, 66, 69, 70, 72, 98, 102, 103, 129, 147, 226, 275, 290, 292, 312, 316], "acceler": [28, 297], "skip": [28, 32, 36, 67, 77, 298], "platform": [28, 30, 34, 46, 47, 48, 69, 70, 71, 77, 134, 276, 292], "desktop": [28, 47, 298, 312], "server": [28, 29, 47, 48, 55, 59, 63, 65, 67, 72, 138, 143, 144, 145, 297, 298, 310, 316], "kube": [28, 292], "apivers": 28, "v1": [28, 32, 40, 52, 53, 58, 61, 62, 64, 67, 133, 250, 263, 288, 311, 312, 317], "certif": 28, "ca": 28, "crt": 28, "16": [28, 36, 53, 71, 133, 135, 136, 138, 140, 241, 264, 278, 317], "2023": [28, 306], "44": [28, 71, 135, 136, 138, 278], "05": [28, 212, 225], "cst": 28, "sig": [28, 47, 308], "io": [28, 38, 47, 65, 66, 74, 144, 147, 235, 298, 301], "28": [28, 53, 56, 68, 71, 135, 136, 138, 282], "cluster_info": 28, "172": [28, 71], "21": [28, 36, 43, 53, 71, 74, 135, 136, 138, 258, 298], "67": [28, 71, 74], "111": 28, "8443": 28, "context_info": 28, "profil": [28, 316], "encapsul": [28, 55, 56, 133, 139, 292], "serv": [28, 40, 55, 65, 68, 135, 298], "entranc": [28, 139], "tag": [28, 38, 52, 53, 71, 212, 292, 298, 310], "intranet": 28, "internet": [28, 29, 36, 53, 66, 282, 284], "might": [28, 40, 150, 242, 285, 301], "k8s_image_registri": [28, 292], "k8s_image_repositori": [28, 292], "k8s_image_tag": [28, 292], "cannot": [28, 40, 52, 53, 56, 68, 70, 73, 74, 135, 147, 204, 243, 244, 292, 298, 300, 311], "fit": [28, 43, 47, 60, 61, 77], "increas": [28, 35, 40, 43, 135, 183, 184, 192, 214, 216, 224, 242, 245, 247, 297], "cpu": [28, 40, 47, 140, 292, 301, 311], "num_work": [28, 127, 132, 292, 316], "k8s_engine_cpu": [28, 127, 132, 292], "32": [28, 52, 71, 135, 136, 138, 146, 150], "k8s_engine_mem": [28, 40, 127, 132, 292, 311], "256gi": 28, "vineyard_shared_mem": [28, 40, 127, 132, 292, 311], "k8s_client_config": [28, 292], "disk": [28, 40, 47, 63, 298], "test_data": [28, 58, 62, 64, 309, 312], "constructor": [28, 44, 185, 187, 188, 190, 192, 194, 195, 197, 199, 200, 203, 214, 216, 217, 219, 221, 222, 223, 225, 229, 230, 231, 237, 238, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 280, 287], "expandus": [28, 309, 312], "expect": [28, 31, 34, 40, 77, 214, 216, 218, 288, 292], "monitor": [28, 29, 46, 55], "wait": [28, 40, 292], "finish": [28, 39, 61, 76, 135, 138], "remov": [28, 29, 46, 52, 53, 74, 77, 140, 157, 163, 165, 211, 214, 216, 218, 260, 263, 279, 285, 298], "remain": [28, 52, 66, 134, 139, 219, 246], "statefulset": [28, 298], "svc": [28, 47], "left": [28, 74, 147, 150, 186, 218], "ideal": [29, 34, 70], "deploy_graphscope_on_self_managed_k8": 29, "chart": [29, 40, 47, 53, 298, 309, 311], "minut": [29, 40, 48], "succe": 29, "past": [29, 48, 300], "noteport": 29, "node_ip": [29, 298], "ojsonpath": 29, "hostip": 29, "node_port": 29, "spec": [29, 73, 145], "nodeport": [29, 292, 298, 312], "echo": [29, 36], "listen": [29, 73], "statement": [29, 139, 298], "ident": [29, 75, 90, 147, 181, 182, 186, 257, 277, 279, 285], "reconnect": [29, 292], "disconnect": [29, 150, 226, 227, 242, 245, 292], "sess1": 29, "sess2": 29, "comment": [29, 34, 43, 53, 134, 285, 287, 288, 313, 318], "homepag": 29, "quer": [29, 69, 75, 102, 148, 291], "remot": [29, 47, 77, 148, 292, 316], "cater": [29, 63], "tgz": 29, "unzip": [29, 47, 316], "zxvf": 29, "ubuntu": [30, 40, 47, 50, 140, 309, 311, 315], "04": [30, 40, 47, 50, 53, 71, 140, 309, 311, 315], "cento": [30, 36, 40, 50, 71, 311, 315], "sur": [30, 50, 315], "openjdk": 30, "wheel": [30, 40, 46, 203, 269, 311, 314], "wish": [30, 34], "nightli": [30, 40, 311], "clean": [30, 43, 46, 50, 64, 77, 143, 297], "tidi": 30, "quickli": [30, 55, 64, 68, 70, 145, 292], "insid": [30, 33, 35, 40, 52, 53, 74, 81, 134, 146, 147, 260, 291, 292, 316], "apt": [30, 140], "y": [30, 36, 53, 74, 231, 232, 236], "jdk": [30, 54, 302, 308], "ipython": 30, "tensorflow": [30, 55, 56, 58, 61, 62, 63, 64, 68, 69, 133, 134, 135, 138, 139, 141, 145, 312], "tool": [30, 32, 33, 43, 47, 55, 57, 63, 232, 234, 294, 297, 298, 299, 315], "script": [30, 46, 70, 71, 102, 103, 133, 134, 145, 148, 309, 315], "dep": [30, 32, 309, 310], "easier": [30, 34, 52, 65, 66, 139, 292], "fly": [30, 64], "clang": [30, 32, 50, 310], "essenti": [30, 52, 55, 69], "arm": 30, "preliminari": 30, "yet": [30, 52, 75, 242, 245, 285, 291, 298], "nativ": [31, 48, 63, 69, 70], "behind": [31, 61, 297, 300, 306], "scene": [31, 48, 61, 142], "lower": [31, 48, 52, 53, 67, 204, 211, 224], "cost": [31, 48, 53, 63, 67, 150, 298], "ownership": 31, "cach": [31, 56, 66, 70, 285], "layout": [31, 66, 298], "were": [31, 34, 53, 71, 236, 298], "ldbc": [31, 47, 49, 50, 51, 55, 66, 70, 71, 313, 318], "benchmark": [31, 49, 53, 55, 66, 68, 70, 204], "outperform": [31, 55, 66, 68, 69, 70], "art": [31, 55, 66, 69, 71], "voderank": 31, "average_degree_assort": 31, "degree_assort": 31, "guidelin": [32, 34, 46], "promot": 32, "readabl": [32, 285], "qualiti": [32, 34, 68], "black": [32, 310], "lang": 32, "enforc": 32, "rule": [32, 48, 53, 59, 66, 137, 143, 147, 184, 294], "cpplint": 32, "flake8": 32, "fmt": 32, "lint": [32, 34], "makefil": 32, "graphscope_clformat": 32, "graphscope_cpplint": 32, "dev": [32, 46, 309, 310], "pushd": 32, "isort": 32, "diff": 32, "popd": 32, "interactive_engin": [32, 33], "check_format": 32, "sh": [32, 36, 47, 140, 298, 315, 316], "13": [32, 36, 53, 71, 134, 135, 136, 138, 190, 231], "files_to_format": 32, "aosp": 32, "toolchain": [33, 57], "subcommand": [33, 57], "dependic": [33, 57], "volum": [33, 40, 47, 208, 209, 210, 220, 229, 274, 292, 297], "bash": [33, 36, 306, 310], "hk": [33, 57], "go": [33, 57, 145, 212, 265, 298], "4g": [33, 57], "amount": [33, 43, 57, 68, 137, 139, 141], "alloc": [33, 40, 57, 61], "assembli": 33, "learning_engin": 33, "graphlearn": [33, 56, 58, 61, 62, 64, 133, 134, 135, 139, 140, 145, 146, 149, 292, 306, 312, 317], "opt": [33, 36, 38, 48, 145], "compos": [33, 56, 59, 64, 66, 70], "alon": [33, 48, 49], "circul": [33, 188], "edit": [33, 34, 231, 268], "made": [33, 34, 47, 59, 71, 134, 137, 143, 150, 245, 297], "entrypoint": [33, 312], "plai": [33, 48, 54, 72, 144, 149, 302], "thank": [34, 43, 63], "interest": [34, 53, 55, 66, 298], "focus": [34, 53, 63, 69, 71, 139, 277, 298], "eager": [34, 74, 75, 125, 128, 129, 147, 148, 292], "contributor": [34, 278], "welcom": 34, "engag": [34, 63], "good": 34, "particip": 34, "join": [34, 53, 135, 145, 186, 189, 197, 204, 213, 214, 227, 229, 232, 233, 234, 235, 236, 244, 245, 285, 297], "ask": [34, 46], "question": [34, 46, 53, 311], "ve": [34, 47, 63], "hasn": [34, 53], "confirm": 34, "concis": [34, 49, 148], "descript": [34, 48, 59, 134, 137, 142, 143, 242, 250, 298], "relev": [34, 140, 179, 285, 296], "reproduc": [34, 285], "yourself": 34, "why": [34, 40, 46, 53, 74], "becaus": [34, 48, 53, 67, 68, 133, 136, 150, 280, 297, 298], "saw": 34, "incomplet": 34, "inaccur": 34, "knowledg": [34, 43, 56, 68, 141], "gain": 34, "submiss": 34, "setup": [34, 40, 147, 292, 310], "fact": [34, 48, 242, 245], "page": [34, 46, 65, 74, 78, 195, 210, 274, 314], "button": 34, "tbf": [34, 45, 64, 71, 293, 304, 307], "isn": [34, 67, 138], "someon": 34, "approach": [34, 49, 55, 56, 63, 65, 68, 138, 214, 227, 282, 297], "spend": 34, "_": [34, 74, 147, 150, 285, 288, 308, 311, 313, 318], "secret": [34, 292, 309, 318], "accident": 34, "hook": 34, "titl": [34, 53, 62, 64], "grammar": 34, "spell": 34, "500": [34, 204], "word": [34, 53, 62, 64, 67, 68, 145, 147, 285], "42": [34, 53, 71, 135, 136, 138, 208, 210, 220, 278], "ticket": 34, "chines": 34, "everyon": 34, "beginn": 34, "patch": 34, "rest": [34, 285, 298], "attain": 34, "feedback": [34, 43], "discourag": 34, "rebas": 34, "workflow": [34, 43, 46, 63, 68, 69, 73], "upstream": [34, 139], "leas": 34, "ping": [34, 308], "await": 34, "unfamiliar": 34, "acronym": 34, "glossari": [34, 46, 278], "ci": 34, "approv": 34, "extra": [34, 40, 47, 150, 246, 311], "date": [34, 53, 297, 298], "todo": [34, 38, 57, 65, 143], "dongz": 34, "potenti": [34, 56, 63, 297], "concern": [34, 63, 70, 297], "reach": [34, 40, 49, 53, 67, 139, 144, 147, 150, 227, 242, 245, 297], "action": 34, "realiti": [34, 139], "uncommon": 34, "infrastructur": 34, "vital": 34, "visual": [34, 63], "inspect": [34, 292], "determin": [34, 48, 52, 53, 56, 59, 66, 67, 73, 74, 135, 139, 230, 233, 234, 235, 292], "failur": [34, 70], "event": [35, 204], "involvedobject": 35, "warn": [35, 285], "pinpoint": 35, "log_level": [35, 127, 132, 292], "exec": [35, 298, 306], "diagnost": 35, "forward": [35, 56, 58, 59, 61, 62, 64, 68, 139, 312], "browser": [35, 53], "explain": [35, 53, 134, 292, 297, 316], "folder": [36, 297], "82": [36, 71], "boost": [36, 55, 63, 73], "perl": 36, "v3": [36, 67, 71], "24": [36, 47, 53, 71, 135, 136, 138, 252, 270, 278], "openmpi": [36, 71], "gflag": 36, "glog": 36, "arrow": [36, 39, 73, 84, 97, 147, 288], "74": [36, 71, 276], "openssl": [36, 40, 311], "zlib": 36, "protobuf": 36, "49": [36, 53, 71, 135, 136, 138], "libclang": 36, "curl": [36, 47], "lo": [36, 47], "czf": 36, "mkdir": [36, 40, 145, 311], "workdir": 36, "xzf": 36, "yum": 36, "scl": 36, "rh": [36, 39], "devtoolset": 36, "python38": 36, "euxo": 36, "pipefail": 36, "dir": [36, 298], "ld_library_path": 36, "lib64": 36, "py2": 36, "py3": [36, 310], "manylinux2010_x86_64": 36, "whl": [36, 140, 143], "x86_64": 36, "licens": [36, 310], "dbuild_shared_lib": 36, "ON": 36, "dcmake_prefix_path": 36, "dcmake_install_prefix": 36, "boost_1_74_0": 36, "bootstrap": 36, "filesystem": [36, 134], "program_opt": 36, "regex": 36, "chrono": 36, "atom": [36, 298], "date_tim": 36, "b2": 36, "openssl_1_1_1h": 36, "fpic": 36, "cpp": 36, "darrow_comput": 36, "darrow_with_utf8proc": 36, "off": [36, 48, 63, 270, 298], "darrow_csv": 36, "darrow_filesystem": 36, "darrow_ipc": 36, "darrow_build_benchmark": 36, "darrow_build_exampl": 36, "darrow_build_integr": 36, "darrow_build_util": 36, "darrow_build_test": 36, "darrow_enable_timing_test": 36, "darrow_fuzz": 36, "darrow_jemalloc": 36, "darrow_build_shar": 36, "darrow_build_stat": 36, "mpi": [36, 73], "cxx": 36, "dlopen": 36, "nproc": 36, "dgrpc_instal": 36, "dgrpc_build_test": 36, "dgrpc_build_csharp_ext": 36, "dgrpc_build_grpc_csharp_plugin": 36, "dgrpc_build_grpc_node_plugin": 36, "dgrpc_build_grpc_objective_c_plugin": 36, "dgrpc_build_grpc_php_plugin": 36, "dgrpc_build_grpc_python_plugin": 36, "dgrpc_build_grpc_ruby_plugin": 36, "dgrpc_backwards_compatibility_mod": 36, "dgrpc_protobuf_provid": 36, "dgrpc_zlib_provid": 36, "dgrpc_ssl_provid": 36, "dopenssl_root_dir": 36, "dcmake_cxx_flag": 36, "fpermiss": 36, "v6d": [36, 46, 47], "dbuild_vineyard_test": 36, "dbuild_vineyard_python_bind": 36, "j4": 36, "dnetworkx": 36, "denable_java_sdk": 36, "dbuild_test": 36, "compris": [38, 62, 63, 67, 138], "busi": [38, 44, 48, 50, 53, 56, 63, 64, 70], "e2": [38, 264], "siyuan": 38, "somewher": 38, "graphscope_env": [38, 309, 310], "prod": 38, "coupl": [38, 65, 70, 265, 294], "sai": 38, "\u6807\u7b7e": 39, "\u8868\u793a\u67d0\u4e00\u7c7b\u9876\u70b9\u6216\u8005\u8fb9": 39, "\u5c5e\u6027": [39, 316, 318], "\u8868\u793a\u9876\u70b9\u6216\u8fb9\u6240\u5173\u8054\u7684\u6570\u636e": 39, "\u539f\u59cbid": 39, "oid": [39, 73, 75, 76], "\u539f\u59cb\u6570\u636e\u96c6\u4e2d\u7684id": 39, "\u4e0d\u540c\u6807\u7b7e\u7684\u9876\u70b9\u5141\u8bb8\u6709\u76f8\u540c\u7684oid": 39, "\u5b50\u56feid": 39, "fid": [39, 73, 76, 109, 294], "\u5b50\u56fe\u7684\u552f\u4e00\u7f16\u53f7": 39, "\u5206\u533a\u5668": 39, "partition": [39, 143], "\u80fd\u591f\u786e\u5b9a\u9876\u70b9oid\u5230\u5206\u533aid": 39, "\u7684\u6620\u5c04": 39, "\u5b50\u56fe": 39, "\u901a\u8fc7\u5207\u8fb9\u5f97\u5230\u7684\u5b50\u56fe": 39, "\u5b58\u50a8\u4e86\u9876\u70b9": 39, "\u8fb9": [39, 308], "\u9876\u70b9\u6570\u636e": 39, "\u8fb9\u6570\u636e\u7b49\u4fe1\u606f": 39, "\u5185\u90e8\u70b9": 39, "\u5c5e\u4e8e\u672cfragment\u7684\u9876\u70b9": 39, "\u5916\u90e8\u70b9": 39, "\u4e0d\u5c5e\u4e8e\u672cfragment\u7684\u9876\u70b9": 39, "\u672c\u5730id": 39, "lid": [39, 73, 109], "\u53ea\u5728\u67d0\u4e2afragment\u5185\u90e8\u6709\u610f\u4e49": 39, "\u5168\u5c40id": 39, "gid": [39, 73, 109], "\u80fd\u591f\u8868\u793a\u4efb\u610f\u4e00\u4e2a\u9876\u70b9": 39, "\u88abfragment\u5171\u8bc6": 39, "\u7528\u4e8e\u5b58\u50a8gid": 39, "oid\u7684\u6620\u5c04\u5173\u7cfb": 39, "\u7684\u8282\u70b9": 39, "\u5b58\u5728\u4ee5\u4e0b\u7f16\u7801\u65b9\u5f0f": 39, "gid\u7f16\u7801": 39, "offset": [39, 73, 136, 144, 188], "\u5176\u4e2d": [39, 308, 313], "\u548c": [39, 139, 308, 310, 311, 312, 313, 315, 316, 317, 318], "\u5171\u540c\u7ec4\u6210": 39, "\u67d0\u4e00\u7c7b\u9876\u70b9\u5728\u67d0\u4e2a": 39, "\u7684\u9876\u70b9": 39, "\u5e8f\u53f7": 39, "lid\u7f16\u7801": 39, "\u586b\u5145": 39, "\u603b\u662f": 39, "\u6309\u7167\u6267\u884c\u6d41\u7a0b\u7f16\u53f7": 39, "\u63cf\u8ff0\u4e86\u8f7d\u56fe\u7684\u4e3b\u8981\u903b\u8f91": 39, "\u5206\u4e3ahashpartitioner\u548csegmentedpartiton": 39, "\u521d\u59cb\u5316\u4ed6\u4eec\u9700\u8981\u7ed9\u51fafragment\u7684\u6570\u91cf": 39, "segmentedpartitioner\u8fd8\u9700\u7ed9\u51fa\u5168\u90e8\u7684oid": 39, "\u6bcf\u4e2a\u8fdb\u7a0b\u8bfb\u53d6\u4e00\u90e8\u5206\u70b9": 39, "\u8fb9\u6587\u4ef6": 39, "\u5f97\u5230\u591a\u4e2avertex": 39, "\u548cedg": 39, "etabl": 39, "\u5176\u4e2dvtable\u6309\u7167\u9876\u70b9\u6807\u7b7e": 39, "\u5206\u7ec4": 39, "etable\u5148\u6309\u7167\u8fb9\u6807\u7b7e": 39, "\u540c\u4e00\u4e2a\u8fb9\u6807\u7b7e\u4e0b\u9762\u53c8\u6309\u7167src\u548cdst\u7684\u9876\u70b9\u6807\u7b7e\u5206\u7ec4": 39, "\u539f\u59cb\u7684\u9876\u70b9\u8868": 39, "\u8fb9\u8868": 39, "\u6bcf\u4e2a\u8fdb\u7a0b\u6301\u6709\u90e8\u5206\u7684\u6570\u636e": 39, "partial_v_t": 39, "partial_e_t": 39, "num": [39, 52, 53, 146, 297], "table\u5305\u542boid": 39, "table\u5305\u62ecsrc\u548cdst\u7684oid": 39, "\u8bbf\u95eevtable\u7684oid\u5217": 39, "\u6839\u636eoid\u67e5\u8be2partit": 39, "\u5c06\u8868\u4e2d\u7684\u8bb0\u5f55\u5206\u53d1\u7ed9\u9876\u70b9\u7684\u62e5\u6709\u8005": 39, "\u4eceshuffle\u540e\u7684vtable\u53d6\u51faoid\u6267\u884cal": 39, "gather\u64cd\u4f5c": 39, "\u4f7f\u5f97\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u80fd\u591f\u83b7\u53d6\u7684\u6240\u6709oid": 39, "\u6839\u636efrag\u6570\u91cf": 39, "label\u6570\u91cf\u548c\u5168\u90e8oid": 39, "\u6bcf\u4e2a\u8fdb\u7a0b\u6784\u5efavertex": 39, "fid_t": [39, 73], "fnum_": 39, "label_id_t": [39, 73], "label_num_": 39, "hashmapbuild": 39, "oid_arrays_": 39, "cur_gid": 39, "id_parser_": 39, "generateid": 39, "\u8d77\u59cbgid": 39, "int64_t": [39, 47, 73, 74, 147, 300, 318], "vnum": 39, "length": [39, 43, 52, 53, 67, 74, 137, 150, 189, 191, 196, 218, 239, 243, 249, 271, 280, 285, 318], "\u904d\u5386\u5168\u90e8\u5185\u90e8\u70b9": 39, "\u751f\u6210gid": 39, "emplac": 39, "getview": 39, "\u6309\u7167elabel\u904d\u5386\u6bcf\u4e00\u5f20edg": 39, "\u83b7\u53d6\u5230src\u548cdst\u7684label": 39, "\u8bbf\u95ee\u6bcf\u4e2asrc\u7684oid": 39, "\u6839\u636epartitioner\u83b7\u53d6fid": 39, "\u6839\u636efid": 39, "id\u548coid\u67e5\u8be2gid": 39, "\u751f\u6210gid\u6570\u7ec4": 39, "\u5904\u7406dst\u7684\u903b\u8f91\u540c\u7406": 39, "\u5f97\u5230src\u548cdst\u4e24\u4e2agid\u6570\u7ec4\u540e": 39, "\u66ff\u6362\u6389\u539fetable\u7684oid\u6570\u7ec4": 39, "\u5bf9etable\u6267\u884cshuffl": 39, "\u5c06\u76f8\u5e94\u7684\u884c\u4f20\u8f93\u7ed9\u6b63\u786e\u7684\u8fdb\u7a0b": 39, "\u5c06shuffle\u8fc7\u7684vtable\u548cetable\u9001\u7ed9basicarrowfragmentbuilder\u6784\u5efacsr": 39, "\u5904\u7406\u9876\u70b9": 39, "\u521d\u59cb\u5316id": 39, "parser": [39, 48], "\u521d\u59cb\u5316ivnum": 39, "ovnum\u548ctvnum\u6570\u7ec4": 39, "\u6309\u7167vertex": 39, "label\u5206\u7ec4": 39, "\u904d\u5386\u6bcf\u4e00\u79cd\u9876\u70b9": 39, "\u5411vertex": 39, "map\u67e5\u8be2\u672cfragment\u7684\u5185\u90e8\u70b9\u6570\u91cf": 39, "\u5e76\u8bbe\u7f6e\u5bf9\u5e94\u7684ivnum": 39, "\u5c06vertex": 39, "table\u5408\u5e76\u6210\u4e00\u4e2achunk\u4fbf\u4e8e\u540e\u7eed\u8bbf\u95ee": 39, "vid_parser_": 39, "vertex_label_num_": 39, "vertex_tables_": 39, "resiz": 39, "ivnums_": 39, "ovnums_": 39, "tvnums_": 39, "combinechunk": 39, "default_memory_pool": 39, "vm_ptr_": 39, "getinnervertexs": [39, 73], "fid_": 39, "\u5904\u7406\u8fb9\u5305\u62ec\u4ee5\u4e0b5\u4e2a\u6b65\u9aa4": 39, "\u904d\u5386\u6bcf\u4e00\u79cd\u8fb9": 39, "\u901a\u8fc7src": 39, "gid\u5217\u548cdst": 39, "gid\u5217\u67e5\u8be2\u51fa\u672cfragment\u6240\u6709\u7684\u5916\u90e8\u70b9": 39, "\u5e76\u6309\u7167vertex": 39, "edge_t": [39, 134, 145], "table\u5408\u5e76\u6210\u4e00\u4e2achunk": 39, "\u627e\u51fa\u672cfragment\u5168\u90e8\u5916\u90e8\u70b9\u7684gid": 39, "collect_outer_vertic": 39, "dynamic_pointer_cast": [39, 299], "converttoarrowtyp": [39, 73], "arraytyp": [39, 73], "chunk": [39, 119], "\u6839\u636e\u5916\u90e8\u70b9\u7684gid": 39, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u6784\u5efagid\u5230lid\u7684\u6620\u5c04\u4e0e\u53bb\u91cd\u7684gid\u6570\u7ec4": 39, "\u5916\u90e8\u70b9\u7684lid\u7531label": 39, "id\u548c\u9876\u70b9\u5e8f\u53f7\u7ec4\u6210": 39, "\u9876\u70b9\u5e8f\u53f7\u4eceivnum\u5f00\u59cb\u8ba1\u6570": 39, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u586b\u5145ovnum\u548ctvnum": 39, "ovg2l_maps_": 39, "ovgid_lists_": 39, "cur_list": 39, "collected_ovgids_": 39, "\u6392\u5e8fgid": 39, "cur_map": 39, "buildertyp": 39, "vec_build": 39, "\u751f\u6210\u5916\u90e8\u70b9\u7684lid": 39, "\u5176\u4e2dfid\u4e3a0": 39, "offset\u4eceivnum\u5f00\u59cb\u7f16\u53f7": 39, "cur_id": 39, "\u5904\u7406\u7b2c\u4e00\u4e2a\u5143\u7d20": 39, "append": [39, 53, 61, 62, 64, 76, 133, 144, 145, 216, 279, 312, 317], "cur_list_length": 39, "\u627e\u5230\u4e0d\u91cd\u590d\u7684\u4e24\u4e2agid": 39, "\u6839\u636e\u4e0a\u4e00\u6b65\u6784\u6210\u7684gid\u5230lid\u7684\u6620\u5c04": 39, "\u5c06src\u548cdst\u7684gid\u90fd\u8f6c\u6362\u6210lid": 39, "\u5220\u9664edg": 39, "table\u7684src\u5217\u548cdst\u5217": 39, "gid\u5230lid\u8f6c\u6362\u51fd\u6570": 39, "generate_local_id_list": 39, "gid_list": 39, "lid_list": 39, "vec": 39, "getfid": 39, "\u751f\u6210\u5185\u90e8\u70b9lid": 39, "getlabelid": 39, "getoffset": 39, "\u67e5\u8be2g2l": 39, "\u901a\u8fc7gid\u627e\u5230\u5916\u90e8\u70b9lid": 39, "\u6839\u636esrc\u548cdst\u5217\u7684gid\u751f\u6210lid": 39, "edge_src_": 39, "edge_dst_": 39, "table\u7684src\u5217\u548cgid\u5217": 39, "\u53ea\u4fdd\u7559\u5c5e\u6027": 39, "tmp_table0": 39, "removecolumn": 39, "edge_tables_": 39, "\u6784\u5efacsr": 39, "\u5bf9\u4e8e\u6709\u5411\u56fe": 39, "\u6784\u5efa\u51fa\u8fb9\u548c\u5165\u8fb9\u4e24\u4e2acsr": 39, "\u9996\u5148\u6784\u5efa\u51fa\u8fb9csr": 39, "\u7edf\u8ba1\u6bcf\u79cd\u6e90\u9876\u70b9\u7684\u51fa\u5ea6": 39, "\u6784\u5efarow": 39, "offset\u6570\u7ec4": 39, "\u8bbf\u95ee\u6bcf\u6761\u8fb9": 39, "\u4f7f\u7528row": 39, "offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u76ee\u7684\u9876\u70b9nbr\u7684\u5730\u5740": 39, "\u586b\u5145dst": 39, "lid\u548ceid\u5230nbr": 39, "\u6309\u7167\u76ee\u7684\u9876\u70b9\u7684lid": 39, "\u5c06\u6bcf\u4e00\u4e2a\u6e90\u9876\u70b9\u7684\u76ee\u7684\u9876\u70b9\u6392\u5e8f": 39, "generate_directed_csr": 39, "vid_array_t": [39, 73], "src_list": 39, "dst_list": 39, "fixedsizebinaryarrai": 39, "int64arrai": 39, "edge_offset": 39, "actual_edge_num": 39, "v_label": [39, 73, 294], "edge_num": [39, 109, 312, 316], "src_list_ptr": 39, "raw_valu": 39, "dst_list_ptr": 39, "\u8ba1\u7b97\u6e90\u9876\u70b9\u7684\u5ea6": 39, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u6784\u5efarow": 39, "tvnum": 39, "offset_vec": 39, "degree_vec": 39, "int64build": 39, "podarraybuild": 39, "nbr_unit_t": [39, 73], "edge_build": 39, "v_offset": 39, "\u83b7\u53d6\u76ee\u7684\u9876\u70b9\u6307\u9488": 39, "ptr": 39, "mutablepoint": 39, "\u586b\u5145\u76ee\u7684\u9876\u70b9lid": 39, "eid": [39, 147, 298], "\u5176\u4e2deid\u7528\u4e8e\u4e4b\u540e\u83b7\u53d6\u8fb9\u4e0a\u7684\u5c5e\u6027": 39, "vid": [39, 73, 147], "eid_t": [39, 73], "\u66f4\u65b0offset": 39, "\u6307\u5411\u6e90\u9876\u70b9\u7684\u4e0b\u4e00\u6761\u51fa\u8fb9": 39, "\u5bf9\u4e34\u63a5\u70b9\u6309\u7167lid\u6392\u5e8f": 39, "offsets_ptr": 39, "lh": 39, "\u6784\u5efa\u5165\u8fb9csr\u548c\u51fa\u8fb9\u540c\u7406": 39, "\u5bf9\u4e8e\u65e0\u5411\u56fe": 39, "\u51fa\u8fb9\u548c\u5165\u8fb9\u5171\u7528\u4e00\u4e2acsr": 39, "\u903b\u8f91\u548c\u6709\u5411\u56fe\u7c7b\u4f3c": 39, "\u4f46\u662f\u8981\u540c\u65f6\u7edf\u8ba1\u6e90\u9876\u70b9\u548c\u76ee\u7684\u9876\u70b9\u7684\u5ea6\u6765\u6784\u5efarow": 39, "offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u6e90\u9876\u70b9\u7684nbr\u586b\u5145\u5165\u8fb9\u7684src": 39, "lid\u548ceid": 39, "\u540c\u65f6\u8fd8\u8981\u4f7f\u7528offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u76ee\u7684\u9876\u70b9\u7684nbr\u586b\u5145dst": 39, "\u5c01\u88c5": 39, "seal": [39, 55, 68], "\u51c6\u5907\u597d\u9876\u70b9\u6570\u91cf": 39, "ovgid\u548cg2l_map\u540e": 39, "\u5c06\u4ed6\u4eec\u5c01\u88c5\u6210\u5404\u79cdvineyardobject": 39, "\u6839\u636emetadata\u4ecevineyard\u67e5\u8be2\u548c\u6784\u5efa\u4ee5\u4e0b\u6570\u636e\u7ed3\u6784\u4f5c\u4e3aarrowfragment\u7684\u6210\u5458": 39, "\u4e5f\u5c31\u662f\u8bf4": [39, 309], "\u4ee5\u4e0b\u6570\u636e\u90fd\u662f\u5b58\u50a8\u5728vineyard\u4e2d\u7684": 39, "\u5f53\u524dfragment": 39, "fragment\u603b\u6570": 39, "directed_": 39, "\u662f\u5426\u4e3a\u6709\u5411\u56fe": 39, "\u9876\u70b9\u79cd\u7c7b\u6570\u91cf": 39, "edge_label_num_": 39, "\u8fb9\u79cd\u7c7b\u6570\u91cf": 39, "propertygraphschema": 39, "schema_": 39, "shcema": 39, "\u5185\u90e8\u548c\u5916\u90e8\u70b9\u603b\u6570": 39, "\u9876\u70b9\u5c5e\u6027\u8868": 39, "\u4e0d\u5305\u542bid\u5217": 39, "\u5916\u90e8\u70b9gid": 39, "hashmap": 39, "gid\u5230lid\u6620\u5c04": 39, "\u8fb9\u5c5e\u6027": 39, "ie_lists_": 39, "oe_lists_": 39, "csr\u7ed3\u6784\u7684column": 39, "\u5bf9\u4e8e\u65e0\u5411\u56fe\u53ea\u6709oe_lists_\u88ab\u4f7f\u7528": 39, "ie_offsets_lists_": 39, "oe_offsets_lists_": 39, "csr\u7ed3\u6784\u7684row": 39, "vertex_map_t": [39, 73], "\u5269\u4e0b\u7684\u6210\u5458\u5c06\u6839\u636e\u4ee5\u4e0a\u4fe1\u606f\u6765\u6784\u5efa": 39, "edge_tables_columns_": 39, "\u6bcf\u4e00\u79cd\u8fb9\u7684\u5c5e\u6027\u5217\u5730\u5740": 39, "flatten_edge_tables_columns_": 39, "\u540c\u4e0a": 39, "vertex_tables_columns_": 39, "\u6bcf\u4e00\u79cd\u9876\u70b9\u7684\u5c5e\u6027\u5217\u5730\u5740": 39, "ie_ptr_lists_": 39, "oe_ptr_lists_": 39, "\u6bcf\u4e00\u79cd\u9876\u70b9\u7684\u6bcf\u4e00\u79cd\u5165": 39, "\u51fa\u8fb9\u7684\u8d77\u59cb\u5730\u5740": 39, "\u4e5f\u5c31\u662fcolumn": 39, "index\u7684\u8d77\u59cb\u5730\u5740": 39, "ie_offsets_ptr_lists_": 39, "oe_offsets_ptr_lists_": 39, "\u51fa\u8fb9\u7684row": 39, "offset\u8d77\u59cb\u5730\u5740": 39, "offset\u7684\u8d77\u59cb\u5730\u5740": 39, "\u4ee5\u4e0b\u662f\u6bcf\u4e00\u79cd\u9876\u70b9": 39, "\u6bcf\u4e00\u79cd\u8fb9\u7684\u6e90\u9876\u70b9fid": 39, "\u76ee\u7684\u9876\u70b9fid": 39, "\u6e90\u9876\u70b9\u548c\u76ee\u7684\u9876\u70b9fid\u6784\u6210\u7684csr\u7ed3\u6784": 39, "idst_": 39, "odst_": 39, "iodst_": 39, "idoffset_": 39, "odoffset_": 39, "iodoffset_": 39, "\u4ee5\u4e0b\u5185\u5bb9\u63cf\u8ff0\u4e86\u8bbf\u95ee\u9876\u70b9": 39, "\u9876\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e\u7684api\u548c\u5b9e\u73b0": 39, "\u5185\u90e8\u70b9\u8303\u56f4\u7531\u8d77\u59cblid\u548c\u7ec8\u6b62lid\u6784\u6210": 39, "lid\u7684\u7f16\u7801\u5305\u542b\u4e86\u9876\u70b9label": 39, "id\u548c\u9876\u70b9\u5e8f\u53f7": 39, "\u5185\u90e8\u70b9\u7684\u9876\u70b9\u5e8f\u53f7\u8303\u56f4\u4e3a": 39, "ivnum": 39, "\u5916\u90e8\u70b9\u5e8f\u53f7\u8303\u56f4\u4e3a": 39, "\u5168\u90e8\u9876\u70b9\u5e8f\u53f7\u4e3a": 39, "vertex_range_t": [39, 73], "label_id": [39, 75, 76, 109], "\u751f\u6210lid\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u8303\u56f4": 39, "\u7ed3\u675f\u8303\u56f4\u662f\u5f00\u533a\u95f4": 39, "\u6839\u636e\u9876\u70b9lid\u83b7\u53d6\u9876\u70b9\u7c7b\u578b": 39, "\u5c5e\u6027id": 39, "\u5217\u53f7": 39, "\u83b7\u53d6\u5230\u5217\u6307\u9488": 39, "\u7136\u540e\u4ecelid\u83b7\u53d6\u5230\u9876\u70b9\u5e8f\u53f7": 39, "\u884c\u53f7": 39, "\u5373\u53ef\u8bbf\u95ee\u5230\u9876\u70b9\u7684\u67d0\u4e2a\u5c5e\u6027": 39, "getdata": [39, 73], "prop_id_t": [39, 73], "prop_id": 39, "property_graph_util": [39, 73], "valuegett": 39, "\u8bbf\u95ee\u51fa\u8fb9\u9700\u8981\u7ed9\u51fa\u6e90\u9876\u70b9lid\u548c\u67d0\u4e00\u79cd\u8fb9\u7684\u7c7b\u578b": 39, "\u800c\u6e90\u9876\u70b9\u7684\u7c7b\u578b\u5df2\u7ecf\u88ablid\u7f16\u7801\u6240\u5305\u542b": 39, "\u6240\u4ee5\u4e0d\u7528\u7ed9\u51fa": 39, "adj_list_t": [39, 73], "e_label": [39, 73], "\u83b7\u53d6\u6e90\u9876\u70b9lid": 39, "\u83b7\u53d6\u6e90\u9876\u70b9\u7c7b\u578b": 39, "\u83b7\u53d6\u6e90\u9876\u70b9\u5e8f\u53f7": 39, "offset_arrai": 39, "\u8bbf\u95eerow": 39, "oe": 39, "\u83b7\u53d6\u51fa\u8fb9\u8d77\u59cb\u5730\u5740": 39, "\u751f\u6210adjlist\u5bf9\u8c61": 39, "\u5206\u522b\u4e3a\u51fa\u8fb9\u8d77\u59cb\u5730\u5740": 39, "\u7ed3\u675f\u5730\u5740": 39, "\u8fb9\u5c5e\u6027\u5217\u5730\u5740": 39, "\u548c\u51fa\u8fb9\u540c\u7406": 39, "\u53ea\u9700\u8981\u628aoe\u76f8\u5173\u53d8\u91cf\u540d\u6362\u6210ie\u5373\u53ef": 39, "ie": 39, "\u56e0\u4e3a\u5728adjlist\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u51fa\u8fb9\u5c5e\u6027\u8868\u7684\u8d77\u59cb\u5730\u5740": 39, "\u6bcf\u6761\u51fa\u8fb9\u8fd8\u5305\u542b\u4e86\u8fb9id": 39, "\u5bf9\u5e94\u5230\u884c\u53f7": 39, "\u56e0\u6b64\u518d\u7ed9\u51fa\u5c5e\u6027\u7684\u5217\u53f7\u5c31\u80fd\u591f\u53bb\u5f97\u5230\u5177\u4f53\u7684\u6570\u636e": 39, "\u4f8b\u5982": [39, 308, 312, 316, 318], "\u83b7\u53d6edg": 39, "struct": [39, 73, 208, 241], "\u83b7\u53d6\u5c5e\u6027\u5217\u7684\u5730\u5740": 39, "\u548ceid\u5c31\u80fd\u591f\u83b7\u53d6\u5230\u5177\u4f53\u7684\u5c5e\u6027": 39, "edata_arrays_": 39, "nbr_": 39, "post": [40, 53, 139, 204, 318], "what": [40, 46, 47, 53, 67, 144, 231, 285, 291, 297], "mininum": 40, "8g": 40, "18": [40, 50, 53, 71, 135, 136, 138, 150, 208, 257, 262, 266, 268, 271, 277, 308, 311, 315], "15": [40, 53, 61, 62, 71, 135, 136, 138, 139, 245, 267, 278, 285, 292, 311], "depoly": 40, "enssenti": 40, "No": [40, 52, 285], "debug": [40, 46, 134, 139, 292, 298, 306], "silent": [40, 285, 306], "helm": [40, 46, 47, 298, 309, 311], "did": [40, 145], "role": [40, 48, 54, 65, 135, 144, 150, 236, 274, 282, 298, 302, 306, 311], "rolebind": [40, 311], "uninstal": [40, 46, 47, 311], "recycl": 40, "databas": [40, 46, 48, 53, 63, 65, 69, 71, 298, 308], "seem": [40, 53], "stuck": 40, "reason": [40, 49, 52, 56, 134, 135, 265], "poor": [40, 141], "acquir": 40, "request": [40, 46, 73, 102, 103, 135, 143, 146, 148, 179, 285, 292, 311], "mostli": [40, 110], "visibl": [40, 76], "engnin": 40, "cloud": [40, 46, 47, 69, 70, 298], "k8s_vineyard_mem": [40, 127, 132, 292, 311], "metadata": [40, 73, 147, 285, 294, 298], "blob": [40, 308], "shape": [40, 58, 59, 62, 64, 73, 75, 136, 137, 138, 139, 142, 145, 149, 207, 312], "forth": 40, "smaller": [40, 53, 71, 148, 150, 206, 207, 211], "Its": [40, 65, 264, 297], "shared_mem": [40, 311], "appl": [40, 50, 285, 311, 315], "grpcio": [40, 311], "grpc_python_build_system_openssl": [40, 311], "scipi": [40, 232, 233, 234, 235, 285, 288, 311], "anaconda": [40, 311], "workaround": 40, "openbla": 40, "tri": [40, 43, 61, 67, 214, 220], "pkgconfig": 40, "cmake_prefix_path": 40, "brew": 40, "permiss": [40, 81, 311], "deni": [40, 81, 311], "pv": [40, 47, 298, 311], "nf": [40, 144, 311], "appear": [40, 48, 53, 74, 190, 192, 194, 197, 199, 226, 227, 285, 311], "kafka": [40, 294, 311], "zookeep": [40, 311], "crashloopbackoff": [40, 311], "bitnami": [40, 311], "normali": 40, "755": 40, "sepcifi": 40, "1001": [40, 298], "slution": 40, "brutal": 40, "chmod": [40, 47, 311], "777": [40, 71, 311], "eleg": [40, 43], "grant": [40, 282], "timeout": 40, "rais": [40, 48, 74, 81, 83, 119, 127, 132, 139, 147, 148, 150, 156, 165, 169, 170, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 224, 226, 229, 230, 231, 242, 245, 277, 280, 281, 285, 288, 292], "timeout_second": [40, 127, 132, 292, 311], "600": [40, 71, 292, 311], "enterpris": 40, "proxi": [40, 311], "properli": [40, 49], "wrong": 40, "resolut": [40, 298], "occup": 40, "hostnam": [40, 311], "no_proxi": [40, 311], "suffix": 40, "convin": 40, "flush": 40, "stream": [40, 52, 53, 56, 139, 144, 147], "forcibli": 40, "contact": 40, "slack": [40, 311], "dingtalk": [40, 311], "happi": 40, "90": [42, 71], "brief": 42, "traffic": 43, "web": [43, 74, 150, 218, 232, 237, 278], "ever": [43, 59], "insight": [43, 66, 68], "hidden": [43, 66, 68, 133, 317], "attract": 43, "attent": [43, 68, 139], "compuatit": 43, "difficult": [43, 134, 144, 298], "obstacl": 43, "attempt": [43, 47, 66, 67, 70, 285], "curv": [43, 66], "hard": [43, 52, 60, 61, 246, 297], "complic": [43, 48, 53, 75], "sql": [43, 46, 48, 53], "deep": [43, 59, 63, 133, 138, 139, 141, 161, 164, 273, 285], "gnn": [43, 46, 56, 58, 59, 62, 63, 64, 69, 70, 133, 137, 138, 139, 141, 142, 292, 314, 317], "train": [43, 46, 56, 58, 59, 60, 63, 64, 69, 70, 72, 135, 138, 139, 141, 142, 145, 149, 292, 312, 317], "seamlessli": [43, 47, 50, 55, 63, 69, 70], "fist": 43, "establish": [43, 298], "interpret": [43, 63, 150], "mount_dataset": 43, "ran": [43, 61], "p2p_network": 43, "haslabel": [43, 49, 50, 53, 316], "embed": [43, 56, 62, 64, 68, 134, 141], "inter": [43, 67, 146, 204, 207], "suit": [43, 56, 68], "wherea": [43, 204, 297], "numpi": [43, 53, 56, 73, 75, 89, 101, 111, 136, 137, 139, 140, 141, 142, 145, 147, 149, 150, 277, 285, 288, 314], "datafram": [43, 75, 88, 100, 111, 114, 147, 285, 308, 318], "head": [43, 52, 53], "csv": [43, 47, 147, 285, 288, 296, 298, 299, 312, 313, 318], "creationd": [43, 53, 313, 318], "locationip": [43, 318], "browserus": [43, 53, 318], "618475290625": 43, "2011": [43, 53, 218], "08": [43, 71, 150], "17t14": 43, "26": [43, 53, 71, 135, 136, 138, 234], "59": [43, 71], "961": 43, "0000": [43, 53], "210": [43, 71, 281], "17": [43, 53, 71, 135, 136, 138, 308], "48": [43, 71, 135, 136, 138, 237, 238, 284], "chrome": [43, 53], "ye": [43, 285], "618475290626": 43, "17t11": 43, "570": 43, "comment_replyof_com": 43, "274877907301": 43, "274877907299": 43, "274877907302": 43, "pd": [43, 318], "df_v": [43, 308, 318], "read_csv": [43, 318], "sep": [43, 318], "df_e": [43, 318], "add_vertic": [43, 147, 285, 288, 289, 312, 313, 318], "direction": 44, "generate_eid": [44, 47, 73, 125, 147, 299, 318], "retain_oid": [44, 47, 73, 125, 147, 299, 318], "oid_typ": [44, 73, 74, 103, 125, 147, 318], "int32_t": [44, 147, 318], "exce": [44, 243, 244], "infer": [44, 47, 68, 69], "benefit": [44, 66, 297], "super": [44, 74, 135, 139], "precis": [44, 68, 277], "deal": [44, 66, 137], "technologi": [46, 48, 69], "graphcomput": [46, 316], "gl": [46, 59, 69, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146], "neural": [46, 56, 63, 64, 69, 70, 72, 133, 134, 137, 139, 141, 145], "constraint": [46, 53], "motiv": 46, "posit": [46, 53, 68, 69, 74, 133, 139, 150, 195, 214, 216, 217, 219, 220, 224, 232, 233, 234, 235, 236, 280, 283, 297, 300], "gart": 46, "graphar": 46, "groot": [46, 63, 67, 70], "gum": 46, "maxgraph": [46, 69, 314], "deprec": [46, 147, 165, 263, 292], "gaia": [46, 63, 316], "pegasu": [46, 63], "frequent": [46, 63, 66, 298], "prerequisit": 46, "faq": 46, "syntact": [46, 50, 67], "sugar": [46, 50, 67], "neg": [46, 55, 56, 133, 137, 139, 141, 145, 150, 169, 247], "gsl": [46, 55, 56, 63, 135, 136, 137, 138, 142, 149], "gap": 46, "oltp": [46, 63, 65], "style": [46, 55, 63, 290], "rust": [46, 65, 297, 298], "linter": 46, "checker": 46, "bug": 46, "review": [46, 63, 74, 150, 214, 232], "gcc": [46, 50, 71, 315], "parti": [46, 63, 265], "too": [47, 53, 70, 135, 204, 285], "wonder": 47, "throughout": [47, 48, 52], "smoothli": 47, "worri": [47, 53], "ack": [47, 55], "kubeadm": 47, "plane": 47, "handbook": 47, "creation": [47, 55, 135, 209], "easiest": 47, "websit": [47, 66, 204], "untar": 47, "cp": [47, 282, 297], "tree": [47, 65, 185, 187, 195, 215, 221, 223, 233, 234, 235, 248, 249, 286, 318], "claim": [47, 267, 297, 298], "pvc": [47, 292, 298], "your_release_nam": 47, "frontend": [47, 50, 298, 306], "grep": 47, "awk": 47, "gremlinport": 47, "consol": [47, 55, 67, 148, 298, 314], "sy": [47, 145], "gremlin_python": [47, 298], "graph_travers": 47, "__": [47, 52, 53, 64, 139, 312, 316], "driver_remote_connect": 47, "driverremoteconnect": [47, 298], "gremlin_endpoint": [47, 298], "remoteconn": [47, 298], "withremot": [47, 298], "assert": [47, 74, 297], "dlcdn": 47, "x": [47, 53, 71, 74, 133, 139, 145, 150, 188, 221, 229, 231, 232, 236, 260, 317], "submit": [47, 48, 53, 64, 134, 135, 148, 294, 298, 312], "subsequ": [47, 48, 74, 134, 135], "pertain": 47, "littl": [47, 52, 53], "v6d_modern_load": 47, "json": [47, 292, 294, 298, 299], "data_path": [47, 299], "store_data_path": 47, "header_row": [47, 147, 299], "delimit": [47, 147, 287, 299, 313], "src_label": [47, 147, 288, 292, 298, 299, 312, 313], "dst_label": [47, 147, 288, 292, 298, 299, 312, 313], "thing": [47, 139], "notic": [47, 53, 63, 67, 139, 147, 278, 285, 298, 300], "key1": 47, "value1": [47, 318], "key2": 47, "value2": 47, "header": [47, 147, 297, 298], "token": [47, 52, 292], "row": [47, 56, 68, 134, 147, 278, 298], "column_typ": 47, "filed1": 47, "filed2": 47, "unexpect": 47, "troubl": 47, "correspondingli": [47, 59, 242, 245], "v6d_ldbc_loader": 47, "physic": [47, 48, 63, 74, 150, 208, 209, 210, 232, 296], "scalabl": [47, 66, 67, 68, 69, 70, 282], "replicacount": [47, 298], "replica": 47, "hdf": [47, 111, 144, 147, 298, 308, 318], "8182": [47, 298], "pegasusworkernum": 47, "obvious": 47, "pegasustimeout": 47, "durat": [47, 52], "000": [47, 53, 71], "inher": 48, "massiv": [48, 67], "cypher": [48, 63, 65, 69, 70], "manufactur": 48, "upcom": 48, "gql": [48, 63, 70], "entri": [48, 52, 53, 59, 61, 149, 150, 197, 214, 216, 217, 242, 244, 245, 263], "sticki": 48, "peopl": [48, 53, 285, 298], "shelv": 48, "intellig": [48, 50, 53, 63, 70, 242, 245], "throughput": [48, 63, 69, 70, 298], "hybrid": [48, 297, 298], "dedupl": 48, "higher": [48, 69, 150, 160, 224, 298], "latenc": [48, 63, 69, 70], "unit": [48, 53, 67, 143, 233, 234, 235, 298], "hope": [48, 53, 298], "trade": [48, 63, 298], "inevit": 48, "realist": [48, 277], "valid": [48, 61, 62, 68, 80, 133, 180, 204, 226, 232, 281, 292, 294], "lengthi": 48, "ir": [48, 63], "verif": [48, 63], "repeatedli": [48, 66], "account": [48, 67, 283, 316], "80": [48, 71, 264], "decoupl": [48, 63, 70], "upper": [48, 52, 53, 56, 67, 204, 297], "briefli": [48, 68], "regist": [48, 73, 76, 106, 292], "plan": [48, 63, 65, 66, 67, 77, 298, 306], "algebra": [48, 274], "edgeexpans": 48, "pathexpans": 48, "enter": 48, "legal": 48, "predic": [48, 53], "schema": [48, 49, 53, 61, 62, 67, 74, 134, 135, 144, 147, 285, 294, 296, 297, 298, 299, 313, 316, 318], "arithmet": [48, 52, 53], "aspect": [48, 53, 70], "firstli": [48, 49, 53, 70], "rbo": 48, "down": [48, 202], "slice": [48, 75, 147, 291], "cbo": 48, "statist": [48, 53, 136], "glogu": 48, "suggest": [48, 53, 65, 204], "calcul": [48, 52, 53, 74, 76, 136, 150, 204, 236], "shuffl": [48, 52, 139, 145, 149], "align": [48, 59, 133, 136, 137, 236, 297], "transform": [48, 53, 73, 84, 97, 277, 285, 286, 290, 296], "mainli": [48, 53, 70, 141], "uniqu": [48, 49, 63, 64, 67, 74, 123, 124, 134, 138, 143, 144, 147, 150, 252, 258, 291, 298, 299], "plu": [48, 53, 188, 260], "unaccept": 48, "come": [48, 53, 55, 64, 68, 69, 71, 136, 251, 288], "intern": [49, 66, 185, 308, 310], "entiti": [49, 53, 62, 64, 68, 134], "council": [49, 71], "birthdai": [49, 318], "differenti": 49, "hasid": 49, "expos": [49, 54, 137, 148, 292, 302], "secondli": [49, 70], "triplet": 49, "path_expand": 49, "desir": [49, 147, 204, 226, 246, 248, 249], "concret": [49, 74, 75, 147], "endv": [49, 53, 67, 316], "path_opt": [49, 52, 53, 67, 316], "pathexpand": 49, "expr": [49, 52, 53, 67, 316], "marko": [49, 52, 53], "27": [49, 52, 53, 71, 135, 136, 138, 266], "OR": [49, 76, 285], "hasstep": 49, "shortcom": [49, 53], "groupcount": [49, 316], "BY": 49, "age_cnt": 49, "age_sum": 49, "AS": [49, 282, 286], "significantli": [49, 66, 69], "scan": [49, 297], "propertyidvalu": 49, "avoid": [49, 297], "tabl": [49, 53, 56, 71, 133, 135, 147, 294, 296, 297, 299], "therebi": 49, "larger": [49, 53, 62, 232], "inE": [49, 139, 316], "sub_graph": [49, 64, 312, 313], "64": [50, 59, 138, 139, 216, 316], "intel": [50, 315], "chip": [50, 315], "fairli": 50, "straightforward": 50, "hereaft": [50, 53], "q1": [50, 53], "q2": [50, 53], "someth": [50, 285], "453": 50, "xxx": [50, 143, 292, 308], "pppp": 50, "op_executor": 50, "455": 50, "entr": 50, "ee": 50, "conquer": 51, "retain": [52, 226, 299], "syntax": [52, 59, 75, 139, 285, 291], "situat": [52, 53, 55, 134, 135, 298], "meant": [52, 53], "moreov": [52, 63, 69, 297], "vertexid": 52, "inject": 52, "integ": [52, 150, 185, 188, 189, 190, 191, 192, 194, 196, 197, 199, 200, 203, 204, 207, 208, 209, 210, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 263, 277, 278, 279, 280, 282, 285, 298], "edgeid": 52, "edgelabel": [52, 94], "histori": [52, 53, 67], "elementid": 52, "propertykei": 52, "accessor": 52, "eq": [52, 53, 67, 74, 316], "neq": [52, 316], "gt": [52, 53, 316], "lt": [52, 53, 316], "gte": [52, 53, 64, 312, 316], "lte": [52, 64, 312, 316], "outsid": [52, 316], "textp": [52, 316], "startingwith": [52, 316], "endingwith": [52, 316], "rko": 52, "ark": 52, "notstartingwith": [52, 316], "notendingwith": [52, 316], "notcontain": [52, 316], "unequ": 52, "nest": 52, "wheretravers": 52, "act": [52, 133, 282, 285, 317], "startkei": 52, "alter": [52, 285], "opposit": [52, 139, 213, 260], "nottravers": 52, "duplic": [52, 53, 212, 214, 216, 285, 286], "deduplabel": 52, "composit": [52, 53], "de": [52, 61], "impli": 52, "flat": 52, "selectkei": 52, "roll": [52, 53, 55], "averag": [52, 62, 64, 74, 150, 204], "organ": [52, 53, 55, 56, 68, 72, 133, 135, 137, 141, 142, 221, 223, 262], "accompani": 52, "aggregatefunc": 52, "emit": [52, 53, 133, 136, 139, 145, 317], "ascend": [52, 53], "asc": [52, 53], "desc": [52, 53], "bias": 52, "toss": 52, "merg": [52, 139], "uniontravers": 52, "sentenc": [52, 53], "matchsent": 52, "serial": [52, 73, 147, 297, 316], "binder": 52, "graphnam": 52, "lengthrang": 52, "keyvaluepair": 52, "kept": [52, 53, 73], "result_opt": [52, 53, 316], "end_v": [52, 53, 316], "all_v": [52, 53, 316], "connector": [52, 53], "exponenti": [52, 53, 68, 232, 234, 235], "vada": 52, "lop": 52, "josh": 52, "rippl": 52, "peter": 52, "alias": 52, "k1": 52, "k2": 52, "v2": [52, 53, 58, 67, 133, 263, 317], "35": [52, 53, 71, 135, 136, 138, 145, 212, 262, 278], "29": [52, 53, 135, 136, 138], "unsupport": [52, 67], "unrol": 52, "linear": [52, 219, 221, 277, 297], "simplepath": [52, 316], "imper": [52, 67], "reflect": [52, 297], "latter": [52, 53, 66], "mix": [52, 74, 297], "sack": [52, 316], "regard": [53, 62, 297], "realm": 53, "audit": 53, "toolsuit": 53, "primarili": [53, 67, 297], "snb": [53, 313, 318], "qp": [53, 69], "simul": [53, 109, 145], "conclus": 53, "confid": 53, "profici": 53, "intric": 53, "sf": 53, "permit": [53, 285], "3k": 53, "gremlin_queri": 53, "190376": 53, "787074": 53, "sf1": 53, "432345564227583365": 53, "504403158265495622": 53, "576460752303435306": 53, "432345564227579434": 53, "hastyp": 53, "504403158265495612": 53, "144115188075855941": 53, "issubclassof": 53, "504403158265495553": 53, "confus": [53, 233, 234, 235], "mechan": [53, 65, 68, 70, 294, 302], "belong": [53, 68, 74, 75, 76, 147, 275, 278, 285, 291, 298], "distinguish": [53, 63, 133, 134, 135, 297], "shift": [53, 150, 250], "portion": [53, 66, 67, 75, 147], "havelabel": 53, "veritc": 53, "216172782113783808": 53, "216172782113784710": 53, "label1": 53, "label2": 53, "forum": 53, "72057594037936036": 53, "mention": [53, 296, 297, 306], "360287970189718653": 53, "360287970189718655": 53, "joseph": 53, "joeseph": 53, "firstnam": [53, 313, 318], "yacin": 53, "year": [53, 64, 66, 312], "q3": 53, "01": [53, 58, 62, 64, 74, 134, 150, 209, 312], "01t00": 53, "00": 53, "curiou": 53, "property_nam": [53, 75, 76, 291], "38416": 53, "mayb": 53, "pyplot": 53, "plt": 53, "comment_cont": 53, "comment_length": 53, "histogram": 53, "hist": [53, 159], "lambda": [53, 67, 133, 139, 145, 150, 221, 232, 234, 235, 236, 317], "50": [53, 71, 232, 234, 235], "607c8e": 53, "grid": [53, 278], "axi": [53, 73, 74, 75, 89, 115, 145, 291], "xlabel": 53, "ylabel": 53, "gender": [53, 318], "person_gend": 53, "male": 53, "femal": 53, "male_count": 53, "female_count": 53, "216172782113784483": 53, "around": [53, 148], "432345564227569033": 53, "288230376151712472": 53, "144115188075856168": 53, "144115188075860911": 53, "72057594037934114": 53, "hasmoder": 53, "studyat": 53, "workat": 53, "islocatedin": 53, "432345564227582847": 53, "hasinterest": 53, "504403158265496227": 53, "864691128455136658": 53, "1008806316530991636": 53, "360287970189645858": 53, "en": [53, 66, 74, 247, 251, 252, 253, 254, 256, 257, 258, 264, 265, 266, 267, 269, 270, 271, 272], "e1": 53, "haven": 53, "summar": [53, 56], "citi": [53, 56, 66, 68], "ispartof": 53, "countri": 53, "288230376151711797": 53, "understand": [53, 59, 133, 139, 147, 297], "simpler": [53, 285], "216172782113784555": 53, "14": [53, 71, 135, 136, 138, 190, 250, 258, 270, 285], "exactli": [53, 56, 67, 74, 150, 195, 204, 218, 263, 291, 298], "432345564227569357": 53, "432345564227570524": 53, "288230376151712984": 53, "144115188075861043": 53, "replyof": [53, 313], "vertiv": 53, "54336": 53, "33411": 53, "360287970189700805": 53, "59465": 53, "33403": 53, "awai": 53, "ineffect": 53, "otherwis": [53, 66, 74, 134, 138, 139, 140, 150, 167, 204, 224, 234, 283, 285, 292, 297, 298], "illeg": 53, "simple_path": 53, "unfold": [53, 74], "hascreat": 53, "nation": 53, "china": 53, "np": [53, 136, 139, 145, 149, 300], "market": 53, "japan": 53, "browsers_us": 53, "browser_list": 53, "firefox": 53, "safari": 53, "browser_count": 53, "autopct": 53, "1f": 53, "univers": [53, 63, 150, 183, 184, 231, 241, 273, 277], "previous": [53, 81, 221, 222, 223, 296, 297], "purpos": [53, 63, 297], "person1": 53, "person2": 53, "university1": 53, "university2": 53, "studi": [53, 62, 64, 70, 231, 233], "216172782113784481": 53, "216172782113784279": 53, "144115188075858884": 53, "216172782113784361": 53, "216172782113784291": 53, "144115188075858879": 53, "216172782113784642": 53, "216172782113784473": 53, "216172782113784328": 53, "144115188075858700": 53, "216172782113784700": 53, "216172782113784331": 53, "144115188075860619": 53, "216172782113784375": 53, "216172782113784333": 53, "144115188075858813": 53, "216172782113784593": 53, "216172782113784688": 53, "144115188075860870": 53, "216172782113784047": 53, "216172782113784692": 53, "144115188075862429": 53, "isomorph": [53, 68, 135, 139, 264, 286], "22": [53, 71, 135, 136, 138, 278, 292], "23": [53, 135, 136, 138], "216172782113784192": 53, "216172782113784107": 53, "216172782113784171": 53, "regular": [53, 224, 229, 230, 231, 253, 258, 261, 266, 269, 270, 271, 272], "squar": [53, 212, 231, 259, 260, 263, 278], "butterfli": 53, "notion": 53, "matchanalyticsalgorithm": 53, "matchoptimizationalgorithm": 53, "216172782113784587": 53, "216172782113784363": 53, "144115188075860919": 53, "216172782113784532": 53, "216172782113784400": 53, "144115188075861858": 53, "216172782113784491": 53, "216172782113784401": 53, "144115188075858086": 53, "216172782113784598": 53, "216172782113784629": 53, "144115188075858881": 53, "216172782113783931": 53, "216172782113784657": 53, "144115188075858708": 53, "repli": 53, "pa": 53, "pb": 53, "216172782113783809": 53, "216172782113784011": 53, "360287970189640007": 53, "360287970189640008": 53, "360287970189640009": 53, "34": [53, 71, 135, 136, 138, 278], "2012": [53, 244], "216172782113783812": 53, "216172782113783882": 53, "36": [53, 71, 135, 136, 138, 190, 270, 278, 310], "360287970189640010": 53, "37": [53, 71, 135, 136, 138, 150, 278, 310], "216172782113784105": 53, "38": [53, 71, 135, 136, 138, 278, 310], "41": [53, 71, 135, 136, 138, 225, 278], "43": [53, 135, 136, 138, 150, 252, 278, 308], "216172782113783814": 53, "216172782113783962": 53, "360287970189640135": 53, "52": [53, 278], "216172782113784199": 53, "54": [53, 71, 225, 278], "216172782113784038": 53, "56": [53, 71, 184, 278], "216172782113783816": 53, "216172782113784144": 53, "175": 53, "360287970189640462": 53, "72057594037927936": 53, "144115188075855872": 53, "288230376151711744": 53, "432345564227567616": 53, "504403158265495555": 53, "india": 53, "hasmemb": 53, "8248": 53, "8101": 53, "imposs": 53, "back": [53, 55, 61, 143, 297], "2822": 53, "tag1": 53, "tag2": 53, "37164": 53, "432": 53, "vertinc": 53, "property1": 53, "properti2": 53, "lastnam": [53, 313, 318], "donati": 53, "luigi": 53, "hall": 53, "costa": 53, "carlo": 53, "khan": 53, "meera": 53, "mahinda": 53, "eli": 53, "94": 53, "228": [53, 71], "emb": [53, 133, 317], "th": [53, 137, 150, 263], "dom": 53, "pedro": 53, "ii": 53, "condariuc": 53, "bonomi": 53, "anyth": 53, "david": [53, 186, 197, 262], "silva": 53, "guliyev": 53, "tagclass": 53, "504403158265495552": 53, "504403158265495554": 53, "504403158265495556": 53, "504403158265495557": 53, "504403158265495558": 53, "504403158265495559": 53, "504403158265495560": 53, "504403158265495561": 53, "504403158265495562": 53, "504403158265495563": 53, "504403158265495564": 53, "504403158265495565": 53, "504403158265495566": 53, "504403158265495567": 53, "504403158265495568": 53, "504403158265495569": 53, "504403158265495570": 53, "504403158265495571": 53, "504403158265495572": 53, "504403158265495573": 53, "504403158265495574": 53, "504403158265495575": 53, "504403158265495576": 53, "504403158265495577": 53, "504403158265495578": 53, "504403158265495579": 53, "504403158265495580": 53, "504403158265495581": 53, "504403158265495582": 53, "504403158265495583": 53, "504403158265495584": 53, "504403158265495585": 53, "504403158265495586": 53, "504403158265495587": 53, "504403158265495588": 53, "504403158265495589": 53, "504403158265495590": 53, "504403158265495591": 53, "504403158265495592": 53, "504403158265495593": 53, "504403158265495594": 53, "504403158265495595": 53, "504403158265495596": 53, "504403158265495597": 53, "504403158265495598": 53, "504403158265495599": 53, "504403158265495600": 53, "504403158265495601": 53, "504403158265495602": 53, "504403158265495603": 53, "504403158265495604": 53, "504403158265495605": 53, "504403158265495606": 53, "504403158265495607": 53, "504403158265495608": 53, "504403158265495609": 53, "504403158265495610": 53, "504403158265495611": 53, "504403158265495613": 53, "504403158265495614": 53, "504403158265495615": 53, "504403158265495616": 53, "504403158265495617": 53, "504403158265495618": 53, "504403158265495619": 53, "504403158265495620": 53, "504403158265495621": 53, "q4": 53, "690": 53, "134313148716225": 53, "216172782113783811": 53, "216172782113783813": 53, "216172782113784707": 53, "216172782113784708": 53, "216172782113784709": 53, "216172782113783910": 53, "216172782113784104": 53, "216172782113784207": 53, "216172782113784318": 53, "216172782113784305": 53, "216172782113784597": 53, "216172782113784693": 53, "216172782113784018": 53, "216172782113784092": 53, "216172782113784108": 53, "216172782113784161": 53, "216172782113784162": 53, "73": [53, 71, 231], "216172782113783875": 53, "216172782113783932": 53, "216172782113784057": 53, "216172782113784068": 53, "216172782113784065": 53, "216172782113784235": 53, "216172782113784247": 53, "meaning": [53, 75, 147], "449": 53, "454": [53, 71], "216172782113783810": 53, "acsend": 53, "descend": [53, 279], "216172782113784082": 53, "216172782113784169": 53, "216172782113784267": 53, "216172782113784368": 53, "216172782113784376": 53, "216172782113783938": 53, "216172782113784405": 53, "216172782113783980": 53, "216172782113783844": 53, "216172782113783901": 53, "216172782113783935": 53, "216172782113784439": 53, "216172782113784315": 53, "216172782113784374": 53, "216172782113784601": 53, "216172782113784431": 53, "216172782113783815": 53, "216172782113783817": 53, "216172782113783971": 53, "216172782113784154": 53, "216172782113784381": 53, "216172782113783933": 53, "earlier": [53, 236, 298], "216172782113783819": 53, "216172782113783826": 53, "216172782113783836": 53, "bi": [53, 66, 69], "25": [53, 58, 62, 64, 71, 135, 136, 138, 207, 209, 212, 231, 278, 312], "query2": 53, "window": [53, 315], "09": [53, 71], "200": [53, 133, 291, 301, 317], "07": [53, 61, 71, 204, 212], "hastag": 53, "count1": 53, "count2": 53, "jet_li": 53, "zhang_yim": 53, "faye_wong": 53, "tsui_hark": 53, "bruce_le": 53, "johnny_depp": 53, "tom_cruis": 53, "jackie_chan": 53, "query3": 53, "moder": 53, "infinit": [53, 246], "seriou": 53, "song": 53, "containerof": 53, "message_count": 53, "824633725780": 53, "08t02": 53, "334": [53, 71], "album": 53, "hao": 53, "wang": [53, 217, 219], "19791209300479": 53, "755914248304": 53, "02t20": 53, "03": [53, 71, 306], "344": 53, "wall": 53, "lin": 53, "lei": 53, "24189255811275": 53, "824633725045": 53, "02": [53, 212], "03t18": 53, "633": 53, "893353201782": 53, "28t23": 53, "53": [53, 71, 278], "251": 53, "1030792152809": 53, "03t09": 53, "47": [53, 71, 135, 136, 138], "414": 53, "chen": 53, "32985348833887": 53, "07t07": 53, "30": [53, 71, 135, 136, 138, 209, 254, 256, 261, 298, 316], "038": 53, "zhang": [53, 308], "yang": [53, 308], "15393162789707": 53, "query4": 53, "membercount": 53, "country_count": 53, "counri": 53, "personcount": 53, "72057594037932503": 53, "72057594037932473": 53, "72057594037932489": 53, "72057594037932494": 53, "72057594037932501": 53, "72057594037934803": 53, "72057594037934804": 53, "72057594037935005": 53, "72057594037928132": 53, "72057594037935879": 53, "288230376151711799": 53, "country_top100_forums_dict": 53, "personcountforum": 53, "72057594037935702": 53, "72057594037930685": 53, "72057594037932114": 53, "72057594037934231": 53, "72057594037935703": 53, "72057594037935730": 53, "72057594037935734": 53, "72057594037932509": 53, "72057594037935707": 53, "72057594037935708": 53, "72057594037935711": 53, "72057594037935714": 53, "72057594037935719": 53, "72057594037935729": 53, "72057594037935731": 53, "72057594037935724": 53, "72057594037929560": 53, "72057594037931546": 53, "72057594037931545": 53, "72057594037932479": 53, "72057594037932485": 53, "72057594037932505": 53, "72057594037932511": 53, "72057594037935710": 53, "72057594037935722": 53, "72057594037929246": 53, "72057594037928266": 53, "72057594037935713": 53, "72057594037934308": 53, "72057594037934313": 53, "72057594037934302": 53, "72057594037930430": 53, "72057594037934303": 53, "72057594037932482": 53, "72057594037935147": 53, "72057594037935148": 53, "72057594037935157": 53, "72057594037927973": 53, "72057594037929386": 53, "72057594037934315": 53, "72057594037935720": 53, "72057594037935015": 53, "72057594037934300": 53, "72057594037930861": 53, "72057594037934319": 53, "72057594037931542": 53, "72057594037929583": 53, "72057594037933324": 53, "72057594037929182": 53, "72057594037929739": 53, "72057594037934829": 53, "72057594037935658": 53, "72057594037935660": 53, "72057594037935674": 53, "72057594037935682": 53, "72057594037935683": 53, "72057594037935672": 53, "72057594037927978": 53, "72057594037935163": 53, "72057594037935014": 53, "72057594037931544": 53, "72057594037934297": 53, "72057594037927979": 53, "72057594037932474": 53, "72057594037934384": 53, "72057594037932639": 53, "72057594037934380": 53, "72057594037935146": 53, "72057594037935152": 53, "72057594037928134": 53, "72057594037928674": 53, "72057594037929248": 53, "72057594037931240": 53, "72057594037931247": 53, "72057594037931256": 53, "72057594037930958": 53, "72057594037930963": 53, "72057594037931259": 53, "72057594037931260": 53, "72057594037931262": 53, "72057594037929365": 53, "72057594037929419": 53, "72057594037929421": 53, "72057594037929431": 53, "72057594037929434": 53, "72057594037929437": 53, "72057594037929446": 53, "72057594037929447": 53, "72057594037929449": 53, "72057594037929450": 53, "72057594037935166": 53, "72057594037929519": 53, "72057594037929451": 53, "72057594037929452": 53, "72057594037935046": 53, "72057594037932339": 53, "72057594037932481": 53, "72057594037934294": 53, "72057594037932389": 53, "72057594037932976": 53, "72057594037930870": 53, "72057594037931266": 53, "72057594037928092": 53, "72057594037928495": 53, "72057594037929510": 53, "72057594037929517": 53, "72057594037929961": 53, "72057594037929965": 53, "72057594037930242": 53, "72057594037930248": 53, "72057594037930250": 53, "72057594037930313": 53, "72057594037931547": 53, "72057594037935686": 53, "72057594037929052": 53, "72057594037929053": 53, "72057594037929055": 53, "72057594037929057": 53, "72057594037929060": 53, "72057594037934811": 53, "72057594037934813": 53, "72057594037934816": 53, "72057594037934821": 53, "72057594037934822": 53, "72057594037934823": 53, "72057594037934828": 53, "72057594037934835": 53, "72057594037934837": 53, "72057594037934975": 53, "72057594037934976": 53, "72057594037935032": 53, "72057594037935038": 53, "72057594037935045": 53, "72057594037935664": 53, "72057594037935673": 53, "72057594037935678": 53, "72057594037935685": 53, "72057594037931549": 53, "72057594037931550": 53, "72057594037931552": 53, "72057594037931554": 53, "72057594037931557": 53, "72057594037931560": 53, "72057594037931566": 53, "72057594037935671": 53, "72057594037935670": 53, "72057594037934977": 53, "72057594037931543": 53, "72057594037929518": 53, "72057594037935679": 53, "72057594037931575": 53, "72057594037932438": 53, "72057594037932878": 53, "72057594037932886": 53, "72057594037932888": 53, "72057594037927982": 53, "72057594037930526": 53, "72057594037930535": 53, "72057594037930546": 53, "72057594037930976": 53, "72057594037930536": 53, "72057594037931358": 53, "72057594037930366": 53, "72057594037931574": 53, "72057594037932435": 53, "72057594037935020": 53, "72057594037935864": 53, "72057594037933861": 53, "72057594037932440": 53, "72057594037927981": 53, "72057594037931349": 53, "72057594037931366": 53, "72057594037932885": 53, "72057594037927980": 53, "72057594037930529": 53, "72057594037930532": 53, "72057594037931304": 53, "72057594037932433": 53, "72057594037932441": 53, "72057594037934547": 53, "query11": 53, "live": 53, "startdat": 53, "enddat": 53, "216172782113784091": 53, "216172782113784250": 53, "216172782113784403": 53, "216172782113784537": 53, "216172782113784122": 53, "query14": 53, "country1": 53, "country2": 53, "subscor": 53, "award": [53, 308], "chile": 53, "p1": 53, "p2": 53, "case1": 53, "case2": 53, "case3": 53, "case4": 53, "216172782113784153": 53, "216172782113784100": 53, "216172782113783956": 53, "216172782113784673": 53, "216172782113784252": 53, "216172782113784263": 53, "216172782113784193": 53, "216172782113784242": 53, "216172782113784623": 53, "216172782113784498": 53, "216172782113784251": 53, "216172782113784538": 53, "216172782113784167": 53, "216172782113783864": 53, "216172782113784613": 53, "216172782113784116": 53, "leverag": [54, 55, 65, 67, 77, 277, 294, 302], "jave": [54, 302], "javasdk": [54, 302], "transit": [55, 254, 282], "magnitud": [55, 65], "wrapper": [55, 67, 73, 85, 91, 147, 148, 297], "superior": [55, 64, 66, 70], "rich": [55, 63, 66, 68, 135, 137], "gat": [55, 68, 133, 141, 317], "deepwalk": [55, 133, 317], "trans": [55, 133, 317], "pyg": [55, 56, 59, 68, 69, 70], "flexibli": [55, 63, 68, 70], "pytorch": [55, 56, 63, 68, 139, 141], "onlin": [55, 65, 68, 69, 294, 298], "fed": [55, 64, 68], "dockerfil": [55, 140], "ek": 55, "aw": [55, 71, 309], "failov": [55, 70], "concentr": [55, 70, 189], "secur": [56, 68, 69], "industri": [56, 63, 68, 70, 71], "feasibl": [56, 68], "preprocess": [56, 145], "uniformli": [56, 222, 223, 224, 232, 233, 234, 235, 236, 280], "lookup": [56, 68, 145, 285], "topolog": [56, 135], "nn": [56, 58, 61, 62, 64, 68, 74, 133, 145, 312, 317], "ego": [56, 68, 141, 286, 317], "dimension": [56, 62, 64, 68, 134, 136, 137], "conv": [56, 59, 68], "edge_index": [56, 59], "carri": 56, "meta": [56, 73, 136, 137, 147, 296, 298], "topologi": [56, 59, 65, 136, 141, 282, 294, 296, 297], "fulli": [56, 59, 74, 83, 227, 297], "predict": [56, 62, 63, 64, 68], "asynchron": 56, "tensor": [56, 59, 73, 74, 75, 115, 133, 137, 141, 143, 289, 291], "123456": [56, 68, 298], "plaintext": 56, "clearli": [56, 68], "space": [56, 68, 134, 135, 139, 150, 184, 232, 233, 234, 235, 236], "dimens": [56, 58, 61, 62, 64, 68, 134, 232, 233, 234, 235, 277, 312], "term": 56, "batchgraph": 56, "mini": [56, 68], "loss": [56, 58, 61, 62, 64, 68, 145, 312, 317], "mind": 56, "categori": [56, 58, 59, 64, 68, 145], "classif": [56, 60, 64, 68, 72, 133, 134, 145], "trainer": [56, 58, 61, 62, 64, 133, 312, 317], "rm": [57, 145], "egographsag": [58, 61, 64, 312], "349": [58, 62, 64, 312], "venu": [58, 64], "confer": [58, 64, 137, 308], "www": [58, 61, 62, 64, 150, 204, 258, 267, 270, 298, 312], "tf": [58, 59, 61, 62, 64, 133, 134, 139, 140, 145, 312, 317], "disable_v2_behavior": [58, 61, 62, 64, 312], "importerror": [58, 61, 62, 64, 312], "load_ogbn_mag": [58, 61, 62, 64, 312, 318], "egosagesuperviseddataload": [58, 62, 64, 312], "localtrain": [58, 61, 62, 64, 312], "node_typ": [58, 61, 62, 64, 133, 135, 136, 139, 142, 145, 149, 312, 317], "edge_typ": [58, 61, 62, 64, 133, 135, 136, 137, 138, 139, 142, 145, 149, 297, 312, 317], "class_num": [58, 62, 64, 133, 312, 317], "features_num": [58, 61, 62, 64, 133, 312, 317], "hops_num": [58, 62, 64, 133, 312, 317], "nbrs_num": [58, 61, 62, 64, 312], "epoch": [58, 59, 61, 62, 64, 133, 138, 312, 317], "hidden_dim": [58, 61, 62, 64, 133, 145, 312, 317], "256": [58, 62, 64, 71, 214, 274, 298, 312], "in_drop_r": [58, 62, 64, 312], "learning_r": [58, 61, 62, 64, 145, 312], "reset_default_tf_graph": [58, 62, 64, 312], "act_func": [58, 62, 64, 312], "relu": [58, 62, 64, 312], "dropout": [58, 61, 62, 64, 145, 312], "train_data": [58, 61, 62, 64, 312], "mask": [58, 62, 64, 149, 312], "train_embed": [58, 62, 64, 312], "src_ego": [58, 61, 62, 64, 312], "train_label": [58, 62, 64, 312], "reduce_mean": [58, 62, 64, 133, 145, 312, 317], "sparse_softmax_cross_entropy_with_logit": [58, 62, 64, 133, 145, 312, 317], "logit": [58, 62, 64, 145, 312], "adamoptim": [58, 61, 62, 64, 145, 312], "test_embed": [58, 62, 64, 312], "test_label": [58, 62, 64, 312], "test_indic": [58, 62, 64, 312], "argmax": [58, 62, 64, 312], "output_typ": [58, 62, 64, 119, 289, 312], "int32": [58, 62, 64, 134, 136, 144, 145, 312], "test_acc": [58, 62, 64, 312], "div": [58, 62, 64, 312], "reduce_sum": [58, 62, 64, 312], "cast": [58, 62, 64, 145, 297, 312], "float32": [58, 62, 64, 136, 145, 312], "obgn": [58, 62], "mag": [58, 62, 64, 312], "paper_featur": [58, 64, 312], "feat_": [58, 61, 62, 64, 312], "128": [58, 61, 62, 64, 145, 312], "lg": [58, 61, 62, 64, 128, 292, 306, 312], "cite": [58, 61, 62, 64, 312], "gen_label": [58, 61, 62, 64, 128, 292, 312], "val": [58, 61, 62, 64, 133, 149, 292, 312, 317], "85": [58, 61, 62, 64, 71, 74, 292, 312], "seed": [59, 74, 133, 141, 145, 204, 207, 208, 209, 210, 212, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 232, 233, 234, 235, 236, 239, 240, 241, 242, 245, 277, 280, 282], "sampler": [59, 61, 138, 141, 143], "categor": 59, "perceptu": 59, "theori": [59, 137, 145], "extern": [59, 63, 292, 298], "unsupervis": [59, 61, 72, 133, 139, 141, 142, 292], "mainstream": [59, 137, 138], "putback": 59, "outofrangeerror": [59, 138, 139, 145], "evolv": [59, 63, 298], "neighborsampl": [59, 137], "edge_weight": [59, 137, 139], "random_with_replac": 59, "topk": [59, 137, 139], "pad": [59, 137], "expand_factor": [59, 137, 142], "sparsenod": [59, 136, 137, 139], "sparseedg": [59, 136, 137, 139], "layer1": [59, 137], "layer2": [59, 137], "neighbor_sampl": [59, 137], "bui": [59, 63, 136, 137, 138, 139, 142, 145], "i2i": [59, 137, 139], "batch_siz": [59, 61, 133, 137, 138, 139, 142, 145, 301, 317], "layer_nod": [59, 137], "int_attr": [59, 136, 137, 138, 142, 145], "layer_edg": [59, 137], "float_attr": [59, 136, 137, 138, 142, 145], "egograph": [59, 68, 133, 141, 317], "negativesampl": [59, 142], "node_weight": [59, 139, 142], "edge_sampl": [59, 138, 142], "negative_sampl": [59, 133, 142, 317], "neg_nod": [59, 142], "heterogen": [59, 62, 64, 66, 68, 134, 135, 136, 137, 139], "randomli": [59, 139, 204, 210, 214, 216, 225, 227, 232, 235, 240, 282], "outv": [59, 133, 137, 139, 145, 316, 317], "overs": 59, "citat": [60, 62, 64, 72, 145, 312], "revisit": [60, 61, 72], "with_dataset": [61, 127, 132, 292, 318], "k8s_service_typ": [61, 127, 132, 292, 312], "loadbalanc": [61, 292, 312], "k8s_image_pull_polici": [61, 127, 132, 292], "cell": [61, 278], "metainfo": 61, "obgn_mag": 61, "ogbn_mag_smal": [61, 312, 318], "chose": [61, 62], "i_featur": [61, 62], "argpars": 61, "tfg": 61, "egosageunsuperviseddataload": 61, "parse_arg": 61, "argumentpars": 61, "egosag": 61, "add_argu": 61, "output_dim": [61, 133, 317], "neg_num": 61, "0001": 61, "agg_typ": 61, "drop_out": 61, "neg_sampl": 61, "temperatur": 61, "dim": [61, 232, 233, 234, 235], "src_emb": [61, 133, 317], "dst_emb": 61, "dst_ego": 61, "neg_dst_emb": 61, "neg_dst_ego": 61, "unsupervised_softmax_cross_entropy_loss": 61, "ogbn": [62, 64, 312], "academ": [62, 64, 312], "microsoft": [62, 64, 312], "encompass": 62, "institut": [62, 64, 312], "accomplish": [62, 64, 204], "word2vec": [62, 64, 312], "worth": [62, 67, 139, 147, 285], "highlight": [63, 67], "modular": [63, 277], "rapidli": [63, 137], "seller": 63, "buyer": [63, 67], "fraudul": 63, "transact": [63, 67, 69, 70, 71, 294, 298, 308], "collabor": [63, 297], "sell": 63, "suspici": 63, "anti": [63, 67, 70], "fraud": [63, 70], "feed": [63, 128, 133, 136, 139, 145, 149, 292, 317], "webui": 63, "necessit": 63, "comprehens": [63, 69, 71, 72], "diversifi": 63, "ingest": 63, "rapid": 63, "hous": [63, 259, 260], "analyst": 63, "concurr": [63, 135], "crucial": 63, "resembl": [63, 277, 282, 284], "olap": 63, "gen": [63, 139], "dataflow": 63, "arriv": 63, "suitabl": [63, 70, 135, 139, 145, 204, 298, 301], "hiactor": 63, "sigmod2017": [63, 65, 308, 314], "financi": 63, "risk": 63, "billion": [63, 66, 70], "preval": 63, "definit": [63, 150, 231, 232, 234], "miniconda": 64, "scientif": 64, "field_of_studi": [64, 312], "subject": 64, "examin": 64, "4307": [64, 312], "proven": 64, "2014": [64, 150, 312], "2020": [64, 312], "simple_g": [64, 308, 312], "ret1": [64, 312], "k_core": [64, 74, 150, 286, 308, 312], "ret2": [64, 312], "add_column": [64, 73, 147, 308, 312, 313], "kcore": [64, 312], "tc": [64, 312], "downstream": [64, 139], "convolut": [64, 68, 141], "supervis": [64, 72, 134, 137, 145, 292, 312], "train_gcn": [64, 312], "130": [64, 312], "golssari": 65, "icde2023": 65, "indroduc": 65, "gra": 65, "ph": 65, "arallel": 65, "ngine": 65, "opensourc": 65, "anlayt": 65, "raph": 65, "nalysi": 65, "elat": 65, "ransact": 65, "loos": [65, 70, 294], "mysql": [65, 294], "nutshel": [65, 294], "exploit": [65, 294], "ahead": [65, 294], "wal": [65, 294], "etriev": 65, "IN": 65, "terfac": 65, "portabl": [65, 297], "handler": [65, 129, 292], "chive": 65, "movi": [65, 135], "guardian": 65, "galaxi": 65, "gpu": [65, 140], "steal": 65, "tackl": [65, 66], "imbal": 65, "nvlink": 65, "asymmetr": 65, "holist": 65, "innov": 65, "signific": [65, 70], "speedup": 65, "mangement": 65, "cncf": 65, "sandbox": 65, "robin": [65, 183, 184], "memoiz": 65, "vldb2021": 65, "artial": 65, "ncrement": 65, "transport": 66, "protein": [66, 226], "uncov": 66, "vari": [66, 134], "former": 66, "unless": [66, 137, 285], "discov": 66, "discoveri": [66, 68, 292], "rough": 66, "accordingli": [66, 124], "snap": 66, "stanford": [66, 276], "cs224w": 66, "constitu": 66, "bellman": [66, 150], "ford": [66, 150], "wikipedia": [66, 74, 247, 251, 252, 253, 254, 256, 257, 258, 264, 265, 266, 267, 269, 270, 271, 272, 278], "wiki": [66, 74, 247, 251, 252, 253, 254, 256, 257, 258, 264, 265, 266, 267, 269, 270, 271, 272], "s_algorithm": 66, "towardsdatasci": 66, "9bd8951e7da": 66, "interconnect": [66, 135], "road": [66, 300], "assist": 66, "logist": 66, "deliveri": 66, "media": 66, "ten": [66, 70, 137], "nontrivi": [66, 257], "steep": 66, "sought": 66, "occurr": 67, "monei": [67, 70], "launder": [67, 70], "exact": [67, 214, 216, 312], "exclud": 67, "expans": [67, 68, 142, 316], "heurist": [67, 212], "purchas": 67, "bolder": 67, "border": 67, "sens": [67, 277, 292], "worst": 67, "websocket": [67, 316], "mutat": 67, "groovi": 67, "currenttimemilli": [67, 316], "secondari": 67, "rocksdb": [67, 298], "isol": [67, 150, 246, 298], "therein": 67, "drug": 68, "accuraci": 68, "likelihood": 68, "biologi": 68, "valuabl": 68, "frame": 68, "bioinformat": 68, "chemic": 68, "promis": 68, "driven": [68, 277, 297], "carefulli": 68, "rewind": 68, "stack": 68, "weigh": 68, "choic": [68, 297, 298], "matrix": [68, 74, 141, 150, 212, 230, 245, 248, 277, 285, 288], "huge": [68, 300], "unseen": [68, 300], "plain": 68, "text": [68, 76, 186], "backward": [68, 139, 236], "gradient": 68, "metric": [68, 232, 233, 234, 235, 236], "recal": 68, "f1": [68, 147], "assess": [68, 145, 262], "irregular": 68, "unstructur": 68, "pool": 68, "hardwar": [68, 301], "undergo": 68, "perceiv": 68, "detial": 68, "2x": 69, "soon": [69, 70, 71, 136], "excel": 69, "elast": [69, 298], "versatil": [69, 297], "acid": 69, "authent": [69, 298], "encrypt": 69, "stand": [70, 137, 138, 297], "summari": [70, 165], "simultan": [70, 294], "elabor": 70, "geminigraph": [70, 71], "plato": [70, 71], "empir": 70, "graphalyt": 70, "enjoi": 70, "neo4j": [70, 71, 296], "janusgraph": 70, "nebula": 70, "dbm": 70, "relaunch": [70, 298], "recoveri": 70, "protocol": [70, 292], "coars": 70, "grain": 70, "emphas": 70, "invest": 70, "trace": [70, 74], "dgl": 70, "accommod": 70, "nebular": 70, "movement": [70, 139], "trivial": [70, 201], "grade": 71, "r6": 71, "8xlarg": 71, "alibabacloud": 71, "ec": 71, "xl": 71, "commit": [71, 294], "a038f97": 71, "170e7d3": 71, "21009d6": 71, "v4": 71, "mpich": 71, "fair": 71, "huge_pag": 71, "jemalloc": 71, "o3": 71, "stub": [71, 78, 214, 242, 245], "determinist": [71, 76, 292, 298], "cdlp": [71, 74, 308], "load_direct": 71, "load_undirected_from_direct": 71, "reformat": 71, "mark": [71, 150], "datagen": 71, "9_0": 71, "fb": 71, "62": 71, "9_1": 71, "78": [71, 204, 278], "9_2": 71, "zf": 71, "88": [71, 217, 219], "60": [71, 150, 278], "61": 71, "176": [71, 241], "87": [71, 276], "graph500": 71, "71": [71, 150, 222, 226, 232], "79": [71, 217, 219], "friendster": 71, "97": 71, "39": [71, 135, 136, 138, 150, 278, 308, 310], "86": 71, "57": 71, "126": [71, 218], "98": 71, "83": 71, "66": 71, "1695": 71, "2742": 71, "3600": 71, "425": 71, "55": [71, 184], "lcc": 71, "521": 71, "51": [71, 278], "296": 71, "1859": 71, "201": [71, 281], "842": 71, "68": 71, "competitor": 71, "didn": 71, "pagerank_loc": 71, "65": 71, "72": 71, "84": 71, "63": [71, 221, 223], "gunrock": 71, "0c9a96": 71, "v0": [71, 140, 288], "grout": 71, "5ce160": 71, "v7": 71, "cuda": 71, "v10": 71, "gn6v": 71, "c8g1": 71, "16xlarg": 71, "8x": 71, "16gb": 71, "nvidia": 71, "v100": 71, "gb": 71, "devic": 71, "millisecond": 71, "soc": [71, 205, 206], "livejournal1": 71, "89": 71, "9345": 71, "215": [71, 274], "560": 71, "3029": 71, "129": [71, 240], "389": 71, "155": 71, "0549": 71, "sinaweibo": 71, "168": 71, "1649": 71, "647": 71, "orkut": 71, "105": [71, 205, 206], "121": 71, "193": 71, "658": 71, "3201": 71, "7677": 71, "137": [71, 212], "2139": 71, "319": 71, "261": 71, "69": [71, 272, 278], "235": 71, "567": 71, "283": 71, "073": 71, "6619": 71, "45": [71, 135, 136, 138, 214], "150": 71, "87299": 71, "162": 71, "60403": 71, "9676": 71, "141": 71, "347": 71, "7772": 71, "0118": 71, "306": 71, "8618": 71, "9134": 71, "467": 71, "60801": 71, "8666": 71, "3501": 71, "870": 71, "6451": 71, "198": 71, "829": 71, "5036": 71, "229": 71, "127": [71, 298], "024": 71, "483": 71, "178": 71, "5593": 71, "807": 71, "367": 71, "6946": 71, "2339": 71, "jupyt": [72, 292], "notebook": [72, 292], "jupyterlab": 72, "playground": [72, 319], "bipartit": [72, 133, 135, 191, 239, 240, 241, 273, 317], "grapeengin": 73, "vineyardserv": 73, "grapeinst": 73, "graphscopeserv": 73, "inlin": 73, "rpc": [73, 146, 292], "dag_fil": 73, "dagfil": 73, "rundagfil": 73, "subscrib": 73, "charg": 73, "commspec": [73, 294, 297, 299], "comm_spec": [73, 294, 297, 299], "vineyard_socket": 73, "bl": 73, "dispatchresult": 73, "onrec": 73, "commanddetail": 73, "cmd": 73, "gsobject": 73, "objectmanag": 73, "subclass": [73, 285], "appentri": 73, "icontextwrapp": 73, "ifragmentwrapp": 73, "projector": 73, "propertygraphutil": 73, "objecttyp": 73, "tostr": [73, 299], "putobject": 73, "obj": 73, "removeobject": 73, "getobject": [73, 298, 299], "hasobject": 73, "analyticalserv": 73, "startserv": 73, "stopserv": 73, "engineconfig": 73, "tojsonstr": 73, "vineyard_rpc_endpoint": 73, "enable_java_sdk": 73, "setcommand": 73, "wrap": [73, 77], "enum": 73, "aggregatepolici": 73, "enumer": 73, "kpickfirst": 73, "kpickfirstnonempti": 73, "krequireconsist": 73, "kconcat": 73, "kpickfirstnonemptygraphdef": 73, "kmergegraphdef": 73, "worker_id": [73, 147], "error_cod": 73, "ok": 73, "set_error": 73, "has_large_data": 73, "set_graph_def": 73, "graphdefpb": 73, "graph_def": 73, "set_data": 73, "large_data": 73, "inarch": 73, "arc": 73, "aggregate_polici": 73, "fragmentwrapp": 73, "addcolumn": 73, "vdata_t": 73, "edata_t": 73, "arrowvertexmap": 73, "internaltyp": 73, "arrowprojectedfragmentbas": 73, "bareregist": 73, "internal_oid_t": 73, "property_graph_typ": 73, "eid_typ": 73, "vertexrang": [73, 76], "inner_vertices_t": 73, "outer_vertices_t": 73, "vertices_t": 73, "sub_vertices_t": 73, "nbr_t": 73, "arrow_projected_fragment_impl": 73, "nbrunit": 73, "const_adj_list_t": 73, "property_vertex_map_t": 73, "arrowprojectedvertexmap": 73, "label_id_typ": 73, "prop_id_typ": 73, "property_graph_t": 73, "eid_array_t": 73, "data_t": 73, "inner_vertex_array_t": 73, "outer_vertex_array_t": 73, "objectmeta": 73, "preparetorunapp": 73, "prepareconf": 73, "fnum": [73, 76], "vertex_label": [73, 76], "edge_label": [73, 76, 292], "vertex_prop_id": 73, "edge_prop_id": 73, "mirrorvertic": 73, "getvertex": 73, "getid": 73, "getinternalid": 73, "getfragid": 73, "typedarrai": 73, "value_typ": 73, "gid2vertex": 73, "vertex2gid": 73, "getinnerverticesnum": 73, "getouterverticesnum": 73, "getverticesnum": 73, "getedgenum": [73, 299], "getinedgenum": [73, 299], "getoutedgenum": [73, 299], "getoutgoingedgenum": 73, "getincomingedgenum": 73, "gettotalverticesnum": 73, "isinnervertex": 73, "getoutervertex": 73, "getinnervertexid": 73, "getinnervertexinternalid": 73, "getoutervertexid": 73, "getoutervertexinternalid": 73, "gid2oid": 73, "oid2gid": 73, "innervertexgid2vertex": 73, "outervertexgid2vertex": 73, "getoutervertexgid": 73, "getinnervertexgid": 73, "getincominginnervertexadjlist": 73, "getoutgoinginnervertexadjlist": 73, "getincomingoutervertexadjlist": 73, "getoutgoingoutervertexadjlist": 73, "src_fid": 73, "dst_fid": 73, "getlocaloutdegre": 73, "getlocalindegre": 73, "destlist": 73, "iedest": 73, "oedest": 73, "ioedest": 73, "getvertexmap": 73, "get_out_edges_ptr": 73, "get_in_edges_ptr": 73, "get_oe_offsets_begin_ptr": 73, "get_oe_offsets_end_ptr": 73, "get_ie_offsets_begin_ptr": 73, "get_ie_offsets_end_ptr": 73, "get_edata_array_accessor": 73, "get_vdata_array_accessor": 73, "get_arrow_frag": 73, "getoid": 73, "getgid": 73, "offset2lid": 73, "getoffsetfromlid": 73, "getlidfromgid": 73, "getfidfromgid": 73, "vid_typ": 73, "oid_t_": 73, "vid_t_": 73, "arrowfragmentload": 73, "efil": [73, 299], "vfile": [73, 299], "graph_info": 73, "leaf": [73, 75, 121, 150, 195, 279], "table_vec_t": 73, "loadvertexedget": 73, "loadvertext": 73, "loadedget": 73, "objectid": [73, 147, 297, 299], "loadfrag": 73, "loadfragmentasfragmentgroup": 73, "addlabelstofrag": 73, "frag_id": [73, 294, 299], "addlabelstofragmentasfragmentgroup": 73, "initpartition": 73, "doxygenclass": 73, "arrowfragmentappend": 73, "doxygen": 73, "runner": [73, 308], "_build": 73, "appbas": 73, "defaultmessagemanag": 73, "explicitli": [73, 135, 204, 292, 298], "need_split_edg": 73, "konlyout": 73, "propertyappbas": 73, "propertymessagemanag": 73, "propertyautoappbas": 73, "propertyautomessagemanag": 73, "app_t": 73, "defaultwork": 73, "parallelenginespec": 73, "pe_spec": 73, "defaultparallelenginespec": 73, "getcontext": 73, "ostream": 73, "parallelpropertywork": 73, "parallelpropertymessagemanag": 73, "propertyautowork": 73, "pointer": 73, "appfram": 73, "creatework": 73, "deletework": 73, "lib_path": 73, "worker_handl": 73, "queryarg": 73, "query_arg": [73, 119, 289], "context_kei": 73, "frag_wrapp": 73, "functiontyp": 73, "argsnum": 73, "argsunpack": 73, "proto": [73, 92, 119], "datatyp": 73, "argtypeat": 73, "defaultpropertywork": 73, "ctx_t": 73, "ctxwrapperbuild": 73, "contextwrapp": 73, "vertexpropertycontext": [73, 308], "contextbas": 73, "labeledvertexdatacontext": 73, "contextdatatyp": 73, "icolumn": 73, "get_column": 73, "get_typed_column": 73, "vertex_properti": [73, 74, 76], "properties_map": 73, "vertexdatacontextwrapp": 73, "ivertexdatacontextwrapp": 73, "fragment_wrapp": 73, "unique_ptr": 73, "tondarrai": 73, "todatafram": 73, "tovineyardtensor": 73, "tovineyarddatafram": 73, "toarrowarrai": 73, "tensorcontext": [73, 75], "set_shap": 73, "tensor_t": 73, "tensorcontextwrapp": 73, "itensorcontextwrapp": 73, "uint32_t": 73, "cmake_extra_opt": 74, "asset": 74, "dag": [74, 75, 92, 147, 285, 289, 292], "byte": [74, 81, 144], "labeled_vertex_data": 74, "dynamic_vertex_data": 74, "labeled_vertex_properti": 74, "cpp_pregel": 74, "cython_pi": 74, "cython_pregel": 74, "appdagnod": [74, 110, 116], "__init__": [74, 133, 140, 147, 148, 149, 285, 286, 288, 292, 298, 317], "bytesio": [74, 81], "is_compat": 74, "graphdagnod": [74, 85, 100, 101, 118, 125, 128, 147, 148, 292], "invalidargumenterror": [74, 292], "scannererror": 74, "incorrect": 74, "signatur": [74, 139, 285], "resouc": 74, "__call__": 74, "kwarg": [74, 75, 81, 92, 106, 110, 111, 132, 142, 147, 149, 292], "app_asset": [74, 85, 91], "bind": [74, 297], "app_nod": 74, "__del__": 74, "unload": [74, 96, 116, 118], "attribute_assortativity_coeffici": [74, 308], "assort": 74, "ref": [74, 297], "joint": [74, 242, 243, 244, 245, 286], "newman": [74, 150, 214, 216, 277], "026126": 74, "2003": [74, 150, 207, 214, 225, 233], "numeric_assortativity_coeffici": [74, 308], "analog": 74, "k_": [74, 186, 250], "rac": 74, "s_i": 74, "sum_": [74, 150, 218], "w_": [74, 150, 218], "ij": [74, 150], "k_j": 74, "valueerror": [74, 127, 132, 147, 150, 224, 281, 292], "barrat": 74, "barth\u00e9lemi": 74, "pastor": 74, "satorra": 74, "vespignani": 74, "pna": 74, "101": [74, 314], "3747": 74, "3752": 74, "2004": [74, 239], "average_shortest_path_length": [74, 150, 286, 308], "frac": [74, 150, 160, 218], "vertexdatacontextdagnod": [74, 75], "avg_clust": [74, 308], "degree_threshold": 74, "greater": [74, 135, 150, 204, 235, 292, 297], "threshold": [74, 232, 233, 234, 235], "1e9": 74, "unweight": [74, 150], "foster": 74, "grassberg": 74, "paczuski": 74, "107": [74, 238], "10815": 74, "1e": [74, 145, 150, 204], "06": [74, 150], "html": [74, 150, 234, 237, 246, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 265, 267], "gv": 74, "hits_algorithm": 74, "vertexpropertycontextdagnod": [74, 75], "is_simple_path": [74, 308], "nonempti": 74, "explan": [74, 137], "biject": [74, 280], "smallest": [74, 237, 257, 267], "pairwis": 74, "boolean": [74, 76, 135, 139, 150, 169, 170, 207, 209, 212, 243, 283], "k_shell": [74, 308], "stabl": [74, 147, 294, 298, 315], "katz_centrality_numpi": [74, 150], "auttenu": 74, "maximun": 74, "min_progress": 74, "1000": [74, 135, 150, 282, 285, 298], "progress_tri": 74, "progress": [74, 229], "met": 74, "exit": [74, 316], "blondel": 74, "et": [74, 282], "al": [74, 282], "stat": [74, 232, 234], "mech": 74, "10008": 74, "2008": [74, 204, 227], "sotera": 74, "lpa_u2i": [74, 308], "labeledvertexpropertycontextdagnod": [74, 75], "evalut": 74, "dump": [74, 111, 147], "pagerank_nx": [74, 308], "max_it": [74, 150, 204], "tol": [74, 150, 204], "solver": 74, "voterank": [74, 308], "unsign": [74, 298], "weakli": [74, 150, 224], "basecontextdagnod": [75, 147], "bound_app": [75, 91], "contextdagnod": 75, "ndarrai": [75, 89, 101, 136, 137, 139, 142, 147, 149, 285, 318], "to_vineyard_tensor": [75, 291, 308], "to_vineyard_datafram": [75, 291, 308], "lazi": [75, 147, 292], "sg": 75, "r1": [75, 300, 301], "ramework": 75, "resultdagnod": [75, 111, 148], "r2": [75, 300, 301], "r3": [75, 300], "r4": [75, 300], "62586": 75, "comparis": 75, "alphabet": [75, 291], "tensorcontextdagnod": 75, "labeledvertexdatacontextdagnod": 75, "label_nam": [75, 291], "column_nam": [75, 291], "labeld": [75, 134], "context_nod": 75, "result_schema": 75, "referenc": 75, "dynamicvertexdatacontext": 75, "dag_nod": 75, "op": [75, 84, 86, 87, 88, 89, 91, 92, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 114, 115, 116, 118, 119, 143, 285, 289, 292], "get_str": 76, "property_id": 76, "get_doubl": 76, "edge_label_id": 76, "edge_label_nam": 76, "incoming_edg": 76, "register_aggreg": 76, "pregelaggregatortyp": 76, "aggr_typ": 76, "get_aggregated_valu": 76, "get_total_vertices_num": 76, "vertex_property_num": 76, "vertex_label_nam": 76, "vertex_label_id": 76, "edge_property_num": 76, "get_vertex_label_by_id": 76, "get_vertex_label_id_by_nam": 76, "get_edge_label_by_id": 76, "get_edge_label_id_by_nam": 76, "edge_properti": 76, "get_vertex_property_id_by_nam": 76, "vertex_property_nam": [76, 297], "get_vertex_property_by_id": 76, "vertex_property_id": 76, "get_edge_property_id_by_nam": 76, "edge_property_nam": 76, "get_edge_property_by_id": 76, "edge_property_id": 76, "queue": 76, "kboolandaggreg": 76, "AND": 76, "kbooloraggreg": 76, "kbooloverwriteaggreg": 76, "overwritten": 76, "kdoubleminaggreg": 76, "kdoublemaxaggreg": 76, "kdoublesumaggreg": 76, "kdoubleproductaggreg": 76, "kdoubleoverwriteaggreg": 76, "kint64minaggreg": 76, "int64": [76, 103, 125, 134, 136, 137, 142, 144, 145, 147, 318], "kint64maxaggreg": 76, "kint64sumaggreg": 76, "kint64productaggreg": 76, "kint64overwriteaggreg": 76, "ktextappendaggreg": 76, "kalongoutgoingedgetooutervertex": 76, "kalongincomingedgetooutervertex": 76, "kalongedgetooutervertex": 76, "sync": [76, 144, 297], "nerghbor": 76, "get_total_nodes_num": 76, "get_nodes_num": 76, "get_inner_nodes_num": 76, "get_outer_nodes_num": 76, "outer_nod": 76, "get_node_fid": 76, "is_inner_nod": 76, "is_outer_nod": 76, "get_nod": [76, 136], "get_outer_nod": 76, "get_node_id": 76, "get_incoming_edg": 76, "has_child": 76, "child": [76, 187, 279], "has_par": 76, "parent": [76, 77, 119, 124, 279], "get_indegre": 76, "get_outdegre": 76, "kmaxaggreg": 76, "ksumaggreg": 76, "kproductaggreg": 76, "koverwriteaggreg": 76, "subproject": 77, "scratch": 77, "readm": 77, "never": [77, 285], "hopefulli": 77, "inspir": [77, 285], "dskiptest": 77, "dmaven": 77, "antrun": 77, "moment": [77, 298], "jni": 77, "mac": [77, 310, 312], "gae_java": 78, "graphscope_typ": 80, "graphscopetyp": 80, "myalgorithm": 80, "filenotfounderror": 81, "permissionerror": 81, "typeerror": [81, 119, 292], "arrowproperti": 82, "subrang": 82, "loader_op": 83, "notimplementederror": 83, "implicitli": 83, "run_app": [88, 89, 106, 114, 115], "copy_typ": 90, "session_id": [92, 96, 119, 147, 148, 285, 289], "graph_typ": [92, 285], "graphtyp": [92, 285, 294, 299], "view_typ": 93, "vertex_or_edge_label_list": 94, "graph_util": 94, "vertexlabel": 94, "op_typ": [96, 119, 289], "uiliti": 96, "result_set": 98, "fetch_typ": 98, "raphscop": 98, "resultsetdagnod": 98, "resultset": [98, 298], "interactive_queri": [102, 103, 129, 292], "request_opt": [102, 103, 148], "interactivequerydagnod": [102, 103, 129], "gremlin_script": [103, 148], "modify_typ": [104, 105], "attr": [104, 105, 119, 139, 152, 153, 154, 285, 288], "type_pb2": [104, 105, 109], "nx_add_edg": 104, "nx_del_edg": 104, "nx_update_edg": 104, "nx_add_nod": 105, "nx_del_nod": 105, "nx_update_nod": 105, "fd": [106, 111, 308], "storage_opt": [106, 111], "write_opt": [106, 111], "adaptor": 106, "result_path": [106, 111], "vertex_collect": 107, "edge_collect": 107, "report_typ": 109, "variati": 109, "node_num": [109, 312, 316], "has_nod": [109, 285], "has_edg": [109, 285], "node_data": 109, "edge_data": [109, 300], "neighbors_by_nod": 109, "succs_by_nod": 109, "preds_by_nod": 109, "neighbors_by_loc": 109, "succs_by_loc": 109, "preds_by_loc": 109, "deg_by_nod": 109, "in_deg_by_nod": 109, "out_deg_by_nod": 109, "deg_by_loc": 109, "in_deg_by_loc": 109, "out_deg_by_loc": 109, "nodes_by_loc": 109, "loc": 109, "multigraph": [109, 150, 152, 160, 164, 173, 178, 179, 205, 206, 214, 216, 229, 230, 231, 285, 288], "multidigraph": [109, 152, 164, 173, 178, 179, 216, 224, 225, 283, 285], "large_attr": [119, 289], "types_pb2": [119, 285], "operationtyp": 119, "opdef": [119, 123], "attrvalu": [119, 147, 316], "largeattrvalu": 119, "op_def_pb2": 123, "incoming_data": [125, 147], "vertex_map": [125, 147], "as_default": [125, 292], "k8s_gs_imag": [127, 132, 292, 310], "k8s_etcd_imag": [127, 132], "k8s_image_pull_secret": [127, 132, 292], "k8s_coordinator_cpu": [127, 132, 292], "k8s_coordinator_mem": [127, 132, 292], "k8s_vineyard_cpu": [127, 132, 292], "k8s_mars_worker_cpu": [127, 132, 292], "k8s_mars_worker_mem": [127, 132, 292], "k8s_mars_scheduler_cpu": [127, 132, 292], "k8s_mars_scheduler_mem": [127, 132, 292], "with_mar": [127, 132, 292], "k8s_waiting_for_delet": [127, 132, 292], "dataset_download_retri": [127, 132], "interactivequeri": [129, 148, 290, 292, 316], "alia": [131, 133, 139, 285, 292, 317], "kv": 132, "cooper": [133, 147], "\u02bbegograph": 133, "\u02bbegotensor": 133, "sample_se": [133, 317], "positive_sampl": [133, 317], "receptive_fn": [133, 317], "egotensor": [133, 141, 317], "egoflow": [133, 141, 317], "cora": [133, 145, 317], "convers": [133, 134, 294], "node_t": [133, 134, 145, 317], "edge_table_with_self_loop": [133, 317], "train_tabl": [133, 317], "val_tabl": [133, 317], "test_tabl": [133, 317], "dataset_fold": [133, 317], "decod": [133, 134, 135, 145, 317], "attr_typ": [133, 134, 135, 145, 317], "1433": [133, 145, 317], "attr_delimit": [133, 134, 135, 317], "learningbasedmodel": [133, 317], "categorical_attrs_desc": [133, 317], "_sample_se": [133, 317], "_positive_sampl": [133, 317], "_receptive_fn": [133, 317], "ego_flow": [133, 317], "src_ego_spec": [133, 317], "pos_src_ego_tensor": [133, 317], "identityencod": [133, 317], "widendeepencod": [133, 317], "feature_encod": [133, 317], "gcnconv": [133, 317], "sparseegographencod": [133, 317], "_encod": [133, 317], "conv_lay": [133, 317], "_supervised_loss": [133, 317], "full_graph_mod": [133, 317], "localtftrain": [133, 317], "model_fn": [133, 145, 317], "batch_szi": [133, 317], "load_graph": [133, 317], "server_id": [133, 317], "server_count": [133, 135, 145, 317], "tracker": [133, 145, 317], "conclud": 133, "bought": 134, "saturdai": 134, "morn": 134, "bigint": 134, "dst_id": [134, 135, 136, 138, 139, 145, 149], "shanghai": 134, "mandatori": 134, "localfilesystem": 134, "pai": [134, 139, 140], "tab": 134, "s2": [134, 250], "hangzhou": [134, 318], "215340": 134, "933091": 134, "grei": 134, "362519": 134, "097545": 134, "chapter": [134, 135, 137, 231, 268], "comma": 134, "dscript": 134, "dentryfil": 134, "dtabl": 134, "odp": 134, "prj": 134, "flag": [134, 135], "define_str": 134, "node_sourc": 134, "edge_sourc": 134, "hash": 134, "bucket_s": 134, "greatli": [134, 135, 297], "your_attr_typ": 134, "you_delimit": 134, "weightd": 134, "scr_id": 134, "10001": [134, 135, 136, 138], "feature1": 134, "10002": [134, 135, 136, 138], "feature2": 134, "10003": [134, 135, 136, 138], "feature3": 134, "123": 134, "124": 134, "\u02bbitem_node_decod": 134, "\u02bbuser_node_decod": 134, "\u02bbedge_decod": 134, "item_node_decod": 134, "user_node_decod": 134, "edge_decod": [134, 145], "graph_object": 134, "commod": 135, "swing": [135, 136], "30001": [135, 136, 138], "30002": [135, 136, 138], "30003": [135, 136, 138], "table_1": 135, "table_2": 135, "dest": 135, "10004": [135, 136], "20001": [135, 136, 138], "20003": [135, 136, 138], "33": [135, 136, 138, 275, 278], "20004": [135, 136, 138], "46": [135, 136, 138, 150, 272], "ui_decod": 135, "uv_decod": 135, "table_3": 135, "table_4": 135, "click_v": 135, "task_index": [135, 145], "task_count": 135, "atyp": 135, "job_nam": [135, 145], "worker_host": 135, "respond": 135, "necessarili": [135, 247], "serious": 135, "decreas": [135, 214, 216], "speak": 135, "client_count": [135, 145], "wait_for_clos": [135, 145], "matter": [135, 291], "infom": 136, "get_topologi": 136, "src_type": 136, "dst_type": 136, "figure1": 136, "topo": 136, "print_al": 136, "egde_typ": 136, "ravers": 136, "string_attr": 136, "src_node": 136, "dst_node": 136, "diment": 136, "dense_shap": 136, "arra": 136, "__next__": 136, "dimenti": 136, "table1": 136, "u_nod": 136, "traves": 136, "get_edg": 136, "inferfac": 136, "table2": 136, "table3": 136, "click_edg": 136, "table4": 136, "conduc": 137, "character": 137, "recept": [137, 141], "ai": 137, "meta_path": 137, "layer_id": 137, "famili": [137, 150, 188, 246, 274], "random_without_replac": 137, "q": [137, 139, 145, 227, 231], "ueri": 137, "default_neighbor_id": 137, "set_default_neighbor_id": [137, 146], "xx": 137, "set_padding_mod": 137, "circular": [137, 139, 189], "alogrithm": 138, "throw": 138, "nodesampl": 138, "node_sampl": 138, "by_ord": 138, "node_from": [138, 149], "edge_src": [138, 149], "edge_dst": [138, 149], "edgesampl": 138, "matur": 139, "dl": 139, "sheer": 139, "sink": 139, "generatortyp": [139, 149], "won": [139, 300], "cursor": 139, "inv": [139, 145, 316], "ingo": 139, "query\u5bf9\u8c61": 139, "outneg": [139, 142], "inneg": [139, 142, 145], "candid": [139, 142], "u2i": 139, "ouv": 139, "func": 139, "512": 139, "edeg": 139, "src_1hop": 139, "dst_1hop": 139, "neg_i": 139, "neg_i_1hop": 139, "parmas_list": 139, "bodi": [139, 143, 251], "params_list": 139, "compli": 139, "arrang": 139, "anonym": [139, 277], "src_attr": 139, "neg_attr": 139, "encode_fn": [139, 145], "src_atr": 139, "outnegv": 139, "gen1": 139, "gen2": 139, "circumst": 139, "sour": 139, "foewa": 139, "from_gener": [139, 145], "make_one_shot_iter": [139, 145], "get_next": [139, 145], "slightli": [140, 204, 291], "zhangjiak": 140, "cp27": 140, "cp27mu": 140, "linux_x86_64": 140, "sudo": [140, 309, 310], "autoconf": 140, "automak": 140, "libtool": 140, "submodul": [140, 143, 297], "your_wheel_nam": [140, 143], "test_cpp_ut": 140, "test_python_ut": 140, "fastgcn": [141, 317], "graphsaint": 141, "amd": 141, "oprat": 142, "object_typ": 142, "oprequest": 143, "req": 143, "oprespons": 143, "params_": 143, "scalar": [143, 150], "tensors_": 143, "redirect": [143, 223], "rewrit": 143, "till": [143, 292], "happen": [143, 297, 300], "stitch": 143, "myoper": 143, "register_oper": 143, "opnam": 143, "randomsampl": 143, "writ": 143, "xxxsampler": 143, "kubeflow": 144, "reader": 144, "seek": 144, "litestr": 144, "char": [144, 147, 297], "buffer": 144, "getfiles": 144, "getrecordcount": 144, "register_file_system": 144, "myfilesystem": 144, "registr": 144, "ppi": 145, "train_supervis": 145, "gen_test_data": 145, "getopt": 145, "argv": 145, "cur_path": 145, "elif": 145, "102": [145, 281], "__name__": 145, "__main__": 145, "dirnam": 145, "rf": 145, "\u4f60\u9700\u8981\u628agen_test_data": 145, "py\u653e\u5230shell\u811a\u672c\u540c\u4e00\u76ee\u5f55\u4e0b": 145, "fi": 145, "sleep": 145, "case_bas": 145, "genetic_algorithm": 145, "neural_network": 145, "probabilistic_method": 145, "reinforcement_learn": 145, "rule_learn": 145, "bag": 145, "1033": 145, "103482": 145, "103515": 145, "31336": 145, "1061127": 145, "05882353": 145, "1106406": 145, "n_featur": 145, "node_decod": 145, "n_class": 145, "140": [145, 208], "n_hop": 145, "n_epoch": 145, "tripl": 145, "graph_object_cn": 145, "md": 145, "sample_gen": 145, "input_fn": 145, "sample_input_fn": 145, "float64": 145, "tensorshap": 145, "layer_featur": 145, "aggregate_fn": 145, "self_vec": 145, "neigh_vec": 145, "raw_feat_layer_index": 145, "layer_index": 145, "variable_scop": 145, "_layer": 145, "auto_reus": 145, "neigh_weight": 145, "get_vari": 145, "self_weight": 145, "output_shap": 145, "get_shap": 145, "neigh_mean": 145, "from_neigh": 145, "matmul": 145, "from_self": 145, "add_n": 145, "leaky_relu": 145, "depth_to_encod": 145, "h_self_vec": 145, "h_neighbor_vec": 145, "features_column": 145, "feature_column": 145, "numeric_column": 145, "loss_fn": 145, "train_op": 145, "global_step": 145, "get_global_step": 145, "estimatorspec": 145, "modekei": 145, "set_xxx": 146, "set_yyi": 146, "other_model": 146, "fill": [146, 186, 197, 207, 241], "nbr_id": 146, "set_default_int_attribut": 146, "set_default_float_attribut": 146, "set_default_string_attribut": 146, "set_inter_threadnum": 146, "intra": [146, 204, 207], "set_intra_threadnum": 146, "16mb": 146, "reset": 146, "enlarg": 146, "set_rpc_message_max_s": 146, "del": [147, 285], "objectnam": 147, "_e": [147, 294, 318], "src_field": [147, 313], "dst_field": [147, 313], "unspecifi": [147, 162], "vid_field": [147, 313], "graph_nod": 147, "detach": 147, "varaibl": 147, "lexic": 147, "classmethod": 147, "deseri": [147, 297], "broken": 147, "save_to": 147, "restor": 147, "path_": 147, "s3": [147, 318], "graphschema": [147, 285], "schema_path": 147, "currrent": 147, "object_id": [147, 148, 149], "filetyp": 147, "ordinari": 147, "f0": 147, "orc": [147, 296], "parquet": [147, 296], "graph_build": 147, "admin": [147, 298], "group_id": 147, "member_s": 147, "leader_student_id": 147, "student": 147, "member_student_id": 147, "group_for_teacher_stud": 147, "group_nam": 147, "establish_d": 147, "teacher_in_charge_id": 147, "teacher": 147, "lesson_num": 147, "avg_scor": 147, "student_id": 147, "salari": 147, "teacher_id": 147, "both_in_out": 147, "unambigu": 147, "orign": 147, "frontend_endpoint": 148, "graph_url": [148, 298, 316], "lifetim": 148, "traversal_sourc": 148, "graphtraversalsourc": 148, "contruct": 148, "runtimeerror": 148, "modern_graph_data_dir": 148, "tolist": [148, 298], "dtype": 149, "pywrap": 149, "nodefrom": 149, "get_handl": 149, "worker_count": 149, "base64": 149, "nstart": 150, "poweriterationfailedconverg": 150, "langvil": 150, "meyer": 150, "survei": [150, 238], "cites": 150, "ist": 150, "psu": 150, "edu": 150, "713792": 150, "jon": 150, "kleinberg": 150, "authorit": 150, "journal": [150, 219, 227, 244, 275, 278, 282], "acm": [150, 225, 276, 308], "604": 150, "1999": [150, 205, 206], "doi": [150, 220, 227, 262], "1145": 150, "324133": 150, "324140": 150, "cornel": 150, "kleinber": 150, "auth": [150, 298], "pdf": [150, 232, 234, 235], "load_centr": 150, "loop": [150, 160, 173, 212, 214, 216, 218, 224, 232, 233, 234, 235, 236, 242, 245, 285, 286, 316], "in_degree_centr": [150, 286], "networkxnotimpl": 150, "out_degree_centr": [150, 286], "equat": 150, "ax": 150, "eigenvalu": [150, 230], "virtu": 150, "perron": 150, "frobeniu": 150, "theorem": [150, 229, 241], "0e": 150, "strength": 150, "2f": 150, "networkxpointlessconcept": [150, 280], "null": [150, 167, 183, 184, 191, 198, 250, 280, 285], "networkxerror": [150, 156, 163, 165, 169, 170, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 220, 226, 229, 230, 231, 242, 245, 277, 285, 288], "eigenvector_centrality_numpi": 150, "discern": 150, "phillip": 150, "bonacich": 150, "american": 150, "sociologi": 150, "1170": 150, "1182": 150, "1986": [150, 274], "leonidzhukov": 150, "net": [150, 204], "hse": 150, "socialnetwork": 150, "oxford": [150, 183, 184, 233, 277], "press": [150, 183, 184, 231, 273, 276, 277], "usa": [150, 237, 238, 284], "pp": [150, 214, 217, 218, 219, 232, 238, 239, 276, 282], "169": 150, "x_i": 150, "a_": 150, "x_j": 150, "lambda_": 150, "distant": 150, "penal": 150, "strictli": [150, 204], "invers": [150, 229], "phi": 150, "sqrt": [150, 230], "adjacency_spectrum": 150, "720": 150, "leo": 150, "sociometr": 150, "psychometrika": 150, "1953": 150, "springer": [150, 239], "1007": [150, 184, 220], "bf02289026": 150, "has_path": [150, 286], "djikstra": 150, "floyd": 150, "warshal": 150, "bfs_edg": [150, 286], "depth_limit": 150, "core_numb": 150, "vladimir": 150, "batagelj": 150, "matjaz": 150, "zaversnik": 150, "arxiv": [150, 193, 208, 209, 210, 224, 277], "ab": [150, 208, 209, 210, 224, 232, 236, 277, 279], "0310049": 150, "c_u": 150, "deg": [150, 204, 218, 285], "geometr": [150, 272, 286], "vw": 150, "hat": 150, "uv": [150, 218], "uw": 150, "tot": 150, "2deg": 150, "leftrightarrow": 150, "complete_graph": [150, 156, 285], "saram\u00e4ki": 150, "kivel\u00e4": 150, "onnela": 150, "kaski": 150, "kert\u00e9sz": 150, "027105": 150, "2007": [150, 232, 278], "jponnela": 150, "web_docu": 150, "a9": 150, "intens": 150, "coher": 150, "motif": 150, "065103": 150, "2005": [150, 226, 232], "sign": 150, "correl": 150, "costantini": 150, "perugini": 150, "plo": 150, "e88669": 150, "fagiolo": 150, "76": 150, "026107": 150, "average_clust": [150, 286], "count_zero": 150, "c_v": 150, "nonzero": [150, 214, 231], "avg": 150, "routin": [150, 285], "marcu": 150, "kaiser": 150, "0802": 150, "2512": 150, "g_to_add_to": [152, 153, 154], "nodes_for_cycl": 152, "keyword": [152, 153, 154, 221, 228, 232, 233, 234, 235, 236, 285, 288, 291, 292], "add_path": [152, 154, 285], "add_star": [152, 153], "nodes_for_path": 153, "add_cycl": [153, 154], "nodes_for_star": 154, "star": [154, 191, 200], "middl": 154, "cnbor": 156, "with_data": 157, "empty_graph": [157, 198], "frequenc": 159, "width": 159, "2m": [160, 238], "prevent": 163, "err": 163, "frozen": [163, 168], "unfreez": 163, "frozen_graph": 163, "unfrozen_graph": 163, "is_frozen": 163, "freez": [168, 286], "signifi": [169, 170], "nodelist": [173, 212], "selfloop_edg": [173, 178, 214, 216], "number_of_selfloop": [173, 179], "selfloop": [178, 179, 212, 218], "nloop": 178, "nodes_with_selfloop": [178, 179], "datadict": [179, 285], "datavalu": 179, "attrnam": [179, 316], "edgeit": 179, "ekei": 179, "graph_atlas_g": 183, "linearli": [183, 199], "ronald": [183, 184, 274], "wilson": [183, 184], "1998": [183, 184], "111223": 184, "112222": 184, "automorph": [184, 257], "graph_atla": 184, "expens": 184, "popul": [184, 185, 187, 188, 190, 192, 195, 197, 199, 200, 203, 214, 216, 217, 219, 221, 222, 223, 229, 230, 231, 237, 238, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 280, 287], "book": 184, "violat": 184, "lexicograph": 184, "nondecreas": 184, "001111": 184, "000112": 184, "1008": 184, "3333444": 184, "3333336": 184, "1012": 184, "1213": 184, "1244555": 184, "1244456": 184, "perfectli": 185, "ari": [185, 195], "height": 185, "children": [185, 195, 279], "barbel": [186, 197], "bell": 186, "p_": [186, 218, 232], "mere": [186, 197], "aldou": [186, 197], "jim": [186, 197], "binomi": 187, "leftmost": 187, "ci_n": 188, "x_1": 188, "x_2": 188, "x_m": 188, "mod": [188, 202, 231, 250], "subfamili": 188, "ladder": [189, 196], "cl_n": 189, "k_n": 190, "is_direct": [190, 285], "subset_s": 191, "multipartit": [191, 202], "tripartit": 191, "bc": 191, "complete_bipartite_graph": 191, "c_n": 192, "hierarch": 193, "dorogovtsev": 193, "goltsev": 193, "mend": 193, "mat": 193, "0112143": 193, "kw": [194, 292], "unknown": [194, 297], "abc": 194, "rightmost": 195, "bottom": 195, "jame": 195, "andrew": 195, "storer": 195, "birkhaus": 195, "boston": 195, "2001": [195, 208, 216, 221, 223, 231, 240, 298], "225": [195, 285], "lollipop": 197, "k_m": 197, "p_n": [197, 199], "etext": 197, "turan": 202, "disjoint": [202, 213, 251], "2r": 202, "tau1": 204, "tau2": 204, "mu": 204, "average_degre": 204, "min_degre": 204, "max_degre": 204, "min_commun": 204, "max_commun": 204, "lfr": 204, "mathrm": 204, "expon": 204, "reassign": [204, 242], "interv": [204, 236, 292], "affili": [204, 312], "random_st": [204, 207, 208, 209, 210, 212, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 232, 233, 234, 235, 236, 239, 240, 241, 245, 277, 280, 282], "exceededmaxiter": 204, "250": 204, "frozenset": [204, 287], "rewir": [204, 206, 210, 242, 245], "wire": 204, "robust": 204, "somewhat": 204, "narrow": 204, "andrea": 204, "lancichinetti": 204, "santo": [204, 208, 209, 210], "fortunato": [204, 208, 209, 210], "filippo": 204, "radicchi": 204, "phy": [204, 216, 221, 222, 223, 226], "rev": [204, 216, 221, 222, 223, 226], "046110": 204, "santofortunato": 204, "caveman": [205, 206, 210], "unclear": [205, 206], "connected_caveman_graph": [205, 211], "watt": [205, 206, 216], "phenomenon": [205, 206], "amer": [205, 206], "493": [205, 206], "527": [205, 206], "caveman_graph": 206, "p_in": [207, 208, 209], "p_out": [207, 208, 209], "gaussian": [207, 233, 234, 235], "drawn": [207, 235], "varianc": 207, "probabilti": [207, 210], "random_partition_graph": [207, 212], "ulrik": 207, "brand": 207, "marco": 207, "gaertler": 207, "dorothea": 207, "wagner": 207, "11th": 207, "europ": 207, "symp": 207, "plant": [208, 209], "random_partition_model": 208, "condon": 208, "karp": 208, "algor": 208, "116": 208, "486": [208, 209, 210], "174": [208, 209, 210], "0906": [208, 209, 210], "0612": [208, 209, 210], "relax": 210, "februari": 210, "num_cliqu": 211, "clique_s": 211, "ring": 211, "stochast": [212, 286], "densiti": [212, 214, 232, 234], "symmetr": [212, 231, 254, 258, 264, 266, 277], "300": [212, 281], "prob": 212, "450": 212, "quotient_graph": 212, "relabel": 212, "245": 212, "348": 212, "405": 212, "051": 212, "022": 212, "planted_partition_graph": 212, "gaussian_random_partition_graph": 212, "gnp_random_graph": [212, 239, 240, 241], "holland": 212, "laskei": 212, "leinhardt": 212, "blockmodel": 212, "109": 212, "1983": 212, "windmil": 213, "thought": 213, "contract": 213, "altern": [213, 232, 236, 285, 297, 298], "wd": 213, "deg_sequ": [214, 215, 216, 217, 219], "pseudograph": [214, 216], "nonneg": [214, 216], "is_graph": [214, 220], "graphic": [214, 216, 219, 220], "realiz": [214, 216, 219, 242, 243, 244, 245, 272, 297], "tend": 214, "poisson": 214, "constant": [214, 316], "siam": [214, 219, 225], "167": 214, "random_sequ": 214, "hundr": [214, 225], "random_powerlaw_tree_sequ": 214, "5000": 214, "actual_degre": 214, "in_degree_sequ": 216, "out_degree_sequ": 216, "directed_random": 216, "configuration_model": [216, 217, 220], "finit": [216, 218, 231], "strogatz": 216, "026118": 216, "din": 216, "dout": 216, "in_deg_sequ": 217, "out_deg_sequ": 217, "kleitman": [217, 219], "valenc": [217, 219], "mathemat": [217, 219, 227, 229, 231, 240], "1973": [217, 219], "w_0": 218, "w_1": 218, "ldot": 218, "w_u": [218, 232, 235], "w_v": [218, 232, 235], "sum_k": 218, "w_k": 218, "z": [218, 231, 232, 236], "mathcal": 218, "ne": 218, "uu": 218, "fan": [218, 232, 308], "chung": [218, 232], "lu": [218, 308], "ann": 218, "combinator": [218, 278], "145": 218, "2002": 218, "joel": 218, "miller": 218, "aric": [218, 232], "hagberg": [218, 232], "waw": [218, 232], "alan": 218, "friez": 218, "paul": 218, "horn": 218, "pawe\u0142": 218, "pra\u0142at": 218, "lnc": 218, "6732": 218, "115": 218, "havel": 219, "hakimi": 219, "networkxexcept": 219, "resort": 219, "496": 219, "506": 219, "1962": [219, 237, 238, 284], "d_m": 220, "uniform": [220, 232, 241], "networkxunfeas": 220, "moshen": 220, "bayati": 220, "jeong": 220, "han": 220, "kim": 220, "amin": 220, "saberi": 220, "algorithmica": 220, "58": 220, "860": 220, "910": 220, "s00453": 220, "009": 220, "9340": 220, "gn": [221, 284], "a_k": 221, "krapivski": [221, 222, 223, 226], "redner": [221, 222, 223], "066123": [221, 223], "gnc": 222, "growth": [222, 282], "036118": 222, "2005k": 222, "gnr": 223, "probabilii": 223, "self_loop": 224, "preferenti": 224, "proport": 224, "peterson": [224, 267], "nichola": 224, "bori": 224, "pittel": 224, "preprint": 224, "1311": 224, "5961": 224, "2013": [224, 244], "gamma": 225, "delta_in": 225, "delta_out": 225, "bia": 225, "bollob\u00e1": 225, "borg": 225, "chay": 225, "riordan": 225, "fourteenth": 225, "annual": 225, "symposium": 225, "132": [225, 240], "139": 225, "diverg": [226, 286], "retent": 226, "disallow": 226, "ispolatov": 226, "yuryev": 226, "061911": 226, "inclus": 227, "knudsen": 227, "michael": 227, "carsten": 227, "wiuf": 227, "markov": 227, "chain": 227, "1155": 227, "190836": 227, "radiu": [228, 233, 234, 235], "chordal": 229, "chord": [229, 243], "modulo": 229, "mildli": 229, "prime": [229, 231], "lubotzki": 229, "invari": 229, "birkh\u00e4us": 229, "verlag": 229, "basel": 229, "1994": 229, "marguli": 230, "gabber": 230, "galil": 230, "palei": 231, "pz": 231, "f_q": 231, "odd": 231, "bolloba": 231, "cambridg": 231, "theta": [232, 235], "po": [232, 233, 234, 235, 236], "p_dist": [232, 234], "geograph": [232, 235], "rectangular": [232, 236], "ge": [232, 236], "prone": 232, "le": [232, 236, 276], "euclidean": [232, 233, 234, 235, 236], "conceiv": 232, "apart": 232, "taxicab": [232, 236], "expovari": [232, 235], "masuda": 232, "miwa": 232, "konno": 232, "036108": 232, "milan": 232, "bradonji\u0107": 232, "allon": 232, "percu": 232, "giant": 232, "antoni": 232, "bonato": 232, "209": 232, "216": 232, "cube": [233, 234, 235, 253, 270], "kdtree": [233, 234, 235], "minkowski": [233, 234, 235], "infin": [233, 234, 235], "erd\u0151": [233, 234, 235], "r\u00e9nyi": [233, 234, 235], "twenti": 233, "2d": [233, 234, 235, 285, 288], "deviat": [233, 234, 235], "gauss": [233, 234, 235], "penros": [233, 234], "mathew": [233, 234], "soft": 234, "exp": [234, 236], "annal": 234, "2016": 234, "986": 234, "1028": 234, "summat": 235, "nodethr": 235, "cole": 235, "maclean": 235, "blog": 235, "thesi": [235, 241], "waxman": 236, "x_min": 236, "y_min": 236, "x_max": 236, "y_max": 236, "Their": 236, "incompat": [236, 297], "rout": 236, "multipoint": 236, "ieee": [236, 244, 245, 277, 282], "1988": 236, "1617": 236, "1622": 236, "harari": [237, 238, 286], "h_": [237, 238], "ceil": 237, "kn": 237, "hnm_harary_graph": 237, "weisstein": 237, "eric": 237, "mathworld": [237, 246, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 265], "wolfram": [237, 246, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 265], "hararygraph": 237, "proc": [237, 238, 242, 243, 284], "nat": [237, 238, 284], "acad": [237, 238, 284], "sci": [237, 238, 284], "1142": [237, 238, 284], "1146": [237, 238, 284], "floor": 238, "hkn_harary_graph": 238, "boesch": 238, "satyanarayana": 238, "suffel": 238, "reliabl": 238, "synthesi": 238, "99": [238, 316], "2009": [238, 278], "uniform_random_intersection_graph": [239, 240], "nikoletsea": 239, "raptopoulo": 239, "spiraki": 239, "icalp": 239, "\u0131az": 239, "karhum": 239, "aki": 239, "lepist": 239, "sannella": 239, "vol": [239, 282], "3142": 239, "lectur": 239, "1029": 239, "1040": 239, "godehardt": 240, "jaworski": 240, "electron": [240, 278], "singer": 241, "cohen": 241, "1995": 241, "phd": 241, "john": [241, 258], "hopkin": 241, "scheinerman": 241, "evolut": 241, "2000": 241, "156": 241, "nkk": [242, 243], "degree_seq": 242, "n_edges_add": 242, "li": [242, 245], "unsatur": 242, "proof": 242, "tillman": [242, 243, 245], "markopoul": [242, 243, 244, 245, 277], "butt": [242, 243, 277], "gjoka": [242, 243, 244, 245], "2k": [242, 243], "kdd": [242, 243], "seconnd": 243, "joint_degre": [244, 245], "diagon": [244, 260], "joint_degree_graph": 244, "kurant": 244, "5k": 244, "infocom": [244, 245, 277], "stanton": 244, "pinar": 244, "prescrib": 244, "experiment": [244, 292], "n_th": 246, "m_1": 246, "singleton": [246, 285], "m_2": 246, "m_i": 246, "mycielskian": 246, "m_": 246, "mycielskigraph": 246, "p_2": 246, "chromat": [247, 278], "2n": 247, "bigcup": 247, "nonisomporph": 248, "adjanc": 248, "matric": [248, 277], "nonisomorph": 249, "shift_list": 250, "cubic": [250, 253, 254, 257, 258, 264, 266, 267, 272], "lcf": [250, 252, 254, 256, 258, 264, 266], "lederberg": 250, "coxet": 250, "frucht": [250, 257], "hamiltonian": [250, 252, 257, 258, 261, 266, 272], "symmetri": [250, 257], "dodecahedral_graph": 250, "desargues_graph": 250, "heawood_graph": 250, "pappus_graph": 250, "s1": 250, "sk": 250, "v_current": 250, "shiftlist": 250, "heawood": [250, 258], "lcfnotat": 250, "bull": 251, "planar": [251, 254, 255, 257], "pendant": 251, "leg": 251, "chv\u00e1tal": 252, "370": 252, "chv": 252, "c3": [252, 264, 265], "a1tal_graph": 252, "chvatalgraph": 252, "platon": [253, 256, 261, 265, 269, 271], "skeleton": [253, 256, 270, 271], "hypercub": 253, "solid": [253, 270, 271], "aris": 253, "desargu": 254, "desarguesgraph": 254, "kite": [255, 262], "diamondgraph": 255, "dodecahedr": 256, "dodecahedron": 256, "regular_dodecahedron": 256, "dodecahedralgraph": 256, "fruchtgraph": 257, "cage": 258, "perci": 258, "nonplanar": 258, "girth": 258, "heawoodgraph": 258, "win": [258, 267], "tue": [258, 267], "nl": [258, 267], "aeb": [258, 267], "housegraph": [259, 260], "pentatop": 260, "icosahedr": 261, "icosahedron": 261, "icosahedralgraph": 261, "krackhardt": 262, "andr": 262, "beverlei": 262, "carol": 262, "dian": 262, "fernando": 262, "garth": 262, "heather": 262, "ik": 262, "jane": 262, "polit": 262, "landscap": 262, "cognit": 262, "administr": 262, "quarterli": 262, "342": [262, 285], "369": 262, "2307": 262, "2393394": 262, "jstor": 262, "june": 262, "1990": 262, "graph_descript": 263, "ltype": 263, "adjacencylist": 263, "from_dict_of_list": 263, "from_edgelist": 263, "xlist": 263, "c_4": 263, "w2": 263, "vk": 263, "wk": 263, "vj": 263, "wj": 263, "moebiu": 264, "kantor": 264, "m\u00f6biu": 264, "petersen": [264, 267], "b6biu": 264, "93kantor_graph": 264, "octahedr": 265, "octahedron": 265, "shake": 265, "hi": [265, 275, 284], "her": 265, "partner": 265, "handshak": 265, "cocktail": 265, "octahedralgraph": 265, "tur": 265, "a1n_graph": 265, "special_cas": 265, "pappu": 266, "juliu": 267, "counterexampl": [267, 272], "bridgeless": 267, "colour": 267, "drg": 267, "maze": 268, "sedgewick": 268, "3rd": 268, "tetrahedr": 269, "k4": 269, "w4": 269, "grpah": 269, "tetrahedron": [269, 271, 272], "truncat": [270, 271, 272, 277], "archimedean": [270, 271], "octagon": 270, "triangular": 270, "truncated_cub": 270, "coolmath": 270, "polyhedra": 270, "hexagon": 271, "equilater": 271, "truncated_tetrahedron": 271, "tutt": 272, "polyhedr": 272, "tait": 272, "conjectur": 272, "polyhedron": 272, "multipli": 272, "davi": 273, "southern": 273, "women": 273, "gardner": 273, "1941": 273, "south": 273, "chicago": 273, "il": 273, "florentin": 274, "breiger": 274, "philippa": 274, "pattison": 274, "cumul": 274, "dualiti": 274, "septemb": 274, "zachari": 275, "karat": 275, "club": 275, "mr": [275, 278], "offic": 275, "wayn": 275, "fission": 275, "anthropolog": 275, "452": 275, "473": 275, "1977": 275, "coappear": 276, "charact": [276, 281, 287], "novel": 276, "miser": 276, "knuth": 276, "1993": 276, "graphbas": 276, "combinatori": 276, "york": 276, "spectral": [277, 286], "forg": 277, "sgf": 277, "eigenstructur": 277, "synthes": 277, "sensit": 277, "percentag": 277, "telecommun": 277, "bernoulli": 277, "baldesi": 277, "1801": 277, "01715": 277, "karate_club_graph": 277, "sud": 278, "81": 278, "810": 278, "herzberg": 278, "murti": 278, "polynomi": 278, "am": 278, "708": 278, "717": 278, "sander": 278, "torsten": 278, "7pp": 278, "2529816": 278, "encyclopedia": 278, "dec": 278, "2019": 278, "letter": 279, "nil": 279, "arboresc": 279, "downward": 279, "synthet": 279, "trie": 279, "recov": [279, 292], "pr\u00fcfer": 280, "from_prufer_sequ": 280, "forest_str": 280, "triad_nam": 281, "003": 281, "012": 281, "021d": 281, "021u": 281, "021c": 281, "111d": 281, "111u": 281, "030t": 281, "030c": 281, "120d": 281, "120u": 281, "120c": 281, "triadic_censu": 281, "10000": 282, "autonom": [282, 284], "elmokashfi": 282, "tier": 282, "mid": 282, "adv": 282, "bidirect": 282, "peer": 282, "commerci": 282, "agreement": 282, "kvalbein": 282, "dovroli": 282, "bgp": 282, "1250": 282, "1261": 282, "octob": 282, "reweight": 283, "mathematician": 284, "frank": 284, "incoming_graph_data": [285, 288], "default_label": [285, 288], "to_networkx_graph": 285, "110": 285, "protect": 285, "bracket": 285, "shortcut": 285, "nbrsdict": 285, "persion": 285, "miscellan": 285, "__contains__": 285, "__getitem__": 285, "adj_dict": 285, "atlasview": 285, "__iter__": 285, "niter": 285, "__len__": 285, "nnode": 285, "u_of_edg": 285, "v_of_edg": 285, "ebunch_to_add": 285, "preced": 285, "wn2898": 285, "node_for_ad": 285, "nodes_for_ad": 285, "hello": 285, "k3": 285, "attrdict": 285, "behav": 285, "idiom": 285, "foovalu": 285, "adj_it": 285, "nbrdict": 285, "adjlist_inner_dict_factori": 285, "neighbordict": 285, "adjlist_outer_dict_factori": 285, "adjlistdict": 285, "clear_edg": 285, "deepcopi": 285, "fresh": [285, 294], "__class__": 285, "degreeview": 285, "nd_view": 285, "edge_attr_dict_factori": 285, "neighborattrdict": 285, "edge_subgraph": 285, "edgeview": 285, "edgedataview": 285, "ddict": 285, "get_edge_data": 285, "edge_dict": 285, "safe": 285, "graph_attr_dict_factori": 285, "graph_cache_factori": 285, "keyerror": 285, "edge_ind": 285, "data_dictionari": 285, "is_multigraph": 285, "corespond": 285, "nbunch_it": 285, "membership": 285, "exhaust": 285, "possibli": 285, "node_attr_dict_factori": 285, "nodeattrdict": 285, "node_dict_factori": 285, "nodedict": 285, "nodeview": 285, "nodedataview": 285, "nodedata": 285, "bar": 285, "Not": [285, 298], "nedg": 285, "Will": 285, "nodes_for_remov": 285, "set_edge_data": 285, "set_node_data": 285, "set_item": 285, "adjedgeattr": 285, "dd": 285, "nodeattr": 285, "to_undirected_class": 285, "taken": 285, "itertool": 285, "mg": 285, "nd_iter": 285, "outedgeview": 285, "in_edg": 285, "outedgedataview": 285, "has_predecessor": 285, "has_successor": 285, "indegreeview": 285, "inedgeview": 285, "outdegreeview": 285, "pred": 285, "succ": 285, "_convert_arrow_to_dynam": [286, 288], "atla": 286, "triad": 286, "mycielski": 286, "sudoku": 286, "edgetyp": 287, "utf": [287, 298], "filenam": [287, 298], "rb": 287, "bz2": 287, "uncompress": 287, "whitespac": 287, "obsolet": 287, "write_edgelist": 287, "fh": 287, "textlin": 287, "parse_edgelist": 287, "read_adjlist": 287, "marker": 287, "v_0": 288, "v_1": 288, "implicit": 288, "add_label": 289, "eval": 289, "talk": 291, "output_to_cli": [291, 308], "person_id": [291, 298], "400": 291, "preemptiv": 292, "ifnotpres": 292, "512mi": 292, "etcd_addr": 292, "etcd_listening_client_port": 292, "2379": 292, "etcd_listening_peer_port": 292, "2380": 292, "k8s_vineyard_imag": 292, "vineyardcloudn": 292, "4gi": 292, "1gi": 292, "4mi": 292, "2mi": 292, "k8s_coordinator_pod_node_selector": 292, "k8s_engine_pod_node_selector": 292, "dangling_timeout_second": 292, "localhost": [292, 318], "deregist": 292, "256mi": 292, "5gi": 292, "__enter__": 292, "__exit__": 292, "exc_typ": 292, "exc_valu": 292, "exc_tb": 292, "unregist": 292, "default_config_fil": 292, "gs_config_path": 292, "overwrit": [292, 298], "burstabl": 292, "qo": 292, "preempt": 292, "fallback": 292, "bundl": 292, "etcd01": 292, "etcd02": 292, "etcd03": 292, "2gi": 292, "tinyurl": 292, "3nx6k7ph": 292, "bucket": [292, 308], "path1": 292, "path2": 292, "persistentvolumeclaim": [292, 298], "claimnam": 292, "kill": 292, "heartbeat": 292, "dangl": 292, "kube_config": 292, "load_kube_config": 292, "eg": 292, "config_fil": 292, "client_configur": 292, "persist_config": 292, "current_context": 292, "gcp": 292, "refresh": 292, "reject": 292, "lost": 292, "resource_nam": 292, "sigint": 292, "sigterm": 292, "signal": 292, "engine_config": 292, "node_label": 292, "recreat": 292, "run_fetch": 292, "lock": 292, "describl": 293, "maxwel": 294, "binlog": 294, "buildgartfrag": 294, "etcd_endpoint": 294, "gartfrag": 294, "etcd_client": 294, "make_shar": 294, "mpi_comm_world": 294, "schema_kei": 294, "gart_schema_p": 294, "to_str": 294, "edge_config_str": 294, "as_str": 294, "gart_blob_m": 294, "_p": 294, "config_str": 294, "edge_config": 294, "inner_vertices_it": 294, "elabel": [294, 299], "edge_it": 294, "hive": 296, "coo": [296, 318], "yml": [296, 298], "ordered_by_sourc": 296, "ordered_by_dest": 296, "load_from_gar": 296, "graph_yaml_path": 296, "navig": 297, "broader": 297, "ffi": 297, "agnost": 297, "grin_": 297, "partitioned_graph": 297, "edge_type_nam": 297, "boundari": 297, "sync_properti": 297, "grin_partitioned_graph": 297, "grin_partit": 297, "grin_graph": 297, "grin_get_local_graph_from_partit": 297, "grin_edge_typ": 297, "etyp": 297, "grin_get_edge_type_by_nam": 297, "grin_vertex_type_list": 297, "src_vtype": 297, "grin_get_src_types_from_edge_typ": 297, "dst_vtype": 297, "grin_get_dst_types_from_edge_typ": 297, "src_vtypes_num": 297, "grin_get_vertex_type_list_s": 297, "dst_vtypes_num": 297, "grin_vertex_typ": 297, "grin_get_vertex_type_from_list": 297, "grin_vertex_properti": 297, "dst_vp": 297, "grin_get_vertex_property_by_nam": 297, "grin_null_vertex_properti": 297, "NOT": 297, "grin_vertex_property_t": 297, "dst_vpt": 297, "grin_get_vertex_property_table_by_typ": 297, "grin_datatyp": 297, "dst_vp_dt": 297, "grin_get_vertex_property_data_typ": 297, "grin_vertex_list": 297, "__src_vl": 297, "grin_get_vertex_list": 297, "_src_vl": 297, "grin_select_type_for_vertex_list": 297, "src_vl": 297, "grin_select_master_for_vertex_list": 297, "src_vl_num": 297, "grin_get_vertex_list_s": 297, "grin_vertex": 297, "grin_get_vertex_from_list": 297, "ifdef": 297, "grin_trait_select_edge_type_for_adjacent_list": 297, "grin_adjacent_list": 297, "_adj_list": 297, "grin_get_adjacent_list": 297, "grin_direct": 297, "adj_list": 297, "grin_select_edge_type_for_adjacent_list": 297, "adj_lsit": 297, "endif": 297, "al_sz": 297, "grin_get_adjacent_list_s": 297, "ifndef": 297, "grin_edg": 297, "grin_get_edge_from_adjacent_list": 297, "grin_get_edge_typ": 297, "grin_equal_edge_typ": 297, "grin_get_neighbor_from_adjacent_list": 297, "grin_get_value_from_vertex_property_t": 297, "grin_vertex_ref": 297, "uref": 297, "grin_get_vertex_ref_for_vertex": 297, "recogin": 297, "u_master_partit": 297, "grin_get_master_partition_from_vertex_ref": 297, "send_valu": 297, "fragment_group_id": [297, 299], "get_partitioned_graph_by_object_id": 297, "local_partit": 297, "grin_get_local_partition_list": 297, "pnum": 297, "grin_get_partition_list_s": 297, "grin_get_partition_from_list": 297, "fold": [297, 316], "disclaim": 297, "sacrif": 297, "boilerpl": 297, "ineffici": 297, "enorm": 297, "grin_assume_all_vertex_property_local_complet": 297, "grin_assume_master_vertex_property_local_complet": 297, "grin_assume_by_type_all_vertex_property_local_complet": 297, "grin_assume_by_type_master_vertex_property_local_complet": 297, "assumpt": 297, "wider": 297, "undefin": 297, "tell": 297, "granular": 297, "grin_frag": 297, "storagespecif": 297, "vertexhandl": 297, "goe": 297, "grin_edge_list": 297, "grin_partition_list": 297, "grin_enable_": 297, "_list_arrai": 297, "vertexlist": 297, "grin_enable_vertex_list_arrai": 297, "vl": 297, "idx": 297, "sz": 297, "caller": 297, "_list_iter": 297, "grin_enable_vertex_list_iter": 297, "grin_vertex_list_iter": 297, "grin_get_vertex_list_begin": 297, "grin_get_next_vertex_list_it": 297, "vli": 297, "grin_is_vertex_list_end": 297, "grin_get_vertex_from_it": 297, "grin_get_vertex_type_by_nam": 297, "vtype": 297, "grin_vertex_property_list": 297, "grin_get_vertex_properties_by_nam": 297, "vprop": 297, "vpl": 297, "seperatedli": 297, "with_vertex_label": 297, "with_edge_label": 297, "facili": 297, "recogn": [297, 298], "grin_serialize_vertex_ref": 297, "grin_deserialize_to_vertex_ref": 297, "grin_get_vertex_from_vertex_ref": 297, "vref": 297, "recgon": 297, "reciev": 297, "borrow": 297, "vertexcut": 297, "centur": 297, "edgecut": 297, "repect": 297, "judgement": 297, "columnar": 298, "gear": 298, "compromis": 298, "timestamp": 298, "strict": 298, "foward": 298, "usernam": 298, "password": 298, "ingestor": [298, 306], "multitud": 298, "exemplifi": 298, "cat": [298, 306], "said": 298, "grpc_port": 298, "gremlin_port": 298, "grpc_endpoint": 298, "conn": 298, "add_vertex_label": 298, "v_label_nam": 298, "add_primary_kei": 298, "pk_name": 298, "prop_name_1": 298, "prop_name_2": 298, "add_edge_label": 298, "e_label_nam": 298, "prop_name_3": 298, "add_properti": 298, "gremlinpython": 298, "xmln": 298, "xsi": 298, "w3": 298, "xmlschema": 298, "schemaloc": 298, "xsd": 298, "modelvers": 298, "gremlinexampl": 298, "codehau": 298, "mojo": 298, "classpath": 298, "mainclass": 298, "compliancelevel": 298, "killaft": 298, "addcontactpoint": 298, "credenti": 298, "valuemap": [298, 316], "println": 298, "javascript": 298, "npm": 298, "catch": 298, "data_load": 298, "load_tool": 298, "xzvf": 298, "alic": 298, "bob": 298, "person_knows_person": 298, "person_id_1": 298, "20210611151923": 298, "seper": 298, "mapreduc": 298, "ldbc_sampl": [298, 316, 318], "data_output": 298, "person_0_0": [298, 313, 318], "propertiescolmap": 298, "person_knows_person_0_0": [298, 313, 318], "srclabel": 298, "dstlabel": 298, "srcpkcolmap": 298, "dstpkcolmap": 298, "mb": 298, "columnidx": 298, "propertynam": 298, "_success": 298, "xxxxx": 298, "sst": 298, "00000": 298, "00001": 298, "00002": 298, "9000": [298, 318], "insert_vertex": 298, "vertexrecordkei": 298, "insert_vertic": 298, "update_vertex_properti": 298, "delel": 298, "delete_vertex": 298, "vertex_pk": 298, "delete_vertic": 298, "insert_edg": 298, "edgerecordkei": 298, "update_edge_properti": 298, "delete_edg": 298, "edge_pk": 298, "avaiabl": 298, "remote_flush": 298, "snapshot_id": 298, "primary_kei": 298, "src_vertex_kei": 298, "dst_vertex_kei": 298, "provis": 298, "persistentvolum": 298, "lapp": 298, "reinstal": 298, "pv_name": 298, "pod_nam": [298, 306, 311], "logback": 298, "log4r": 298, "period": 298, "arrowfragmentgroup": 299, "spread": 299, "ipc": 299, "docket": 299, "vineyard_ipc_socket": 299, "string_oid": 299, "local_vertex_map": 299, "ipcclient": 299, "writeout": 299, "nb": 299, "fragmentloc": 299, "instance_id": 299, "gettotalnodesnum": 299, "labeltyp": 299, "vlabel": 299, "vertex_data_t": 299, "edge_data_t": 299, "consolid": [299, 306], "willing": 300, "implic": 300, "polymorph": 300, "instant": 300, "aka": 300, "applciat": 300, "pygrap": [300, 301], "frist": 300, "from_numpi": 300, "bind_sssp1": 300, "delai": 300, "screen": 300, "bind_sssp2": 300, "vertex_bal": 301, "vcut": 301, "ecut": 301, "syoov": 306, "79b44f7b58": 306, "ctmqb": 306, "10m": 306, "9m53": 306, "9m46": 306, "6dd67c65fc": 306, "gn4mb": 306, "15334625083466732": 306, "33d": 306, "kubetl": 306, "\u7684\u56fe\u5206\u6790\u5f15\u64ce\u7ee7\u627f\u4e86": 308, "\u8be5\u7cfb\u7edf\u4e8e": 308, "\u4e0a\u9996\u6b21\u63d0\u51fa\u5e76\u83b7\u5f97\u6700\u4f73\u8bba\u6587\u5956": 308, "\u4e0e\u4ee5\u5f80\u7684\u7cfb\u7edf\u7684\u4e0d\u540c": 308, "\u652f\u6301\u5c06\u4e32\u884c\u56fe\u7b97\u6cd5\u81ea\u52a8\u5e76\u884c\u5316": 308, "\u5728": [308, 309, 310, 311, 312, 315, 316, 317, 318], "\u4e2d": [308, 310, 311, 312, 318], "\u53ea\u9700\u8fdb\u884c\u5f88\u5c0f\u7684\u66f4\u6539\u5373\u53ef\u8f7b\u677e\u5730\u5c06\u4e32\u884c\u7b97\u6cd5\u5373\u63d2\u5373\u7528": 308, "\u4f7f\u5176\u5e76\u884c\u5316\u7684\u8fd0\u884c\u5728\u5206\u5e03\u5f0f\u73af\u5883": 308, "\u5e76\u9ad8\u6548\u5730\u5904\u7406\u5927\u89c4\u6a21\u56fe\u6570\u636e": 308, "\u9664\u4e86\u6613\u4e8e\u7f16\u7a0b\u5916": 308, "\u8fd8\u88ab\u8bbe\u8ba1\u4e3a\u9ad8\u6548\u4e14\u53ef\u62d3\u5c55\u7684\u7cfb\u7edf": 308, "\u53ef\u7075\u6d3b\u5e94\u5bf9\u73b0\u5b9e\u4e2d\u56fe\u5e94\u7528\u591a\u53d8\u7684\u89c4\u6a21": 308, "\u591a\u6837\u6027\u548c\u590d\u6742\u6027": 308, "\u56fe\u5206\u6790\u5f15\u64ce\u5185\u7f6e\u4e86\u8bb8\u591a\u5e38\u7528\u7684\u56fe\u5206\u6790\u7b97\u6cd5": 308, "\u5305\u62ec\u8fde\u901a\u6027\u5206\u6790\u7b97\u6cd5": 308, "\u8def\u5f84\u5206\u6790\u7b97\u6cd5": 308, "\u793e\u533a\u68c0\u6d4b\u548c\u4e2d\u5fc3\u5ea6\u8ba1\u7b97\u7b49\u7c7b\u578b": 308, "\u5185\u7f6e\u7b97\u6cd5\u53ef\u4ee5\u5728\u56fe\u4e0a\u8f7b\u677e\u8c03\u7528": 308, "\u521b\u5efa\u9ed8\u8ba4": 308, "\u5e76\u52a0\u8f7d\u5c5e\u6027\u56fe": 308, "\u5927\u591a\u6570\u5185\u7f6e\u7b97\u6cd5\u53ea\u652f\u6301\u5728\u7b80\u5355\u56fe\u4e0a\u8fdb\u884c\u8ba1\u7b97": 308, "\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5148\u901a\u8fc7\u9876\u70b9\u548c\u8fb9\u7684\u7c7b\u578b\u6765\u751f\u6210\u4e00\u4e2a\u7b80\u5355\u56fe": 308, "result_lpa": 308, "result_sssp": 308, "\u5185\u7f6e\u7b97\u6cd5\u7684\u5b8c\u6574\u5217\u8868\u5982\u4e0b\u6240\u793a": 308, "\u5177\u4f53\u67d0\u4e2a\u7b97\u6cd5\u662f\u5426\u652f\u6301\u5c5e\u6027\u56fe\u4e5f\u5728\u5176\u6587\u6863\u8fdb\u884c\u4e86\u63cf\u8ff0": 308, "\u7b97\u6cd5\u7684\u652f\u6301\u5217\u8868\u4f1a\u968f\u7740\u4e0d\u65ad\u589e\u52a0\u6301\u7eed\u66f4\u65b0\u4e2d": 308, "\u5f53\u5b8c\u6210\u4e00\u6b21\u56fe\u8ba1\u7b97": 308, "\u8ba1\u7b97\u7ed3\u679c\u4f1a\u88ab\u5305\u88c5\u6210": 308, "\u7c7b": [308, 318], "\u4fdd\u5b58\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4\u7684\u5185\u5b58\u4e2d": 308, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u5c06\u7ed3\u679c\u4f20\u5230\u5ba2\u6237\u7aef\u8fdb\u884c\u5904\u7406": 308, "\u6216\u662f\u5199\u5165\u4e91\u4e2d\u67d0\u4f4d\u7f6e\u6216\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf": 308, "\u652f\u6301\u7528\u6237\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u6765\u83b7\u53d6\u7ed3\u679c\u6570\u636e": 308, "\u8f6c\u5316\u4e3a\u76f8\u5e94\u6570\u636e\u7c7b\u578b": 308, "\u6216\u5199\u5165": 308, "\u6216\u672c\u5730\u76ee\u5f55\u4e2d": 308, "pod\u4e2d\u7684\u672c\u5730\u76ee\u5f55": 308, "\u6216\u5199\u5165\u672c\u5730\u7684": 308, "lpa_result": 308, "\u6570\u636e\u7ed3\u6784": 308, "\u6b64\u5916": [308, 312], "\u5982": [308, 311, 314, 316], "\u5feb\u901f\u4e0a\u624b": [308, 314], "\u4e2d\u6240\u793a": 308, "\u7528\u6237\u53ef\u4ee5\u5c06\u8ba1\u7b97\u7ed3\u679c\u52a0\u56de\u5230\u8be5\u56fe\u6570\u636e\u4e2d\u4f5c\u4e3a\u9876\u70b9": 308, "\u7684\u65b0\u5c5e\u6027": 308, "\u5217": 308, "\u5c06\u7ed3\u679c\u4f5c\u4e3a\u65b0\u5217\u6dfb\u52a0\u56de\u5c5e\u6027\u56fe": 308, "\u5217\u540d\u4e3a": 308, "\u5e76\u751f\u6210\u4e00\u5f20\u65b0\u56fe": 308, "new_graph": [308, 313], "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u5668": 308, "\u6765\u5b9a\u4e49\u5c06\u8ba1\u7b97\u7ed3\u679c\u4e2d\u7684\u54ea\u4e9b\u90e8\u5206\u5199\u56de\u56fe\u6570\u636e": 308, "\u9009\u62e9\u5668\u6307\u5b9a\u4e86\u8ba1\u7b97\u7ed3\u679c\u4e2d\u7684\u54ea\u4e00\u90e8\u5206\u4f1a\u88ab\u5904\u7406": 308, "\u7c7b\u4f3c\u7684": 308, "\u56fe\u6570\u636e\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u88ab\u5904\u7406\u6570\u636e\u7684\u4e00\u90e8\u5206": 308, "\u4f8b\u5982\u9876\u70b9id": 308, "\u6211\u4eec\u4e3a\u9009\u62e9\u5668\u4fdd\u7559\u4e86\u4e09\u4e2a\u5173\u952e\u5b57": 308, "\u4ee3\u8868\u7ed3\u679c": 308, "\u5206\u522b\u4ee3\u8868\u9876\u70b9\u548c\u8fb9": 308, "\u4ee5\u4e0b\u662f\u7ed3\u679c\u5904\u7406\u4e2d\u9009\u62e9\u5668\u7684\u4e00\u4e9b\u793a\u4f8b": 308, "\u83b7\u53d6\u9876\u70b9\u4e0a\u7684\u7ed3\u679c": 308, "\u8f6c\u6362\u4e3a": [308, 317], "\u4f7f\u7528\u9876\u70b9\u7684": 308, "\u4f5c\u4e3a\u540d\u4e3a": 308, "\u7684\u5217": 308, "df_vd": 308, "\u4f7f\u7528\u7ed3\u679c\u5217\u4f5c\u4e3a\u540d\u4e3a": 308, "df_result": 308, "property0": 308, "label0": 308, "\u5bf9\u4e8e\u5c5e\u6027\u56fe\u7684\u7ed3\u679c": 308, "\u4f5c\u4e3av\u548ce\u7684\u6807\u7b7e\u9009\u62e9\u5668": 308, "\u5c06": [308, 317], "\u9876\u70b9\u7684": 308, "\u4f5c\u4e3a": [308, 309, 318], "\u4f7f\u7528\u5199\u5728\u5e26\u6709label0\u7684\u9876\u70b9\u4e0a\u7684property0\u4f5c\u4e3a": 308, "gs_data": 308, "\u53ef\u4ee5\u67e5\u770b": 308, "\u83b7\u53d6\u66f4\u591a\u7ec6\u8282": 308, "\u5982\u679c\u5185\u7f6e\u7b97\u6cd5\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42": 308, "\u7528\u6237\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u7b97\u6cd5": 308, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7": 308, "\u5728\u7eaf": 308, "\u6a21\u5f0f": [308, 316], "\u4e0b\u4f7f\u7528": 308, "\u7f16\u7a0b\u6a21\u578b\u7f16\u5199\u7b97\u6cd5": 308, "\u4e3a\u4e86\u5b9e\u73b0\u81ea\u5df1\u7684\u7b97\u6cd5": 308, "\u7528\u6237\u9700\u8981\u5b9e\u73b0\u6b64\u7c7b": 308, "\u5982\u4ee3\u7801\u6240\u793a": 308, "\u7528\u6237\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u4ee5": 308, "\u88c5\u9970\u7684\u7c7b": 308, "\u5e76\u63d0\u4f9b\u4e09\u4e2a\u4e32\u884c": 308, "\u56fe\u7b97\u6cd5\u51fd\u6570": 308, "\u51fd\u6570\u7528\u4e8e\u8bbe\u7f6e\u7b97\u6cd5\u521d\u59cb\u72b6\u6001": 308, "\u51fd\u6570\u5b9a\u4e49\u7b97\u6cd5\u7684\u5c40\u90e8\u8ba1\u7b97": 308, "\u51fd\u6570\u5b9a\u4e49\u5bf9\u5206\u533a\u6570\u636e\u7684\u589e\u91cf\u8ba1\u7b97": 308, "\u4e0e": 308, "\u76f8\u5173\u7684\u5b8c\u6574": 308, "\u53ef\u4ee5\u53c2\u8003": 308, "\u4ee5\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5": 308, "\u4e3a\u4f8b": [308, 312], "\u7528\u6237\u5728": 308, "\u6a21\u578b\u4e2d\u5b9a\u4e49\u7684": 308, "\u7b97\u6cd5\u53ef\u5982\u4e0b\u6240\u793a": 308, "\u521d\u59cb\u5316\u6bcf\u4e2a\u9876\u70b9\u7684\u8ddd\u79bb": 308, "\u4ececontext\u4e2d\u83b7\u53d6\u6e90\u9876\u70b9": 308, "\u5728\u6e90\u9876\u70b9\u6240\u5728\u5206\u533a\u4e2d": 308, "\u8fd0\u884cdijkstra\u7b97\u6cd5\u4f5c\u4e3a\u90e8\u5206\u8ba1\u7b97": 308, "\u4f7f\u7528\u8fb9\u4e0a\u7b2c\u4e09\u5217\u6570\u636e\u4f5c\u4e3a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb": 308, "\u589e\u91cf\u8ba1\u7b97": 308, "\u66f4\u65b0\u6700\u77ed\u8ddd\u79bb": 308, "\u7528\u6237\u4ec5\u9700\u8981\u8bbe\u8ba1\u548c\u5b9e\u73b0\u5355\u5206\u533a\u7684\u4e32\u884c\u7b97\u6cd5": 308, "\u800c\u4e0d\u9700\u8981\u8003\u8651\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\u7684\u5206\u533a\u901a\u4fe1\u548c\u6d88\u606f\u4f20\u9012": 308, "\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b": [308, 318], "\u7ecf\u5178\u7684": 308, "\u7b97\u6cd5\u53ca\u5176\u589e\u91cf\u7248\u672c\u5c31\u53ef\u4ee5\u7528\u4e8e\u5728\u96c6\u7fa4\u4e0a\u7684\u5927\u89c4\u6a21\u56fe\u6570\u636e\u8ba1\u7b97": 308, "\u9664\u4e86\u57fa\u4e8e\u5b50\u56fe\u7684": 308, "\u6a21\u578b\u4e4b\u5916": 308, "\u4e5f\u652f\u6301\u4ee5\u9876\u70b9\u4e3a\u4e2d\u5fc3\u7684": 308, "\u7f16\u7a0b\u6a21\u578b": 308, "\u60a8\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u4ee5\u4e0b\u7b97\u6cd5\u7c7b\u6765\u5728": 308, "\u6a21\u578b\u4e2d\u5f00\u53d1\u7b97\u6cd5": 308, "\u6a21\u578b\u4e0d\u540c": 308, "\u7b97\u6cd5\u7c7b\u7684\u88c5\u9970\u5668\u4e3a": 308, "\u8be5\u7c7b\u65b9\u6cd5\u662f": 308, "\u5b9a\u4e49\u5728\u9876\u70b9\u4e0a\u7684": 308, "\u800c\u4e0d\u540c\u4e8e": 308, "\u6a21\u578b\u4e2d\u5b9a\u4e49\u5728\u56fe\u5206\u533a\u4e0a": 308, "\u8fd8\u662f\u4ee5": 308, "\u6a21\u578b\u4e0b\u7684\u7b97\u6cd5\u5982\u4e0b\u6240\u793a": 308, "\u88c5\u9970\u5668": 308, "\u5b9a\u4e49\u9876\u70b9\u6570\u636e\u548c\u6d88\u606f\u6570\u636e\u7684\u7c7b\u578b": 308, "\u652f\u6301\u7528\u6237\u5728\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u901a\u8fc7": 308, "\u4e0a\u7684\u63a5\u53e3\u6765\u4f7f\u7528\u5b9a\u4e49\u5728": 308, "\u4e2d\u7684": [308, 309, 311], "\u51fd\u6570": [308, 316], "\u4e0b\u5217\u4ee3\u7801": 308, "\u4f1a\u88ab\u7ffb\u8bd1\u6210\u5982\u4e0b\u7684": 308, "\u4ee3\u7801\u4ee5\u9ad8\u6548\u5730\u6267\u884c": 308, "\u7528\u6237\u9700\u8981\u5728\u5b9a\u4e49\u7b97\u6cd5\u540e\u8c03\u7528\u7b97\u6cd5": 308, "\u52a0\u8f7d\u81ea\u5df1\u7684\u7b97\u6cd5": 308, "\u5728\u56fe\u4e0a\u8fd0\u884c\u81ea\u5df1\u7684\u7b97\u6cd5": 308, "\u5f97\u5230\u8ba1\u7b97\u7ed3\u679c": 308, "\u8fd9\u91cc": [308, 309, 318], "\u662f\u4e0e": 308, "\u76f8\u5bf9\u5e94\u7684": 308, "\u5728\u5f00\u53d1\u548c\u6d4b\u8bd5\u4e4b\u540e": 308, "\u60a8\u53ef\u4ee5\u901a\u8fc7": 308, "\u65b9\u6cd5\u5c06\u7b97\u6cd5\u4fdd\u5b58\u6210": 308, "\u5305\u4ee5\u5907\u5c06\u6765\u4f7f\u7528": 308, "\u5728\u6b64\u4e4b\u540e": 308, "\u60a8\u53ef\u4ee5\u4ece": 308, "\u5305\u52a0\u8f7d\u81ea\u5b9a\u4e49\u7684\u7b97\u6cd5": 308, "\u4ecegar\u5305\u4e2d\u52a0\u8f7d\u81ea\u5df1\u7684\u7b97\u6cd5": 308, "\u652f\u6301\u7528\u6237\u7f16\u5199java\u7684pi": 308, "\u5e76\u4e14\u8fd0\u884c\u5728\u56fe\u5206\u6790\u5f15\u64ce\u4e0a": 308, "\u6211\u4eec\u9996\u5148\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u6f14\u793a\u5982\u679c\u5728graphscop": 308, "\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8fd0\u884c\u4e00\u4e2ajava\u7684\u56fe\u7b97\u6cd5": 308, "\u7136\u540e\u6211\u4eec\u5c06\u5c55\u793a\u5982\u679c\u5b9e\u73b0\u5e76\u8fd0\u884c\u81ea\u5b9a\u4e49\u7684java\u56fe\u7b97\u6cd5": 308, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7ecf\u5178\u56fe\u5206\u6790\u7b97\u6cd5\u7684\u793a\u4f8b\u5b9e\u73b0": 308, "\u901a\u8fc7\u4e0b\u9762\u5c55\u793a\u7684\u4f8b\u5b50": 308, "\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u5728graphscope\u7684\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8bd5\u7740\u8fd0\u884c\u4ed6\u4eec": 308, "\u9996\u5148\u4f60\u9700\u8981\u4ece\u4e0b\u8f7d\u6211\u4eec\u63d0\u4f9b\u7684\u793a\u4f8bapp\u7684\u5408\u96c6": 308, "\u65e0\u9700\u4efb\u4f55\u66f4\u6539\u4f60\u5c31\u53ef\u4ee5\u5728": 308, "graphscope\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8fd0\u884c\u8fd9\u4e9b\u793a\u4f8b\u7b97\u6cd5": 308, "\u7136\u540e\u4f60\u9700\u8981\u6253\u5f00graphscope\u7684python": 308, "\u5c1d\u8bd5\u8f7d\u56fe\u5e76\u4e14\u8fd0\u884c\u4e00\u4e2a\u7b80\u5355\u7684bfs\u7684\u7b97\u6cd5": 308, "dist_0": 308, "\u4e3a\u4e86\u7f16\u5199java\u5b9e\u73b0\u7684\u56fe\u7b97\u6cd5": 308, "\u7528\u6237\u9700\u8981\u501f\u52a9\u4e8e": 308, "\u8bf7\u53c2\u8003": [308, 316], "\u6765\u5c06": 308, "\u5b89\u88c5\u5230\u4f60\u7684\u672c\u5730\u73af\u5883\u4e0a": 308, "\u5b89\u88c5\u5b8c\u6210\u540e": 308, "\u4f60\u9700\u8981\u5c06": 308, "\u7684\u4f9d\u8d56\u6dfb\u52a0\u5230\u4f60\u7684maven\u9879\u76ee\u4f9d\u8d56\u4e2d": 308, "\u7528\u6237\u5e94\u5f53\u6ce8\u610f\u5728": 308, "\u7684\u4f9d\u8d56\u914d\u7f6e\u4e0a\u5e94\u5f53\u6dfb\u52a0": 308, "\u6765\u786e\u4fdd": 308, "\u6240\u6709\u5fc5\u8981\u7684\u4f9d\u8d56\u90fd\u88ab\u5305\u62ec\u5230": 308, "\u7528\u6237\u5728\u5f00\u53d1\u81ea\u5df1\u7b97\u6cd5\u7684\u8fc7\u7a0b\u4e2d": 308, "\u53ef\u80fd\u4f1a\u7528\u5230\u5176\u4ed6\u7684\u7b2c\u4e09\u65b9jar\u5305": 308, "\u4e3a\u4e86\u89e3\u51b3\u4f9d\u8d56jar\u5305\u7684\u7248\u672c\u95ee\u9898": 308, "\u7528\u6237\u9700\u8981\u4f7f\u7528\u786e\u4fdd\u81ea\u5df1\u751f\u6210\u7684jar\u5305\u5305\u542b\u6240\u6709\u4f9d\u8d56\u7684jar\u5305": 308, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528maven\u63d2\u4ef6": 308, "pluge": 308, "\u7528\u6237\u5728\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5\u65f6": 308, "\u7528\u6237\u9700\u8981\u6309\u7167": 308, "\u6765\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7b97\u6cd5": 308, "\u5e76\u4e14\u9700\u8981\u6839\u636e\u9700\u8981\u7684app\u7c7b\u578b\u6765\u5b9e\u73b0": 308, "\u4e2d\u76f8\u5e94\u7684\u63a5\u53e3\u5e76\u4e14\u5b9e\u73b0\u63a5\u53e3": 308, "\u5982\u679c\u7528\u6237\u671f\u671b\u7b97\u6cd5\u8fd0\u884c\u5728\u5c5e\u6027\u56fe\u4e0a": 308, "\u90a3\u4e48\u5b9a\u4e49\u7684app\u5e94\u8be5\u5b9e\u73b0\u63a5\u53e3": 308, "defaultpropertyappbas": 308, "\u6216": [308, 309, 310, 311, 314, 316], "parallelpropertyappbas": 308, "\u5982\u679c\u7528\u6237\u671f\u671b\u7b97\u6cd5\u8fd0\u884c\u5728\u7b80\u5355\u56fe\u4e0a": 308, "\u90a3\u4e48\u5b9a\u4e49\u7684app\u5e94\u8be5\u5b9e\u73b0\u501f\u53e3": 308, "defaultappbas": 308, "\u540c\u65f6\u7528\u6237\u9700\u8981\u5b9e\u73b0app\u76f8\u5e94\u7684": 308, "\u6765\u4fdd\u5b58\u8de8superstep\u7684\u6570\u636e": 308, "\u5176\u5e94\u8be5\u662f": 308, "defaultpropertycontextbas": 308, "parallelpropertycontextbas": 308, "defaultcontextbas": 308, "\u6216\u8005": [308, 310, 317, 318], "\u7684\u7684\u5b50\u7c7b": 308, "\u901a\u8fc7\u7ee7\u627f": 308, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5230\u4e0d\u540c\u7c7b\u578b\u7684context\u6240\u62e5\u6709\u7684\u7279\u6027": 308, "\u901a\u8fc7\u8fd9\u4e24\u79cdcontext\u63d0\u4f9b\u7684\u501f\u53e3\u6240\u5b58\u50a8\u7684\u6570\u636e\u5728\u7a0b\u5e8f\u6267\u884c\u5b8c\u4e4b\u540e\u53ef\u4ee5\u88ab\u7528\u6237\u8bbf\u95ee": 308, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5728python": 308, "client\u4e2dquery\u8fd4\u56de\u7684context": 308, "\u5bf9\u8c61\u6765\u8bbf\u95ee\u8fd9\u4e9b\u6570\u636e": 308, "\u8fd9\u91cc\u6211\u4eec\u5c55\u793a\u4e00\u4e2a\u7b80\u5355\u7684app\u7684\u5b9e\u73b0": 308, "\u5b83\u6240\u505a\u7684\u4e8b\u60c5\u53ea\u662f\u5bf9\u4e00\u4e2a\u7b80\u5355\u56fe\u7684\u6240\u6709\u8fb9\u8fdb\u884c\u4e86\u904d\u5386": 308, "\u8be5app\u5bf9\u5e94\u7684context\u7684\u5b9e\u73b0": 308, "\u5728\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684\u7b97\u6cd5\u4e4b\u540e": 308, "\u7528\u6237\u53ef\u80fd\u4f1a\u60f3\u5728\u63d0\u4ea4\u5230graphscope\u7684\u56fe\u5206\u6790\u5f15\u64ce\u8fd0\u884c\u524d": 308, "\u5148\u5728\u672c\u5730\u9a8c\u8bc1\u7b97\u6cd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027": 308, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u811a\u672c\u6765\u6ee1\u8db3\u7528\u6237\u7684": 308, "\u8fd9\u4e2a\u9700\u6c42": 308, "\u4e3a\u4e86\u9a8c\u8bc1\u7b97\u6cd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027": 308, "\u7528\u6237\u53ea\u9700\u8981\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4": 308, "graphscope_repo": 308, "app_class_nam": 308, "java_path": 308, "path_to_your_jar": 308, "param_str": 308, "params_str": 308, "\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684java": 308, "app\u7684\u7c7b\u7684\u5168\u540d": 308, "\u6307\u5411\u5305\u542b\u7528\u6237\u60f3\u8981\u8fd0\u884c\u7684\u7b97\u6cd5\u7684jar\u5305": 308, "\u53ef\u4ee5\u901a\u8fc7": 308, "\u6765\u5236\u5b9acontext\u521d\u59cb\u5316\u9700\u8981\u7684\u53c2\u6570": 308, "\u4f8b\u5982\u5bf9\u4e8ebfs\u7b97\u6cd5\u53ef\u4ee5\u4f7f\u7528": 308, "\u6765\u6807\u8bb0\u521d\u59cb\u8282\u70b9\u662f6": 308, "\u5e76\u884c\u7ebf\u7a0b\u6570\u4e3a1": 308, "\u53ef\u4ee5": 308, "\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6765\u8fd0\u884ctravers": 308, "jar_path": 308, "\u5728\u672c\u5730\u9a8c\u8bc1\u81ea\u5b9a\u4e49\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u4e4b\u540e": 308, "\u4f60\u53ef\u4ee5\u901a\u8fc7graphscope\u7684python": 308, "client\u6765\u63d0\u4ea4\u8fd0\u884cjar\u5305": 308, "\u4e00\u4e2ajar\u5305\u4e2d\u53ef\u4ee5\u5305\u542b\u4e0d\u540c\u7684app\u5b9e\u73b0": 308, "\u7528\u6237\u53ef\u4ee5\u591a\u6b21\u63d0\u4ea4\u76f8\u540c\u7684jar\u5305\u4f46\u662f\u8fd0\u884c\u4e0d\u540c": 308, "\u7684app": 308, "\u8bf7\u8010\u5fc3\u7b49\u5f85\u8ba1\u7b97\u5b8c\u6210": 308, "\u5f53\u8ba1\u7b97\u5b8c\u6210\u540e": 308, "\u4f60\u53ef\u4ee5\u901a\u8fc7": [308, 309, 311], "\u5bf9\u8c61\u6765\u83b7\u53d6\u8ba1\u7b97\u7ed3\u679c": 308, "\u76f8\u5173\u8bba\u6587": 308, "wenfei": 308, "jingbo": 308, "xu": 308, "wenyuan": 308, "yu": 308, "jingren": 308, "zhou": 308, "xiaojian": 308, "luo": 308, "qiang": 308, "yin": 308, "cao": 308, "ruiqi": 308, "tod": [308, 314], "yinghui": 308, "wu": 308, "jiaxin": 308, "jiang": 308, "43rd": 308, "zeyu": 308, "zheng": 308, "bohan": 308, "chao": 308, "tian": 308, "\u4ee5": [309, 312, 313, 315, 318], "\u955c\u50cf\u7684\u65b9\u5f0f\u5206\u53d1\u5f15\u64ce\u7b49\u7ec4\u4ef6": 309, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": [309, 311], "\u5982\u679c\u8fd0\u884c": 309, "\u7684\u96c6\u7fa4\u673a\u5668\u4e0a\u4e0d\u5b58\u5728\u8be5\u955c\u50cf": 309, "\u5219\u4f1a\u62c9\u53d6\u5bf9\u5e94\u7248\u672c\u7684\u6700\u65b0\u955c\u50cf": 309, "\u56e0\u6b64": [309, 310, 312], "\u8bf7\u786e\u4fdd\u60a8\u7684\u96c6\u7fa4\u53ef\u4ee5\u8bbf\u95ee\u516c\u5171\u955c\u50cf\u4ed3\u5e93": 309, "\u4f1a\u8bdd": [309, 312], "\u5ba2\u6237\u7aef": [309, 310, 314], "\u5b83\u5c01\u88c5": 309, "\u7ba1\u7406\u7740": 309, "\u5f15\u64ce\u7684\u5404\u79cd\u7ec4\u4ef6": 309, "\u5e76": 309, "\u8fde\u63a5": 309, "\u64cd\u4f5c\u7528\u6237\u5728": 309, "\u96c6\u7fa4\u4e0a\u7684": 309, "\u5f15\u64ce": 309, "\u5982\u4e0a\u8ff0\u4ee3\u7801\u6240\u793a": 309, "\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u901a\u8fc7\u4f1a\u8bdd\u6765\u62c9\u8d77\u4e00\u4e2a": 309, "\u5b9e\u4f8b": 309, "\u7528\u6237\u6709\u65f6\u9700\u8981\u4f7f\u7528\u5728\u672c\u673a\u78c1\u76d8\u4e0a\u7684\u6570\u636e": 309, "\u6211\u4eec\u63d0\u4f9b\u4e86\u9009\u9879\u4f9b\u7528\u6237\u5c06\u672c\u673a\u7684\u76ee\u5f55\u6302\u8f7d\u5230\u96c6\u7fa4\u4e0a": 309, "\u5047\u5b9a\u6211\u4eec\u8981\u5c06\u672c\u673a\u7684": 309, "\u7684\u8def\u5f84\u6302\u8f7d\u5230": 309, "\u8def\u5f84": [309, 318], "\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b\u4e00\u4e2a\u5b57\u5178": 309, "\u7136\u540e": [309, 317], "\u5c06\u5176\u901a\u8fc7": 309, "\u7684\u53c2\u6570\u4f20\u7ed9\u4f1a\u8bdd\u7684\u6784\u9020\u51fd\u6570": 309, "\u6ce8\u610f\u8fd9\u91cc\u7684\u672c\u673a\u8def\u5f84\u662f\u76f8\u5bf9\u4e8e": 309, "\u8282\u70b9\u7684\u6982\u5ff5": 309, "\u5982\u679c\u4f60\u662f\u901a\u8fc7": 309, "\u521b\u5efa\u7684\u96c6\u7fa4": 309, "\u90a3\u4e48\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u76ee\u5f55\u62f7\u8d1d\u5230": 309, "\u7684\u865a\u62df\u4e3b\u673a\u7684\u76f8\u5e94\u8def\u5f84\u4e0a": 309, "\u6216\u8005\u5728\u914d\u7f6e\u4e2d\u5c06\u8def\u5f84\u63d0\u524d\u6302\u8f7d\u5230\u865a\u62df\u4e3b\u673a\u4e0a\u53bb": 309, "\u67e5\u770b\u66f4\u591a\u7ec6\u8282": 309, "\u4e0a\u7684\u4e00\u4e2a": 309, "\u5b9e\u4f8b\u5305\u542b": 309, "\u4e00\u4e2a\u8fd0\u884c": 309, "\u7684": [309, 310, 311, 314, 319], "\u8d1f\u8d23\u5143\u4fe1\u606f\u7684\u540c\u6b65": 309, "\u8d1f\u8d23\u5bf9": 309, "\u5f15\u64ce\u5bb9\u5668\u7684\u7ba1\u7406": 309, "\u4ee5\u53ca\u4e00\u7ec4\u8fd0\u884c": 309, "\u5f15\u64ce\u5bb9\u5668\u7684": 309, "replicaset": 309, "\u5bf9\u8c61": 309, "\u540e\u7aef\u670d\u52a1\u7684\u5165\u53e3": 309, "\u901a\u8fc7": [309, 312], "\u63a5\u6536\u6765\u81ea": 309, "\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u548c\u547d\u4ee4": 309, "\u5e76\u7ba1\u7406\u7740\u56fe\u5206\u6790\u5f15\u64ce": 309, "\u56fe\u67e5\u8be2\u5f15\u64ce": 309, "\u56fe\u5b66\u4e60\u5f15\u64ce": [309, 314], "\u7684\u751f\u547d\u5468\u671f": 309, "\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u914d\u7f6e\u5f15\u64ce\u955c\u50cf\u5730\u5740\u7b49\u53c2\u6570": 309, "\u8bf7\u5728": 309, "\u4e2d\u53c2\u9605\u66f4\u591a\u7684\u8be6\u7ec6\u4fe1\u606f": 309, "\u83b7\u53d6\u5e76\u6dfb\u52a0\u4ed3\u5e93\u4fe1\u606f": 309, "\u5b89\u88c5": [309, 314], "release_nam": 309, "\u68c0\u6d4bgraphscope\u670d\u52a1\u53ef\u7528\u6027": 309, "\u53c2\u8003": 309, "\u8be5\u94fe\u63a5": 309, "\u4ee5\u901a\u8fc7python\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u9884\u542f\u52a8\u7684graphscope\u670d\u52a1": 309, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u5728aws\u6216\u963f\u91cc\u4e91\u4e0a\u521b\u5efa": 309, "\u96c6\u7fa4\u7684\u4ea4\u4e92\u5f0f\u811a\u672c": 309, "\u8fd9\u4e00\u811a\u672c\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u4f7f\u7528\u5df2\u6709\u7684\u96c6\u7fa4\u6216\u521b\u5efa\u65b0\u7684": 309, "\u96c6\u7fa4": [309, 311, 315], "\u7136\u540e\u8f93\u51fa\u96c6\u7fa4\u7684\u914d\u7f6e\u6587\u4ef6": 309, "\u7528\u6cd5\u5982\u4e0b": 309, "\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7": 309, "launch_clust": 309, "\u83b7\u5f97\u66f4\u8be6\u7ec6\u7684\u5e2e\u52a9\u4fe1\u606f": 309, "pyyaml": 309, "boto3": 309, "your_access_key_id": 309, "your_access_key_secret": 309, "region": 309, "your_region_nam": 309, "kube_config_path": 309, "alibabacloud_cs20151215": 309, "alibabacloud_ecs20140526": 309, "alibabacloud_vpc20160428": 309, "your_region_id": 309, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u5728\u672c\u5730\u5b89\u88c5graphscope\u76f8\u5173\u4f9d\u8d56\u7684\u811a\u672c": 309, "\u8be5\u811a\u672c\u53ef\u4ee5\u8fd0\u884c\u5728": 309, "\u5e73\u53f0\u4e0a": 309, "\u4e3b\u8981\u7684\u7528\u6cd5\u5982\u4e0b": 309, "\u83b7\u53d6\u66f4\u8be6\u7ec6\u7684\u5e2e\u52a9\u4fe1\u606f": 309, "\u5f00\u53d1\u76f8\u5173\u4f9d\u8d56": 309, "\u672c\u5730\u90e8\u7f72": 309, "\u7684\u80cc\u540e\u6709\u4e00\u7fa4\u6d3b\u8dc3\u7684\u5de5\u7a0b\u4eba\u5458\u548c\u7814\u7a76\u4eba\u5458\u56e2\u961f\u6765\u63a8\u8fdb\u65e5\u5e38\u7684\u5f00\u53d1\u548c\u7ef4\u62a4": 310, "\u6211\u4eec\u70ed\u5ff1\u6b22\u8fce\u6765\u81ea\u5f00\u6e90\u793e\u533a\u7684": 310, "\u4e3a\u6539\u5584\u8be5\u9879\u76ee\u6240\u505a\u7684\u4efb\u4f55\u8d21\u732e": 310, "\u9075\u5faa": 310, "\u7684\u5f00\u6e90\u534f\u8bae": 310, "\u9700\u8981\u4e00\u4e9b\u7b2c\u4e09\u65b9\u7684\u5de5\u5177\u548c\u4f9d\u8d56": 310, "\u4e3a\u4e86\u8ba9\u5f00\u53d1\u8005\u66f4\u5bb9\u6613\u4e0a\u624b": 310, "\u6211\u4eec\u63d0\u4f9b\u4e86\u5b89\u88c5\u4e86\u6240\u9700\u4f9d\u8d56\u7684": 310, "\u955c\u50cf": 310, "\u5f00\u53d1\u8005\u9700\u8981\u901a\u8fc7": 310, "\u7684\u547d\u4ee4\u4ece\u6211\u4eec\u7684\u5f00\u6e90\u4ee3\u7801\u5e93": 310, "\u4e2d\u83b7\u5f97\u6700\u65b0\u7248\u7684\u4ee3\u7801": 310, "\u5728\u6b64\u57fa\u7840\u4e0a\u505a\u5f00\u53d1\u6216\u4ee3\u7801\u7684\u66f4\u6539": 310, "\u7136\u540e\u5728\u4ee3\u7801\u7684\u6839\u76ee\u5f55": 310, "\u6267\u884c": 310, "10240m": 310, "minitest": 310, "unittest": 310, "\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u6784\u5efa\u547d\u4ee4\u5f00\u53d1\u5e76\u6d4b\u8bd5\u5176\u4e2d\u67d0\u4e00\u4e2a\u6a21\u5757": 310, "\u6bd4\u5982": [310, 318], "\u56fe\u5206\u6790\u5f15\u64ce": [310, 314], "\u6a21\u5757": 310, "\u7136\u540e\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6784\u5efa": 310, "\u8be5\u547d\u4ee4\u4f1a\u5f00\u59cb": 310, "\u7684\u6784\u5efa\u8fc7\u7a0b": 310, "\u8be5\u8fc7\u7a0b\u5c06\u5728": 310, "\u7684\u5bb9\u5668\u4e2d\u6784\u5efa\u5f53\u524d\u6e90\u4ee3\u7801": 310, "\u5e76\u5c06\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u590d\u5236\u5230": 310, "\u8fd0\u884c\u65f6\u57fa\u7840\u955c\u50cf": 310, "\u751f\u6210\u7684\u955c\u50cf\u5c06\u88ab\u6807\u8bb0": 310, "\u4e3a": [310, 311, 312], "shortsha": 310, "\u5ba2\u6237\u7aef\u4e0d\u5305\u542b\u5728\u8be5\u955c\u50cf\u4e2d": 310, "\u6784\u5efa\u4e5f\u4e0e\u5f15\u64ce\u6709\u6240\u4e0d\u540c": 310, "\u5982\u679c\u5f00\u53d1\u8005\u6b63\u5728\u5f00\u53d1": 310, "\u5ba2\u6237\u7aef\u5e76\u4e14\u672a\u4fee\u6539\u5f15\u64ce\u76f8\u5173\u7684\u6587\u4ef6": 310, "\u90a3\u4e48": 310, "\u955c\u50cf\u662f\u4e0d\u9700\u8981\u91cd\u5efa\u7684": 310, "\u5f00\u53d1\u8005\u53ea\u9700\u8981\u5728\u672c\u5730\u91cd\u65b0\u5b89\u88c5": 310, "\u5ba2\u6237\u7aef\u5373\u53ef": 310, "\u6d4b\u8bd5\u65b0\u6784\u5efa\u7684\u955c\u50cf": 310, "\u7528\u6237\u53ef\u4ee5\u624b\u52a8\u6253\u5f00\u4e00\u4e2a\u4f1a\u8bdd": 310, "\u6307\u5b9a\u7528\u65b0\u7f16\u8bd1\u7684\u955c\u50cf": 310, "\u4e0b\u7684": 310, "\u5206\u53d1\u5305\u662f\u57fa\u4e8e": 310, "manylinux2014": 310, "\u73af\u5883\u4e0b\u6784\u5efa\u7684": 310, "install_prefix": 310, "\u4e0b\u5206\u522b\u6784\u5efa": 310, "\u7531\u4e8e": 310, "\u4e0b\u7684\u6784\u5efa\u8fc7\u7a0b\u662f\u5728\u672c\u5730": 310, "\u975edocker": 310, "\u4e2d\u8fdb\u884c": 310, "\u56e0\u6b64\u9700\u8981\u672c\u5730\u4e8b\u5148\u5b89\u88c5": 310, "\u7684\u4f9d\u8d56": 310, "\u57fa\u4e8e\u5f53\u524d": 310, "\u73af\u5883\u4e0b\u7684": 310, "\u7248\u672c\u6784\u5efa": 310, "\u9700\u8981\u6ce8\u610f\u7684\u662f": [310, 312], "\u5982\u679c\u4f60\u9700\u8981\u8be5\u5206\u53d1\u5305\u80fd\u652f\u6301\u4e0d\u540c\u7684": 310, "\u7248\u672c": [310, 315], "\u4f60\u53ef\u80fd\u9700\u8981\u901a\u8fc7": 310, "conda": 310, "pyenv": 310, "\u5b89\u88c5\u591a\u4e2a": 310, "\u7684\u7248\u672c": 310, "\u98ce\u683c": 310, "\u5982\u679c\u4f60\u7684\u4ee3\u7801\u6ca1\u6709\u901a\u8fc7ci\u7684\u98ce\u683c\u68c0\u67e5": 310, "\u4f60\u53ef\u4ee5\u4f7f\u7528": 310, "\u683c\u5f0f\u5316\u4f60\u7684\u4ee3\u7801": 310, "\u6211\u4eec\u6536\u96c6\u4e86\u7528\u6237\u4f7f\u7528": 311, "\u8fc7\u7a0b\u4e2d\u7684\u5e38\u89c1\u95ee\u9898": 311, "\u5982\u679c\u5728\u4e0b\u9762\u7684\u5217\u8868\u4e2d\u4ecd\u7136\u65e0\u6cd5\u627e\u5230\u60a8\u9047\u5230\u7684\u95ee\u9898\u7684\u7b54\u6848": 311, "\u53ef\u901a\u8fc7\u63d0\u4ea4": 311, "\u6216\u8005\u5728": 311, "\u4e0e\u6211\u4eec\u8054\u7cfb": 311, "\u8fd0\u884c": 311, "\u7cfb\u7edf\u9700\u8981\u7684\u6700\u5c0f\u8d44\u6e90\u662f\u591a\u5c11": 311, "\u5728\u901a\u8fc7": 311, "\u5ba2\u6237\u7aef\u4f7f\u7528": 311, "\u8fc7\u7a0b\u4e2d": 311, "\u9700\u8981\u7684\u6700\u4f4e": 311, "\u7248\u672c\u662f3": 311, "\u6700\u4f4epip\u7248\u672c\u662f": 311, "\u7cfb\u7edf\u652f\u6301\u4ee5\u5355\u673a\u6216\u5206\u5e03\u5f0f\u7684\u65b9\u5f0f\u90e8\u7f72": 311, "\u5355\u673a\u60c5\u51b5\u4e0b": 311, "\u8d44\u6e90\u9700\u6c42": 311, "\u6838": 311, "\u5185\u5b58": 311, "\u5728\u652f\u6301\u4ee5\u4e0b\u73af\u5883\u4e2d\u8fd0\u884c": 311, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u90e8\u7f72": 311, "\u9700\u8981\u7528\u6237\u62e5\u6709\u4e00\u4e2a": 311, "\u7684\u73af\u5883\u4e0a\u6d4b\u8bd5\u901a\u8fc7": 311, "\u662f\u5426\u5f3a\u4f9d\u8d56": 311, "\u652f\u6301\u5728\u5355\u673a\u6a21\u5f0f\u5b89\u88c5\u8fd0\u884c": 311, "\u7684\u9884\u7f16\u8bd1\u5305\u4ee5": 311, "\u7684\u5f62\u5f0f\u5206\u53d1": 311, "\u53ef\u4ee5\u7528": 311, "\u5feb\u901f\u5b89\u88c5": 311, "\u5982\u4f55\u5982\u67e5\u770b": 311, "\u7684\u8fd0\u884c\u65f6\u4fe1\u606f": 311, "\u8fd0\u884c\u4e0d\u6253\u5370\u65e5\u5fd7\u4fe1\u606f": 311, "\u53c2\u6570\u5f00\u542f\u65e5\u5fd7\u8f93\u51fa": 311, "\u5982\u679c\u60a8\u7684graphscope\u8fd0\u884c\u5728k8s\u96c6\u7fa4\u4e0a": 311, "\u53ef\u4ee5\u4f7f\u7528": [311, 317], "\u6765\u67e5\u770b\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001": 311, "\u540c\u65f6\u5982\u679c\u4f60\u53ef\u4ee5\u8bbf\u95ee": 311, "\u7684\u78c1\u76d8": 311, "\u4e5f\u53ef\u5728": 311, "\u76ee\u5f55\u4e0b\u67e5\u770b\u8fd0\u884c\u65f6\u65e5\u5fd7": 311, "\u4e3a\u4ec0\u4e48\u5728\u4f7f\u7528": 311, "\u547d\u4ee4\u65f6": 311, "\u53d1\u73b0\u4e86\u4e00\u4e9b\u591a\u4f59\u7684": 311, "\u5bf9\u4e8e\u5176\u4e2d\u4e00\u4e9b\u5931\u8d25\u7684": 311, "\u53ea\u80fd\u901a\u8fc7\u624b\u52a8\u6267\u884c\u547d\u4ee4\u5982": 311, "\u8fdb\u884c\u5220\u9664": 311, "\u901a\u5e38\u60c5\u51b5\u4e0b": 311, "\u8be5\u95ee\u9898\u51fa\u73b0\u5728\u4f7f\u7528": 311, "\u90e8\u7f72": [311, 314], "\u65f6": [311, 312], "\u4f9d\u8d56\u4e00\u4e9b\u6743\u9650\u6765\u5220\u9664\u8fd0\u884c\u65f6\u7684\u8d44\u6e90": 311, "\u5982\u679c\u7528\u6237\u6ca1\u6709\u6b63\u786e\u8bbe\u7f6e": 311, "\u7b49\u6743\u9650": 311, "\u53ef\u80fd\u4e0d\u80fd\u6b63\u786e\u56de\u6536\u5206\u914d\u7684\u8d44\u6e90": 311, "\u8be6\u7ec6\u7ec6\u8282\u53ef\u4ee5\u67e5\u770b": 311, "\u662f\u56fe\u6570\u636e\u5e93\u5417": 311, "\u5e76\u4e0d\u662f\u4e00\u4e2a\u56fe\u6570\u636e\u5e93": 311, "\u4f46\u5176\u5305\u542b\u4e00\u4e2a\u6301\u4e45\u56fe\u5b58\u50a8\u7684\u7ec4\u4ef6": 311, "\u53ef\u4ee5\u88ab\u7528\u4f5c\u6570\u636e\u5e93": 311, "\u4e0a\u7684\u517c\u5bb9\u6027\u5982\u4f55": 311, "\u76ee\u524d": [311, 318], "graphscope\u652f\u6301gremlin\u8bed\u8a00\u4e2d\u7684\u5927\u90e8\u5206\u67e5\u8be2\u7b97\u5b50": 311, "\u53ef\u901a\u8fc7": 311, "\u8be5\u6587\u6863": 311, "\u67e5\u770b\u8be6\u7ec6\u7684\u652f\u6301\u4fe1\u606f": 311, "\u770b\u8d77\u6765\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5361\u4f4f\u4e86": 311, "\u5982\u679c": 311, "\u770b\u8d77\u6765\u50cf\u5361\u4f4f": 311, "\u53ef\u80fd\u7684\u539f\u56e0\u6709": 311, "\u5728\u4f1a\u8bdd\u7684\u62c9\u8d77\u9636\u6bb5": 311, "\u5982\u679c\u5f53\u524d\u7f51\u7edc\u4e0b\u8f7d\u955c\u50cf\u8fc7\u6162": 311, "\u6216\u5f53\u524d\u96c6\u7fa4\u8d44\u6e90\u65e0\u6cd5\u6ee1\u8db3\u8bf7\u6c42\u7684\u8d44\u6e90\u65f6": 311, "\u4f1a\u9020\u6210\u5361\u4f4f\u7684\u73b0\u8c61": 311, "\u8f7d\u56fe\u9636\u6bb5": 311, "\u53ef\u80fd\u4f1a\u7531\u4e8e\u6570\u636e\u91cf\u8fc7\u5927\u9020\u6210\u77ed\u6682\u7684\u5361\u4f4f\u73b0\u8c61": 311, "\u5728\u6267\u884c\u56fe\u7b97\u6cd5\u5206\u6790\u9636\u6bb5": 311, "\u6216\u8005\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7b97\u6cd5": 311, "\u7f16\u8bd1\u6784\u5efa\u5e94\u7528\u7684\u5e93\u65f6\u4f1a\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4": 311, "\u4e3a\u4ec0\u4e48\u8f7d\u56fe\u65f6\u62a5\u627e\u4e0d\u5230\u6587\u4ef6\u7684\u9519\u8bef": 311, "\u8fd9\u901a\u5e38\u53d1\u751f\u5728\u4ee5\u96c6\u7fa4\u65b9\u5f0f\u90e8\u7f72\u8fd0\u884c": 311, "\u6570\u636e\u6587\u4ef6\u5fc5\u987b\u8981\u5bf9": 311, "\u53ef\u89c1": 311, "\u4f60\u4e5f\u8bb8\u9700\u8981\u6302\u8f7d\u78c1\u76d8\u6216\u8005\u4f7f\u7528\u4e91\u5b58\u50a8\u63d0\u4f9b\u5546\u7684\u670d\u52a1": 311, "\u5982\u679c\u4f60\u7684\u96c6\u7fa4\u662f\u4f7f\u7528": 311, "\u90e8\u7f72\u7684": 311, "\u4f60\u5e94\u8be5\u9700\u8981\u8bbe\u7f6e": 311, "\u6765\u628a\u672c\u673a\u76ee\u5f55\u6302\u8f7d\u5230": 311, "\u865a\u62df\u7684": 311, "\u6709\u4ec0\u4e48\u533a\u522b": 311, "\u5982\u4f55\u8bbe\u7f6e": 311, "\u5bb9\u5668\u5206\u914d\u7684\u5185\u5b58": 311, "\u5b83\u5b58\u50a8\u7531": 311, "\u7ba1\u7406\u7684\u539f\u59cb\u6570\u636e\u7684": 311, "\u7684\u5143\u4fe1\u606f": 311, "\u4f8b\u5982\u5f62\u72b6": 311, "\u540d\u79f0\u7b49": 311, "\u7531\u4e8e\u5143\u6570\u636e\u6bd4\u6570\u636e\u96c6\u5c0f\u5f97\u591a": 311, "\u56e0\u6b64\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u914d\u7f6e\u5c31\u8db3\u591f\u4e86": 311, "\u5b83\u76f8\u5f53\u4e8e": 311, "\u5b58\u50a8\u6570\u636e\u96c6\u7684\u5185\u5b58": 311, "\u6211\u4eec\u53d1\u73b0\u5c06\u5176\u8bbe\u7f6e\u4e3a\u6570\u636e\u96c6\u5728\u78c1\u76d8\u4e0a\u7684\u5927\u5c0f\u7684": 311, "\u500d\u901a\u5e38\u662f\u4e00\u4e2a\u5408\u7406\u7684\u503c": 311, "\u5bb9\u5668\u7684\u5185\u5b58\u5927\u5c0f": 311, "\u4e00\u822c\u5c06\u5176\u8bbe\u7f6e\u4e3a": 311, "\u7684\u540c\u6837\u5927\u5c0f": 311, "\u5bfc\u81f4\u5728": 311, "\u73af\u5883\u4e0b\u5b89\u88c5": 311, "\u5931\u8d25\u7684\u539f\u56e0\u53ef\u80fd\u6709\u54ea\u4e9b": 311, "\u7f16\u8bd1": 311, "\u5931\u8d25": 311, "\u6765\u5c1d\u8bd5\u4f7f\u7528\u7cfb\u7edf\u5b89\u88c5\u7684": 311, "\u8be6\u60c5\u53ef\u53c2\u8003": 311, "\u4f60\u53ef\u4ee5\u6839\u636e": 311, "\u6b64\u6559\u7a0b": 311, "\u6765\u6e90\u7801\u7f16\u8bd1": 311, "\u6216\u5c1d\u8bd5\u901a\u8fc7": 311, "\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898": 311, "\u4e0a\u5206\u914d": 311, "\u65f6\u9047\u5230\u4e86": 311, "\u95ee\u9898": 311, "\u5982\u4f55\u89e3\u51b3": 311, "\u901a\u5e38\u5f53\u4f7f\u7528": 311, "\u7684\u65b9\u5f0f\u5b89\u88c5": 311, "\u4f1a\u62a5": 311, "\u9519\u8bef": [311, 313], "\u6211\u4eec\u901a\u8fc7": 311, "\u6765\u67e5\u770b\u65e5\u5fd7": 311, "\u6b64\u65f6\u65e5\u5fd7\u663e\u793a": 311, "\u901a\u5e38\u6709\u4e24\u79cd\u89e3\u51b3\u65b9\u5f0f": 311, "\u5feb\u901f\u7684\u65b9\u5f0f\u662f\u5728\u6240\u6709\u76f8\u5173\u7684": 311, "\u76ee\u5f55\u4e0a\u4f7f\u7528": 311, "\u4f46\u4e0d\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528": 311, "\u4f18\u96c5\u7684\u65b9\u6cd5\u662f\u9996\u5148\u521b\u5efa": 311, "\u7528\u6237\u548c\u7528\u6237\u7ec4": 311, "\u7136\u540e\u5c06": 311, "\u4e0a\u7684\u8bbf\u95ee\u6743\u9650\u6388\u4e88\u76f8\u5173nfs\u76ee\u5f55": 311, "\u4e3a\u4ec0\u4e48\u5728": 311, "\u96c6\u7fa4\u4e0a\u62c9\u8d77": 311, "\u5b9e\u4f8b\u65f6": 311, "\u4ea7\u751f\u8d85\u65f6\u5f02\u5e38": 311, "\u5927\u591a\u6570\u60c5\u51b5\u4e0b": 311, "\u8d85\u65f6\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u5728": 311, "\u96c6\u7fa4\u62c9\u8d77": 311, "\u5b9e\u4f8b\u65f6\u9700\u8981\u4e0b\u8f7d\u5bf9\u5e94\u955c\u50cf": 311, "\u8fd9\u4e00\u6b65\u901a\u5e38\u9700\u8981\u51e0\u5206\u949f\u7684\u65f6\u95f4": 311, "\u9002\u5f53\u7684\u589e\u52a0\u8d85\u65f6\u7b49\u5f85\u65f6\u95f4\u6765\u89e3\u51b3\u8be5\u95ee\u9898": 311, "\u542f\u52a8graphscope\u65f6\u7531\u4e8e\u8fde\u63a5v6d": 311, "etcd\u7b49\u7ec4\u4ef6\u5931\u8d25\u800c\u5bfc\u81f4graphscope\u542f\u52a8\u5931\u8d25": 311, "\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u4f60\u6240\u4f7f\u7528\u7684\u673a\u5668": 311, "\u6216\u5bb9\u5668": 311, "\u6240\u5728\u7684\u4f01\u4e1a\u7f51\u7edc\u5185\u8981\u6c42\u76f8\u5e94\u7684\u4ee3\u7406\u8bbe\u7f6e\u65b9\u53ef\u6b63\u5e38\u4f7f\u7528\u7f51\u7edc": 311, "\u8fd9\u4e9b\u4ee3\u7406\u8bbe\u7f6e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u5730\u5740\u89e3\u6790\u4ee5\u53ca\u7aef\u53e3\u5360\u7528": 311, "\u4e3a\u907f\u514d\u7c7b\u4f3c\u60c5\u51b5": 311, "\u53ef\u5728\u73af\u5883\u53d8\u91cf": 311, "\u4e2d\u52a0\u5165graphscope\u76f8\u5173\u7684\u5730\u5740": 311, "\u4ee5\u53ca": [311, 318], "\u8bf7\u6ce8\u610f": 311, "no_proxy\u7684\u524d\u540e\u7f00\u89c4\u5219": 311, "unix": 311, "stackexchang": 311, "23452": 311, "\u5176\u4ed6\u95ee\u9898": 311, "\u60a8\u53ef\u4ee5\u63d0\u4ea4": 311, "\u63d0\u51fa\u4f60\u7684\u95ee\u9898": 311, "\u540c\u65f6": [311, 316], "\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528": 311, "\u505a\u4e3a\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": 312, "\u53ef\u4ee5\u5904\u7406\u56fe\u7684\u4ea4\u4e92\u5f0f\u67e5\u8be2": 312, "\u56fe\u5206\u6790\u548c\u56fe\u5b66\u4e60\u4efb\u52a1": 312, "\u5e76\u4e14\u5177\u6709\u6613\u4e8e\u4f7f\u7528": 312, "\u9ad8\u6027\u80fd\u548c\u826f\u597d\u7684\u53ef\u6269\u5c55\u6027\u7b49\u7279\u70b9": 312, "\u672c\u7ae0\u8282\u5c06\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u4ecb\u7ecd\u5982\u4f55\u57fa\u4e8e": 312, "\u4f7f\u7528": [312, 314, 317, 318, 319], "\u5e76\u5e2e\u52a9\u6570\u636e\u79d1\u5b66\u5bb6\u6765\u9ad8\u6548\u7684\u5206\u6790\u5927\u56fe": 312, "\u6570\u636e\u96c6": 312, "\u662f\u7531\u5fae\u8f6f\u5b66\u672f\u5173\u7cfb\u56fe": 312, "\u7684\u5b50\u96c6\u7ec4\u6210\u7684\u5f02\u6784\u56fe\u7f51\u7edc": 312, "\u8be5\u56fe\u4e2d\u5305\u542b4\u79cd\u7c7b\u578b\u7684\u5b9e\u4f53": 312, "\u5373\u8bba\u6587": 312, "\u4f5c\u8005": 312, "\u673a\u6784\u548c\u7814\u7a76\u9886\u57df": 312, "\u4ee5\u53ca\u8fde\u63a5\u4e24\u4e2a\u5b9e\u4f53\u7684\u56db\u79cd\u7c7b\u578b\u7684\u6709\u5411\u5173\u7cfb\u8fb9": 312, "\u6211\u4eec\u9700\u8981\u5904\u7406\u7684\u4efb\u52a1\u662f": 312, "\u7ed9\u51fa\u5f02\u6784\u7684": 312, "\u6570\u636e": 312, "\u5728\u8be5\u56fe\u4e0a\u9884\u6d4b\u6bcf\u7bc7\u8bba\u6587\u7684\u7c7b\u522b": 312, "\u8fd9\u662f\u4e00\u4e2a\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 312, "\u8be5\u4efb\u52a1\u53ef\u4ee5\u5f52\u7c7b\u5728\u5404\u4e2a\u9886\u57df": 312, "\u5404\u4e2a\u65b9\u5411\u6216\u7814\u7a76\u5c0f\u7ec4\u7684\u8bba\u6587": 312, "\u901a\u8fc7\u5bf9\u8bba\u6587\u5c5e\u6027\u548c\u5f15\u7528\u56fe\u4e0a\u7684\u7ed3\u6784\u4fe1\u606f\u5bf9\u8bba\u6587\u8fdb\u884c\u5206\u7c7b": 312, "\u5728\u8be5\u6570\u636e\u4e2d": 312, "\u6bcf\u4e2a\u8bba\u6587\u8282\u70b9\u5305\u542b\u4e86\u4e00\u4e2a\u4ece\u8bba\u6587\u6807\u9898": 312, "\u6458\u8981\u62bd\u53d6\u7684": 312, "\u7ef4": 312, "\u5411\u91cf\u4f5c\u4e3a\u8868\u5f81": 312, "\u8be5\u8868\u5f81\u662f\u7ecf\u8fc7": 312, "\u9884\u8bad\u7ec3\u63d0\u524d\u83b7\u53d6\u7684": 312, "\u800c\u7ed3\u6784\u4fe1\u606f\u662f\u5728\u4ee5\u4e0b\u8fc7\u7a0b\u4e2d\u5373\u65f6\u8ba1\u7b97\u7684": 312, "\u4e0a\u56fe\u8868\u793a\u4e86\u7528\u6237\u901a\u8fc7": 312, "\u5ba2\u6237\u7aef\u8c03\u7528": 312, "\u89e3\u51b3\u8be5\u95ee\u9898\u7684\u5de5\u4f5c\u6d41\u7a0b": 312, "\u6b65\u9aa4": 312, "\u5efa\u7acb\u4e00\u4e2a\u4f1a\u8bdd": 312, "\u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u7a7a\u95f4": 312, "\u5b9a\u4e49\u548c\u8f7d\u5165\u56fe": 312, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u56fe": 312, "\u6267\u884c\u56fe\u7b97\u6cd5\u505a\u56fe\u5206\u6790": 312, "\u6267\u884c\u57fa\u4e8e\u56fe\u6570\u636e\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1": 312, "\u7684\u7b2c\u4e00\u6b65": 312, "\u6211\u4eec\u9700\u8981\u5728": 312, "\u4e2d\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 312, "\u5bf9\u4e8e": [312, 315], "\u521b\u5efa\u4f1a\u8bdd\u9700\u8981\u4f7f\u7528": 312, "\u670d\u52a1\u7c7b\u578b": 312, "\u9ed8\u8ba4\u662f": 312, "\u53e6\u5916": [312, 318], "\u6ce8\u610f": [312, 315], "\u662f": 312, "\u4e3b\u673a\u4e0a\u7684\u8def\u5f84": 312, "\u5f53\u5728": 312, "\u4e0a\u4f7f\u7528": 312, "\u9700\u8981\u9996\u5148\u5c06\u6b64\u8def\u5f84\u52a0\u5165\u5230": 312, "\u7684\u5171\u4eab\u76ee\u5f55\u4e2d": 312, "\u901a\u5e38\u4e3a": 312, "\u66f4\u8be6\u7ec6\u7684\u6307\u5f15\u8bf7\u53c2\u770b": 312, "\u7684\u5efa\u7acb\u8fc7\u7a0b\u4e2d": 312, "\u9996\u9009\u4f1a\u5728\u80cc\u540e\u5c1d\u8bd5\u62c9\u8d77\u4e00\u4e2a": 312, "\u4f5c\u4e3a\u540e\u7aef\u5f15\u64ce\u7684\u5165\u53e3": 312, "\u8be5": 312, "\u8d1f\u8d23\u7ba1\u7406\u8be5\u6b21\u4f1a\u8bdd\u7684": 312, "\u6240\u6709\u8d44\u6e90": 312, "\u4ee5\u53ca\u4ea4\u4e92\u5f0f\u67e5\u8be2": 312, "\u56fe\u5b66\u4e60\u5f15\u64ce\u7684\u751f\u547d\u5468\u671f": 312, "\u540e\u7eed\u62c9\u8d77\u7684\u5176\u4ed6\u6bcf\u4e2a": 312, "\u90fd\u6709\u4e00\u4e2a": 312, "\u5b9e\u4f8b\u4f5c\u4e3a\u5185\u5b58\u7ba1\u7406\u5c42": 312, "\u5206\u5e03\u5f0f\u7684\u7ba1\u7406\u56fe\u6570\u636e": 312, "\u8f7d\u56fe": [312, 313, 314], "\u4ee5\u5c5e\u6027\u56fe": 312, "\u5efa\u6a21\u56fe\u6570\u636e": [312, 318], "\u5c5e\u6027\u56fe\u4e2d": 312, "\u70b9\u548c\u8fb9\u90fd\u6709\u4e00\u4e2a\u6807\u7b7e": 312, "\u4e0d\u540c\u7684\u6807\u7b7e\u6709\u4e0d\u540c\u7684\u5c5e\u6027": 312, "\u4e0b\u56fe\u5c55\u793a\u4e86\u5c5e\u6027\u56fe\u7684\u6a21\u578b": 312, "\u8be5\u56fe\u5177\u6709\u56db\u79cd\u9876\u70b9": 312, "\u5206\u522b\u6807\u8bb0\u4e3a": 312, "\u8bba\u6587": 312, "\u673a\u6784": 312, "\u7814\u7a76\u9886\u57df": 312, "\u6709\u56db\u79cd\u8fde\u63a5\u5b83\u4eec\u7684\u8fb9": 312, "\u6bcf\u79cd\u8fb9\u90fd\u6709\u4e00\u4e2a\u6807\u7b7e": 312, "\u5e76\u4e14\u8fb9\u7684\u4e24\u7aef\u9876\u70b9\u7684\u6807\u7b7e\u4e5f\u662f\u786e\u5b9a\u7684": 312, "\u5f15\u7528": 312, "\u8fd9\u79cd\u6807\u7b7e\u7684\u8fb9\u8fde\u63a5\u4e24\u4e2a": 312, "\u9876\u70b9": 312, "\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u6807\u8bb0\u4e3a": 312, "\u64b0\u5199": 312, "\u7684\u8fb9": [312, 318], "\u5b83\u8981\u6c42\u8be5\u8d77\u59cb\u70b9\u7684\u6807\u8bb0\u4e3a": 312, "\u7ec8\u6b62\u70b9\u7684\u6807\u8bb0\u4e3a": 312, "\u6240\u6709\u7684\u9876\u70b9": 312, "\u548c\u8fb9\u90fd\u53ef\u4ee5\u5177\u6709\u5c5e\u6027": 312, "\u9876\u70b9\u5177\u6709\u8bf8\u5982\u53d1\u5e03\u5e74\u4efd": 312, "\u4e3b\u9898\u6807\u7b7e\u7b49\u5c5e\u6027": 312, "\u8981\u5c06\u6b64\u56fe\u52a0\u8f7d\u5230": 312, "\u53ef\u4ee5\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0e": 312, "\u6570\u636e\u6587\u4ef6": 312, "\u7ed3\u5408\u4f7f\u7528": 312, "\u8bf7\u4e0b\u8f7d\u6570\u636e\u5e76\u5c06\u5176\u89e3\u538b\u7f29\u5230\u672c\u5730\u7684\u6302\u8f7d\u76ee\u5f55": 312, "\u5728\u672c\u4f8b\u4e2d\u4e3a": 312, "author_affiliated_with_institut": 312, "paper_has_topic_field_of_studi": 312, "hastop": 312, "paper_cites_pap": 312, "author_writes_pap": 312, "\u4e5f\u53ef\u901a\u8fc7\u6211\u4eec\u63d0\u4f9b\u7684\u5185\u7f6e\u6570\u636e\u96c6\u51fd\u6570\u5e2e\u52a9\u5b8c\u6210\u8f7d\u56fe\u6d41\u7a0b": 312, "\u8fd9\u91cc\u7684": 312, "\u5df2\u7ecf\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u5b58\u50a8\u5728": 312, "\u4e2d\u7684\u56fe": 312, "\u56fe\u6570\u636e\u5206\u5e03\u5728\u8fd9\u4e2a\u4f1a\u8bdd\u80cc\u540e\u62c9\u8d77\u7684": 312, "\u66f4\u591a\u7ec6\u8282\u8bf7\u67e5\u770b": 312, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u5141\u8bb8\u7528\u6237\u4ee5": 312, "\u63a2\u7d22\u6027": 312, "\u65b9\u5f0f\u6765\u63a2\u7d22": 312, "\u67e5\u770b\u548c\u663e\u793a\u56fe\u6570\u636e": 312, "\u4ee5\u65b9\u4fbf\u7684\u5b9a\u4f4d\u548c\u6d1e\u5bdf\u7279\u5b9a\u7684\u6df1\u5165\u4fe1\u606f": 312, "\u91c7\u7528\u79f0\u4e3a": 312, "\u7684\u9ad8\u7ea7\u8bed\u8a00\u8fdb\u884c\u56fe\u904d\u5386": 312, "\u5e76\u63d0\u4f9b\u5927\u89c4\u6a21\u7684\u9ad8\u6548\u6267\u884c": 312, "\u5728\u6b64\u793a\u4f8b\u4e2d": 312, "\u6211\u4eec\u4f7f\u7528\u56fe\u904d\u5386\u6765\u67e5\u770b\u4e24\u4f4d\u7ed9\u5b9a\u4f5c\u8005\u5171\u540c\u64b0\u5199\u7684\u8bba\u6587\u6570\u91cf": 312, "\u4e3a\u4e86\u7b80\u5316\u67e5\u8be2": 312, "\u6211\u4eec\u5047\u8bbe\u4f5c\u8005\u53ef\u4ee5\u5206\u522b\u7531id": 312, "\u552f\u4e00\u6807\u8bc6": 312, "\u56fe\u5206\u6790\u662f\u5728\u771f\u5b9e\u573a\u666f\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u4e00\u7c7b\u56fe\u8ba1\u7b97": 312, "\u4e8b\u5b9e\u8bc1\u660e": 312, "\u8bb8\u591a\u7b97\u6cd5": 312, "\u4f8b\u5982\u793e\u533a\u68c0\u6d4b": 312, "\u8def\u5f84\u548c\u8fde\u63a5\u6027": 312, "\u96c6\u4e2d\u6027": 312, "\u5728\u5404\u79cd\u4e1a\u52a1\u4e2d\u90fd\u975e\u5e38\u6709\u6548": 312, "\u5185\u5efa\u4e86\u4e00\u7ec4\u9884\u7f6e\u5e38\u7528\u7b97\u6cd5": 312, "\u65b9\u4fbf\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5206\u6790\u56fe\u6570\u636e": 312, "\u4e0b\u9762\u6211\u4eec\u9996\u5148\u901a\u8fc7\u5728\u7279\u5b9a\u5468\u671f\u5185\u4ece\u5168\u56fe\u4e2d\u63d0\u53d6\u8bba\u6587": 312, "\u80cc\u540e\u57fa\u4e8e": 312, "\u6765\u5bfc\u51fa\u4e00\u4e2a\u5b50\u56fe": 312, "\u7136\u540e\u8fd0\u884c": 312, "\u5206\u89e3\u548c\u4e09\u89d2\u5f62\u8ba1\u6570\u4ee5\u751f\u6210\u6bcf\u4e2a\u8bba\u6587\u8282\u70b9\u7684\u7ed3\u6784\u7279\u5f81": 312, "\u7531\u4e8e\u8bb8\u591a\u7b97\u6cd5\u53ef\u80fd\u4ec5\u9002\u7528\u4e8e\u540c\u6784\u56fe": 312, "\u53ea\u6709\u4e00\u7c7b\u70b9\u548c\u4e00\u7c7b\u8fb9\u800c\u4e0d\u533a\u5206\u6807\u7b7e": 312, "\u8981\u5728\u5c5e\u6027\u56fe\u4e0a\u4f7f\u7528\u8fd9\u4e9b\u7b97\u6cd5": 312, "\u6211\u4eec\u9996\u5148\u9700\u8981\u5c06\u5176\u6295\u5f71\u5230\u4e00\u4e2a\u7b80\u5355\u7684\u540c\u6784\u56fe\u4e2d": 312, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5728": 312, "\u4e2d\u7f16\u5199\u81ea\u5df1\u7684\u7b97\u6cd5": 312, "\u5f53\u524d": 312, "\u652f\u6301\u7528\u6237\u4ee5": 312, "\u6a21\u578b\u548c": 312, "\u6a21\u578b\u81ea\u5b9a\u4e49\u56fe\u7b97\u6cd5": 312, "\u7ed3\u5408\u4e86\u56fe\u7ed3\u6784\u548c\u673a\u5668\u5b66\u4e60\u7684\u4f18\u52bf": 312, "\u53ef\u4ee5\u5c06\u56fe\u4e2d\u7684\u7ed3\u6784\u4fe1\u606f\u548c\u5c5e\u6027\u4fe1\u606f\u538b\u7f29\u4e3a\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684\u4f4e\u7ef4\u5d4c\u5165\u5411\u91cf": 312, "\u8fd9\u4e9b\u5d4c\u5165\u548c\u8868\u5f81\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8f93\u5165\u5230\u4e0b\u6e38\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d": 312, "\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d": 312, "\u6211\u4eec\u8bad\u7ec3\u4e86": 312, "\u6a21\u578b": 312, "\u5c06\u8282\u70b9": 312, "\u5206\u7c7b\u4e3a349\u4e2a\u7c7b\u522b": 312, "\u6bcf\u4e2a\u7c7b\u522b\u4ee3\u8868\u4e00\u4e2a\u51fa\u5904": 312, "\u4f8b\u5982\u9884\u5370\u672c\u548c\u4f1a\u8bae": 312, "\u4e3a\u6b64": 312, "\u63a5\u7740\u4e0a\u4e00\u6b65": 312, "\u9996\u5148\u9700\u8981\u542f\u52a8\u5b66\u4e60\u5f15\u64ce\u5e76\u6784\u5efa\u4e00\u4e2a\u5177\u6709\u7279\u5f81\u7684\u6570\u636e\u56fe": 312, "\u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u8bad\u7ec3\u8fc7\u7a0b\u5e76\u6267\u884c": 312, "\u6700\u540e": [312, 313, 316], "\u5f53\u6211\u4eec\u5b8c\u6210\u6240\u6709\u7684\u8ba1\u7b97\u8fc7\u7a0b\u540e": 312, "\u5173\u95ed\u5f53\u524d\u7684\u4f1a\u8bdd": 312, "\u8be5\u6b65\u9aa4\u4f1a\u544a\u77e5\u80cc\u540e\u7684": 312, "\u548c\u5f15\u64ce": 312, "\u91ca\u653e\u5f53\u524d\u6240\u6709\u7684\u8d44\u6e90": 312, "\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u7cfb\u5217\u53ef\u4ee5\u5728\u56fe\u4e0a\u8fdb\u884c\u65b0\u589e": 313, "\u6295\u5f71\u7684\u65b9\u6cd5": 313, "\u4ee5\u53ca\u5982\u4f55\u5c06\u4e00\u4e2a\u590d\u6742\u7684\u56fe\u8f6c\u6362\u4e3a\u53ef\u4ee5\u9002\u914d\u666e\u901a\u7b97\u6cd5\u5e94\u7528\u7684\u65b9\u6cd5": 313, "\u6211\u4eec\u5c55\u793a\u5982\u4f55\u5c06\u7b97\u6cd5\u5f97\u5230\u7684\u7ed3\u679c\u52a0\u56de\u5230\u56fe\u4e2d\u53bb": 313, "\u5177\u4f53\u800c\u8a00": 313, "\u56fe": 313, "\u63d0\u4f9b\u4e86\u4e24\u4e2a\u589e\u52a0\u6807\u7b7e\u7684\u51fd\u6570": 313, "\u548c\u4e00\u4e2a\u6295\u5f71\u7684\u51fd\u6570": 313, "\u6211\u4eec\u5df2\u7ecf\u5728": 313, "\u4e00\u8282\u89c1\u5230\u8fc7": 313, "\u8fd9\u4e24\u4e2a\u51fd\u6570": 313, "\u5f53\u65f6\u6211\u4eec\u7528\u5b83\u6765\u6784\u5efa\u4e00\u5f20\u56fe": 313, "\u8fdb\u4e00\u6b65\u7684": 313, "\u5f53\u56fe\u6784\u5efa\u597d\u5e76\u8f7d\u5165\u4e86": 313, "\u4e2d\u4e4b\u540e": 313, "\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u7528\u5176\u589e\u52a0\u66f4\u591a\u7684\u6807\u7b7e": 313, "\u5f53\u7136\u8fd9\u4e00\u6b65\u5e76\u4e0d\u4f1a\u5728\u539f\u56fe\u4e0a\u4fee\u6539": 313, "\u800c\u662f\u4f1a\u8fd4\u56de\u57fa\u4e8e\u539f\u56fe\u4e4b\u4e0a": 313, "\u589e\u52a0\u4e86\u65b0\u7684\u6807\u7b7e\u7684\u65b0\u56fe": 313, "\u5c5e\u6027\u56fe\u4e3a\u4f8b": 313, "\u6211\u4eec\u73b0\u5728\u8f7d\u5165\u5176\u4e2d\u4e00\u90e8\u5206\u6807\u7b7e": 313, "\u4f5c\u4e3a\u63a5\u4e0b\u6765\u4e00\u7cfb\u5217\u8f6c\u6362\u64cd\u4f5c\u7684\u8d77\u59cb\u56fe": 313, "pathlib": 313, "\u5230\u8fd9\u91cc": 313, "\u6211\u4eec\u5df2\u7ecf\u8f7d\u5165\u4e86\u4e00\u5f20\u56fe": 313, "\u63a5\u4e0b\u6765\u6211\u4eec\u5728\u8fd9\u5f20\u56fe\u4e0a\u518d\u6dfb\u52a0\u51e0\u4e2a\u6807\u7b7e": 313, "graph1": 313, "comment_0_0": [313, 318], "graph2": 313, "comment_replyof_comment_0_0": [313, 318], "\u53ef\u4ee5\u770b\u5230\u6bcf\u6b21": 313, "\u90fd\u4f1a\u4ea7\u751f\u4e00\u5f20\u65b0\u7684\u56fe": 313, "\u5728\u5e95\u5c42": 313, "\u4ed6\u4eec\u5171\u6709\u7684\u90e8\u5206\u4f1a\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58": 313, "\u6240\u4ee5\u5e76\u4e0d\u4f1a\u5c06\u539f\u56fe\u7684\u6570\u636e\u590d\u5236\u4e00\u4efd": 313, "\u5728\u67d0\u4e9b\u573a\u666f\u4e0b": 313, "\u6211\u4eec\u9700\u8981\u5c06\u4ece\u4e00\u5f20\u590d\u6742\u7684\u56fe\u63d0\u53d6\u51fa\u4e00\u4e2a\u5b50\u56fe": 313, "\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u501f\u52a9": 313, "\u6765\u5b8c\u6210": 313, "\u5305\u542b\u4e24\u4e2a\u53c2\u6570": 313, "\u5176\u503c\u4e3a\u4e00\u4e2a\u5b57\u5178": 313, "\u5b57\u5178\u7684\u952e\u662f\u6807\u7b7e\u540d": 313, "\u503c\u662f\u8981\u53d6\u7684\u5c5e\u6027\u7684\u5217\u8868": 313, "\u503c\u53ef\u4ee5\u4e3a": 313, "\u4ee3\u8868\u9009\u62e9\u6240\u6709\u7684\u5c5e\u6027": 313, "\u7684\u8fd4\u56de\u503c\u4e5f\u662f\u4e00\u4e2a\u5c5e\u6027\u56fe": 313, "\u5e76\u4e14\u53ef\u4ee5\u88ab\u8fdb\u4e00\u6b65": 313, "\u4ee5\u4e0b\u662f\u51e0\u4e2a\u4f8b\u5b50": 313, "\u5305\u542b\u4e00\u4e2a\u70b9\u6807\u7b7e": 313, "\u548c\u4e00\u4e2a\u8fb9\u6807\u7b7e": 313, "\u4ee5\u53ca\u6240\u9009\u62e9\u7684\u5c5e\u6027": 313, "sub_graph2": 313, "\u73b0\u5728\u70b9\u4e0a\u6ca1\u6709\u5c5e\u6027": 313, "\u8fb9\u4e0a\u6709\u4e00\u4e2a\u5c5e\u6027": 313, "\u5f53\u6267\u884c\u4e00\u4e2a\u4ec5\u53ef\u4ee5\u8dd1\u5728\u7b80\u5355\u56fe\u4e0a\u7684\u7b97\u6cd5\u65f6": 313, "\u5176\u4f1a\u9ed8\u8ba4\u5c06\u5176\u53c2\u6570\u4e2d\u7684\u5c5e\u6027\u56fe\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 313, "\u5982\u679c\u4e0d\u80fd\u8fdb\u884c\u8fd9\u79cd\u8f6c\u6362": 313, "\u5373\u591a\u4e8e\u4e00\u4e2a\u70b9\u6807\u7b7e\u548c\u4e00\u4e2a\u8fb9\u6807\u7b7e": 313, "\u6216\u591a\u4e8e\u4e00\u4e2a\u5c5e\u6027": 313, "\u90a3\u4e48\u5c31\u4f1a\u62a5\u9519": 313, "\u8f6c\u6362\u4e0d\u5408\u6cd5": 313, "\u591a\u4e8e\u4e00\u4e2a\u70b9": 313, "\u8fb9\u6807\u7b7e": 313, "\u591a\u4e8e\u4e00\u4e2a\u5c5e\u6027": 313, "\u4e0a\u4e00\u6b65\u7b97\u6cd5\u7684\u8fd0\u884c\u7ed3\u679c\u53ef\u4ee5\u88ab\u52a0\u5165\u4e00\u5f20\u56fe\u4e2d": 313, "\u4f5c\u4e3a\u70b9\u7684\u4e00\u4e2a\u5c5e\u6027": 313, "\u4e0d\u4ec5\u53ef\u4ee5\u52a0\u5165\u8fd0\u7b97\u7ed3\u679c\u5230\u76f4\u63a5\u88ab\u67e5\u8be2\u7684\u56fe\u4e0a": 313, "\u8fd8\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u67e5\u8be2\u7ed3\u679c\u52a0\u5230\u88ab": 313, "\u800c\u5f97\u5230\u88ab\u67e5\u8be2\u7684\u56fe\u4e0a": 313, "\u53ea\u8981\u88ab\u52a0\u5165\u5c5e\u6027\u7684\u70b9\u6807\u7b7e\u76f8\u540c": 313, "\u662f\u963f\u91cc\u5df4\u5df4\u8fbe\u6469\u9662\u667a\u80fd\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u7814\u53d1\u5e76\u5f00\u6e90\u7684\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u5e73\u53f0": 314, "\u4f9d\u6258\u4e8e\u963f\u91cc\u6d77\u91cf\u6570\u636e\u548c\u4e30\u5bcc\u573a\u666f": 314, "\u4e0e\u8fbe\u6469\u9662\u7684\u9ad8\u6c34\u5e73\u7814\u7a76": 314, "\u81f4\u529b\u4e8e\u9488\u5bf9\u5b9e\u9645\u751f\u4ea7\u573a\u666f\u4e2d\u56fe\u8ba1\u7b97\u7684\u6311\u6218": 314, "\u63d0\u4f9b\u4e00\u7ad9\u5f0f\u9ad8\u6548\u7684\u89e3\u51b3\u65b9\u6848": 314, "\u63d0\u4f9b\u4e86": 314, "\u80fd\u5341\u5206\u65b9\u4fbf\u7684\u5bf9\u63a5\u4e0a\u4e0b\u6e38\u5de5\u4f5c\u6d41": 314, "\u5177\u6709\u4e00\u7ad9\u5f0f": 314, "\u5f00\u53d1\u4fbf\u6377": 314, "\u6027\u80fd\u6781\u81f4\u7b49\u7279\u70b9": 314, "\u5b83\u6574\u5408\u4e86\u667a\u80fd\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u591a\u4e2a\u91cd\u8981\u7684\u521b\u65b0\u6027\u6280\u672f": 314, "\u5305\u62ec": [314, 317], "\u652f\u6301\u4e86\u56fe\u5206\u6790": 314, "\u56fe\u7684\u4ea4\u4e92\u5f0f\u67e5\u8be2\u548c\u56fe\u5b66\u4e60": 314, "\u5176\u4e2d\u6838\u5fc3\u4f18\u52bf\u5305\u62ec\u5728\u4e1a\u754c\u9996\u6b21\u652f\u6301\u4e86": 314, "\u5206\u5e03\u5f0f\u7f16\u8bd1\u4f18\u5316": 314, "\u652f\u6301\u4e86\u7b97\u6cd5\u7684\u81ea\u52a8\u5e76\u884c\u5316": 314, "\u63d0\u4f9b\u4e86\u4f01\u4e1a\u7ea7\u573a\u666f\u4e0b\u7684\u6781\u81f4\u6027\u80fd\u7b49": 314, "\u5728\u963f\u91cc\u5df4\u5df4\u5185\u5916\u90e8\u5e94\u7528\u4e2d": 314, "\u5df2\u7ecf\u8bc1\u660e\u5728\u591a\u4e2a\u5173\u952e\u4e92\u8054\u7f51\u9886\u57df": 314, "\u5982\u98ce\u63a7": 314, "\u7535\u5546\u63a8\u8350": 314, "\u5e7f\u544a": 314, "\u7f51\u7edc\u5b89\u5168": [314, 317], "\u77e5\u8bc6\u56fe\u8c31\u7b49": 314, "\u5b9e\u73b0\u4e86\u91cd\u8981\u7684\u4e1a\u52a1\u65b0\u4ef7\u503c": 314, "\u6574\u5408\u4e86\u8fbe\u6469\u9662\u7684\u591a\u9879\u5b66\u672f\u7814\u7a76\u6210\u679c": 314, "\u5176\u4e2d\u7684\u6838\u5fc3\u6280\u672f\u66fe\u83b7\u5f97\u6570\u636e\u5e93\u9886\u57df\u9876\u7ea7\u5b66\u672f\u4f1a\u8bae": 314, "\u6700\u4f73\u8bba\u6587\u5956": 314, "vldb2017": 314, "\u6700\u4f73\u6f14\u793a\u5956": 314, "vldb2020": 314, "\u6700\u4f73\u8bba\u6587\u5956\u4e9a\u519b": 314, "\u4e16\u754c\u4eba\u5de5\u667a\u80fd\u521b\u65b0\u5927\u8d5bsail\u5956\u7b49": 314, "\u7684\u4ea4\u4e92\u67e5\u8be2\u5f15\u64ce\u7684\u8bba\u6587\u5df2\u88ab": 314, "nsdi": 314, "2021\u5f55\u7528": 314, "\u8fd8\u6709\u5176\u5b83\u56f4\u7ed5": 314, "\u7684\u5341\u591a\u9879\u7814\u7a76\u6210\u679c\u53d1\u8868\u5728\u9886\u57df\u9876\u7ea7\u7684\u5b66\u672f\u4f1a\u8bae\u6216\u671f\u520a\u4e0a": 314, "kdd\u7b49": 314, "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": 314, "\u57fa\u4e8e": [314, 319], "\u793a\u4f8b": 314, "\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 314, "\u521b\u5efa\u4f1a\u8bdd": 314, "\u4ea4\u4e92\u5f0f\u67e5\u8be2": 314, "\u56fe\u5206\u6790": 314, "\u56fe\u795e\u7ecf\u7f51\u7edc": 314, "\u5173\u95ed\u4f1a\u8bdd": 314, "\u4f7f\u7528helm\u90e8\u7f72graphscop": 314, "\u5728aw": 314, "\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": 314, "\u672c\u5730\u90e8\u7f72graphscop": 314, "\u5165\u95e8\u6559\u7a0b": 314, "\u8bba\u6587\u5f15\u7528\u5173\u7cfb\u7f51\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [314, 319], "\u4f7f\u7528\u517c\u5bb9": [314, 319], "\u8fdb\u884c\u56fe\u64cd\u4f5c": [314, 319], "\u7528": [314, 316, 319], "\u50cf": [314, 319], "\u4e00\u6837\u8fdb\u884c\u56fe\u5206\u6790": [314, 319], "\u8f7d\u5165\u56fe\u6570\u636e": [314, 319], "\u5185\u7f6e\u7684\u56fe\u5206\u6790\u7b97\u6cd5": [314, 319], "\u7f16\u5199\u81ea\u5b9a\u4e49\u56fe\u5206\u6790\u7b97\u6cd5": [314, 319], "\u4f7f\u7528\u67e5\u8be2\u8bed\u8a00": [314, 319], "\u8fdb\u884c\u4ea4\u4e92\u5f0f\u67e5\u8be2": [314, 319], "\u8fdb\u884c\u65e0\u76d1\u7763\u56fe\u5b66\u4e60": [314, 319], "bipartitegraphsag": [314, 319], "\u7684\u4e8c\u90e8\u56fe\u65e0\u76d1\u7763\u5b66\u4e60": [314, 319], "\u8fdb\u884c\u6709\u76d1\u7763\u56fe\u5b66\u4e60": [314, 319], "\u73af\u5883\u518d\u63a2\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [314, 319], "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": 314, "\u624b\u52a8\u914d\u7f6e\u56fe": 314, "\u9ad8\u7ea7\u7528\u6cd5": 314, "\u4ece": [314, 316], "\u4e2d\u8f7d\u56fe": 314, "\u7684\u53d8\u79cd": 314, "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": 314, "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": 314, "\u6295\u5f71": 314, "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 314, "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": 314, "\u5185\u7f6e\u7b97\u6cd5": 314, "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": 314, "\u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": 314, "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528": 314, "\u4e2d\u7684\u51fd\u6570": 314, "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": 314, "\u8fd0\u884cjava\u7f16\u5199\u7684\u7b97\u6cd5": 314, "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": 314, "\u5229\u7528python": 314, "\u8fde\u63a5graphscop": 314, "\u5229\u7528java": 314, "\u5f00\u53d1\u63a7\u5236\u53f0": 314, "gremlin\u7f16\u7a0b\u5165\u95e8": 314, "gremlin\u517c\u5bb9\u6027": 314, "\u5bf9\u6bd4tinkerpop": 314, "\u56fe\u5b66\u4e60\u6a21\u578b": 314, "\u81ea\u5b9a\u4e49\u7b97\u6cd5": 314, "\u5e38\u89c1\u95ee\u9898": 314, "\u5f00\u53d1\u8005\u6307\u5357": 314, "\u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5": 314, "\u6784\u5efa": 314, "\u4ee3\u7801\u98ce\u683c": 314, "\u76ee\u524d\u652f\u6301\u7684\u5e73\u53f0\u5982\u4e0b": 315, "\u7a0b\u5e8f\u5305": 315, "\u7684\u5f62\u5f0f\u53d1\u5e03": 315, "\u53ef\u76f4\u63a5\u901a\u8fc7": 315, "\u9700\u8981\u6ee1\u8db3": 315, "\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u672c\u6587\u6863\u7684\u4ee5\u4e0b\u6b65\u9aa4\u90e8\u7f72\u4e00\u4e2a\u672c\u5730": 315, "\u5e76\u52a0\u8f7d\u9884\u7f16\u8bd1\u597d\u7684\u955c\u50cf": 315, "\u73af\u5883\u4e0b\u8fd0\u884c": 315, "\u9996\u5148\u9700\u8981\u9884\u5148\u5b89\u88c5\u4ee5\u4e0b\u4f9d\u8d56": 315, "\u7684\u7528\u6237": 315, "\u53ef\u901a\u8fc7\u5b98\u65b9\u6587\u6863\u6765\u5b89\u88c5\u4e0a\u8ff0\u4f9d\u8d56": 315, "\u5e76\u5728": 315, "\u4e2d\u5f00\u542f": 315, "\u529f\u80fd": 315, "\u53d1\u884c\u7248\u7528\u6237": 315, "\u6211\u4eec\u63d0\u4f9b\u4e86\u811a\u672c\u6765\u51c6\u5907\u8fd0\u884c\u65f6\u73af\u5883": 315, "\u60a8\u4e5f\u53ef\u4ee5\u5728": 315, "\u4e0a\u5b89\u88c5": 315, "wsl2": 315, "\u4ee5\u4f7f\u7528\u811a\u672c": 315, "install_dep": 315, "\u63a5\u4e0b\u6765": [315, 316, 317], "\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7": 315, "graphscope\u7684\u4ea4\u4e92\u67e5\u8be2\u5f15\u64ce": 316, "\u7b80\u79f0gie": 316, "\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf": 316, "\u5b83\u4e3a\u4e0d\u540c\u7ecf\u9a8c\u7684\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6613\u7528\u7684\u4ea4\u4e92\u5f0f\u73af\u5883": 316, "\u652f\u6301\u6d77\u91cf\u590d\u6742\u56fe\u6570\u636e\u4e0a\u7684": 316, "\u5b9e\u65f6\u5206\u6790\u4e0e\u4ea4\u4e92\u63a2\u7d22": 316, "\u8be5\u5f15\u64ce\u652f\u6301": 316, "\u8bed\u8a00\u8868\u8fbe\u7684\u4ea4\u4e92\u56fe\u67e5\u8be2": 316, "\u5e76\u63d0\u4f9b\u4e86\u81ea\u52a8\u5316\u548c\u7528\u6237\u900f\u660e\u7684\u5206\u5e03\u5f0f\u5e76\u884c\u6267\u884c": 316, "\u662f\u57fa\u4e8egremlin\u8bed\u8a00\u5f00\u53d1\u4ea4\u4e92\u5f0f\u56fe\u5e94\u7528\u7684\u4e00\u4e2a\u5f00\u6e90\u6846\u67b6\u548c\u4e8b\u5b9e\u6807\u51c6": 316, "gie\u901a\u8fc7tinkerpop\u63d0\u4f9b\u7684": 316, "\u63a5\u53e3": [316, 317], "\u5b9e\u73b0\u4e86\u4e0etinkerpop\u751f\u6001\u65e0\u7f1d\u96c6\u6210": 316, "\u4ece\u800c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528\u8bf8\u5982": 316, "\u7684\u5f00\u53d1\u5de5\u5177\u6216\u901a\u8fc7java\u548cpython\u7b49\u591a\u79cd\u8bed\u8a00\u63a5\u53e3\u7f16\u5199\u5e94\u7528\u903b\u8f91": 316, "\u5982\u4e0b\u6240\u793a": 316, "\u7528\u6237\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u901a\u8fc7python\u8fde\u4e0a\u4e00\u4e2a\u8f7d\u5165graphscope\u7cfb\u7edf\u7684\u56fe\u5e76\u53d1\u8d77gremlin\u67e5\u8be2": 316, "\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4ea4\u4e92\u4f1a\u8bdd": 316, "\u8f7d\u5165ldbc\u793a\u4f8b\u56fe\u6570\u636e": 316, "\u968f\u540e\u8fd4\u56de\u4e00\u4e2agremlin\u67e5\u8be2\u63d0\u4ea4\u5165\u53e3": 316, "\u4e0b\u9762\u4e24\u53e5gremlin\u793a\u4f8b\u67e5\u8be2\u5206\u522b\u8ba1\u7b97\u56fe\u4e2d\u9876\u70b9\u548c\u8fb9\u7684\u603b\u6570": 316, "\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684": 316, "\u5bf9\u8c61\u4e8b\u5b9e\u4e0a\u662fpython\u7c7b": 316, "\u7684\u4e00\u4e2a\u5b9e\u4f8b": 316, "\u800c\u8fd9\u4e00\u7c7b\u5c01\u88c5\u4e86\u7528python\u5b9e\u73b0\u7684\u5b8c\u6574gremlin\u5ba2\u6237\u7aef\u7c7b\u5e93": 316, "\u6bcf\u4e00\u4e2a\u8f7d\u5165graphscope\u7684\u56fe\u90fd\u5305\u542b\u4e00\u4e2agremlin\u67e5\u8be2\u63d0\u4ea4\u5165\u53e3": 316, "\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u83b7\u5f97\u5177\u4f53\u7684\u8bbf\u95ee\u5730\u5740": 316, "\u4e0a\u9762\u7684\u8bed\u53e5\u4f1a\u4ea7\u751f\u5982\u4e0b": 316, "\u683c\u5f0f": 316, "\u7684\u8f93\u51fa": 316, "\u6709\u4e86\u8fd9\u4e00url\u4fe1\u606f": 316, "\u7528\u6237\u4e5f\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528gremlin": 316, "python\u8bbf\u95ee\u56fe\u6570\u636e": 316, "\u5177\u4f53\u53ef\u4ee5\u53c2\u8003": 316, "\u5b98\u65b9\u6587\u6863": 316, "tinkerpop\u540c\u65f6\u652f\u6301java\u8bed\u8a00\u6309\u7c7b\u4f3c\u65b9\u5f0f\u8bbf\u95ee": 316, "\u8be6\u89c1gremlin": 316, "java\u7684": 316, "\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0egraphscope\u5b58\u50a8\u7684\u56fe\u6570\u636e\u8fdb\u884c\u4ea4\u4e92\u7684\u63a7\u5236\u53f0": 316, "\u4e5f\u53eb\u505arepl\u73af\u5883": 316, "\u4e0b\u9762\u63cf\u8ff0\u5982\u4f55\u5229\u7528\u4e0a\u6587\u83b7\u5f97\u7684url": 316, "\u5b89\u88c5\u548c\u914d\u7f6egremlin": 316, "console\u4ee5\u8fde\u63a5graphscope\u7684\u6b65\u9aa4": 316, "\u5b89\u88c5gremlin": 316, "console\u4f9d\u8d56\u7684java\u8fd0\u884c\u65f6\u73af\u5883": 316, "\u7248\u672c\u9700\u8981\u6ee1\u8db3": 316, "\u4e0b\u8f7d\u9002\u5f53\u7248\u672c\u7684gremlin": 316, "\u89e3\u538b\u7f29\u4e0b\u8f7d\u7684\u6587\u4ef6": 316, "\u8fdb\u5165\u89e3\u538b\u7f29\u7684\u76ee\u5f55": 316, "\u5b50\u76ee\u5f55\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a": 316, "\u7684\u6587\u672c\u6587\u4ef6\u4ee5\u914d\u7f6eurl": 316, "\u5177\u4f53\u5185\u5bb9\u5982\u4e0b\u6240\u793a": 316, "\u5176\u4e2d\u7684": 316, "\u9700\u8981\u5206\u522b\u66ff\u6362\u4e3a\u4ecegraphscope\u4f1a\u8bdd\u5f97\u5230\u7684url\u4e2d\u5bf9\u5e94\u7684\u4e3b\u673a\u540d": 316, "\u6216ip": 316, "\u548c\u7aef\u53e3": 316, "classnam": 316, "ser": 316, "gryomessageserializerv1d0": 316, "serializeresulttostr": 316, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u542f\u52a8gremlin": 316, "\u63d0\u793a\u7b26\u4e0b": 316, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u8fde\u63a5\u5230\u5bf9\u5e94\u7684graphscope\u4f1a\u8bdd": 316, "\u7b2c\u4e8c\u6761\u547d\u4ee4\u5207\u6362\u5230\u8fdc\u7a0b\u6a21\u5f0f": 316, "\u4ece\u800c\u63a5\u4e0b\u6765\u8f93\u5165\u7684\u6240\u6709gremlin\u67e5\u8be2\u90fd\u88ab\u81ea\u52a8\u4f20\u8f93\u5230": 316, "\u8fdc\u7a0b": 316, "graphscope\u6267\u884c": 316, "\u73b0\u5728\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e9b\u7b80\u5355\u7684gremlin\u67e5\u8be2\u4e86": 316, "\u5f53\u4f60\u5b8c\u6210\u4ea4\u4e92": 316, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u53ef\u4ee5\u9000\u51fagremlin": 316, "gie\u4ee5\u5fe0\u5b9e\u4fdd\u7559gremlin\u7f16\u7a0b\u6a21\u578b\u4e3a\u8bbe\u8ba1\u76ee\u6807": 316, "\u4ece\u800c\u8ba9\u5df2\u6709\u7684\u5e94\u7528\u53ea\u9700\u6700\u5c0f\u5316\u7684\u4fee\u6539\u5c31\u53ef\u4ee5\u6269\u5c55\u5230\u5927\u89c4\u6a21\u8ba1\u7b97\u96c6\u7fa4": 316, "\u5728\u6b64\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2agremlin\u7684\u603b\u4f53\u4ecb\u7ecd": 316, "\u7279\u522b\u662f\u5176\u4e2d\u5305\u542b\u7684\u56fe\u6570\u636e\u6a21\u578b\u548c\u67e5\u8be2\u8bed\u8a00\u7b49\u5173\u952e\u6982\u5ff5": 316, "\u66f4\u8be6\u7ec6\u548c\u5b8c\u6574\u7684\u4ecb\u7ecd": 316, "gremlin\u5141\u8bb8\u7528\u6237\u5728\u5c5e\u6027\u56fe\u6a21\u578b\u4e0a\u5b9a\u4e49\u7279\u8bbe": 316, "hoc": 316, "\u904d\u5386\u67e5\u8be2": 316, "\u4e00\u4e2a\u5c5e\u6027\u56fe\u662f\u4e00\u4e2a\u6709\u5411\u56fe": 316, "\u5176\u4e2d\u7684\u9876\u70b9\u548c\u8fb9\u53ef\u4ee5\u62e5\u6709\u4e00\u7ec4\u5c5e\u6027": 316, "\u56fe\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61": 316, "\u70b9\u6216\u8fb9": 316, "\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6": 316, "\u548c\u4e00\u4e2a\u7c7b\u522b\u540d\u79f0": 316, "\u6307\u5b9a\u5176\u7c7b\u578b\u6216\u89d2\u8272": 316, "\u6bcf\u4e2a\u5c5e\u6027\u662f\u4e00\u4e2a\u5305\u542b\u5c5e\u6027\u540d\u548c\u5c5e\u6027\u503c\u7684": 316, "\u952e": 316, "\u503c": 316, "\u5bf9": 316, "\u5176\u6240\u5c5e\u5bf9\u8c61\u7684": 316, "\u52a0\u4e0a\u5c5e\u6027\u540d\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u5c5e\u6027\u503c": 316, "\u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u5c5e\u6027\u56fe\u6a21\u578b\u793a\u4f8b": 316, "\u5b83\u5305\u542b": 316, "\u7528\u6237": 316, "\u5546\u54c1": 316, "\u5730\u5740": 316, "\u4e09\u7c7b\u70b9": 316, "\u5b83\u4eec\u901a\u8fc7": 316, "\u8d2d\u4e70": 316, "\u9012\u9001": 316, "belongs_to": 316, "\u5c5e\u4e8e": 316, "home_of": 316, "\u5bb6\u5ead\u5730\u5740": 316, "\u56db\u7c7b\u8fb9\u76f8\u4e92\u5173\u8054": 316, "\u56fe\u4e2d\u865a\u7ebf\u5c55\u793a\u7684\u4e00\u6761": 316, "\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684": 316, "\u8def\u5f841": 316, "\u4ee3\u8868\u4e86\u4e00\u4e2a\u7528\u6237": 316, "\u4e70\u5bb6": 316, "tom": 316, "\u8d2d\u4e70\u4e86\u4e00\u4e2a\u5356\u5bb6": 316, "jack": 316, "\u63d0\u4f9b\u7684\u6807\u4ef7": 316, "\u7684\u5546\u54c1": 316, "gift": 316, "\u4e00\u4e2agremlin\u67e5\u8be2\u6216\u56fe\u904d\u5386\u7684\u6267\u884c": 316, "\u53ef\u4ee5\u7528\u4e00\u7ec4": 316, "\u904d\u5386\u5668": 316, "\u6807\u8bc6": 316, "\u5b83\u4eec\u4f9d\u636egremlin\u67e5\u8be2\u63d0\u4f9b\u7684\u7528\u6237\u6307\u4ee4\u5728\u8f93\u5165\u56fe\u4e2d\u6e38\u8d70": 316, "\u6700\u7ec8\u6240\u6709\u505c\u6b62\u7684\u904d\u5386\u5668\u96c6\u5408": 316, "\u5305\u542b\u5b83\u4eec\u7684\u4f4d\u7f6e": 316, "\u4ee3\u8868\u4e86\u67e5\u8be2\u7684\u7ed3\u679c": 316, "\u4e00\u4e2a\u904d\u5386\u5668\u662fgremlin\u5f15\u64ce\u5904\u7406\u7684\u6700\u5c0f\u6570\u636e\u5355\u5143": 316, "\u6bcf\u4e2a\u904d\u5386\u5668\u90fd\u7ef4\u62a4\u5b83\u5bf9\u5e94\u7684\u56fe\u4e2d\u7684\u5f53\u524d\u4f4d\u7f6e": 316, "\u53ef\u4ee5\u662f\u88ab\u8bbf\u95ee\u7684\u70b9": 316, "\u8fb9\u6216\u5c5e\u6027": 316, "\u53ef\u9009\u7684\u5b83\u4e5f\u53ef\u4ee5\u5305\u542b\u8d70\u8fc7\u7684\u5b8c\u6574\u8def\u5f84\u5386\u53f2\u751a\u81f3\u5e94\u7528\u72b6\u6001": 316, "gremlin\u8bed\u8a00\u4e30\u5bcc\u7075\u6d3b\u7684\u8868\u8fbe\u80fd\u529b\u4e3b\u8981\u6765\u81ea\u4e8e\u5b83\u5bf9": 316, "\u5d4c\u5957\u904d\u5386": 316, "\u7684\u652f\u6301": 316, "\u5b83\u5141\u8bb8\u4e00\u4e2a": 316, "\u5b50": 316, "\u67e5\u8be2\u6216\u904d\u5386\u88ab\u5305\u542b\u5728\u53e6\u4e00\u4e2a\u64cd\u4f5c\u4e2d": 316, "\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u51fd\u6570\u88ab\u5305\u88f9\u64cd\u4f5c\u7528\u4e8e\u5904\u7406\u5176\u6bcf\u4e00\u4e2a\u8f93\u5165": 316, "\u51fd\u6570\u7684\u58f0\u660e\u548c\u4f5c\u7528\u90fd\u7531\u5305\u88f9\u64cd\u4f5c\u7684\u8bed\u4e49\u51b3\u5b9a": 316, "\u8fc7\u6ee4": 316, "\u64cd\u4f5c\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u5d4c\u5957\u67e5\u8be2": 316, "\u4f5c\u4e3a\u8fc7\u6ee4\u6761\u4ef6\u8c13\u8bcd": 316, "\u800c": 316, "\u6620\u5c04": 316, "\u6392\u5e8f": 316, "\u64cd\u4f5c\u5404\u81ea\u53ef\u4ee5\u901a\u8fc7\u5d4c\u5957\u67e5\u8be2\u8bb2\u6bcf\u4e00\u4e2a\u8f93\u5165\u5355\u72ec\u6620\u5c04\u5230\u4ece\u5b83\u5f00\u59cb\u7684\u5b50\u904d\u5386\u5f97\u5230\u7684\u7ed3\u679c": 316, "\u6216\u4f9d\u636e\u7ed3\u679c\u503c\u4f5c\u4e3a\u6392\u5e8f\u4f9d\u636e": 316, "\u5d4c\u5957\u904d\u5386\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u5e94\u7528\u662f\u8868\u8fbe\u5faa\u73af": 316, "\u5728gremlin\u4e2d\u901a\u8fc7": 316, "\u5faa\u73af": 316, "\u64cd\u4f5c\u548c\u968f\u540e\u7684": 316, "\u7ec8\u6b62\u6761\u4ef6": 316, "\u8868\u8fbe": 316, "\u64cd\u4f5c\u5305\u542b\u4e00\u4e2a\u5d4c\u5957\u904d\u5386\u4f5c\u4e3a\u5faa\u73af\u4f53": 316, "\u6bcf\u4e00\u4e2a\u8f93\u5165\u90fd\u4f1a\u91cd\u590d\u9001\u5165\u8fd9\u4e00\u5b50\u67e5\u8be2": 316, "\u76f4\u5230\u7ec8\u6b62\u6761\u4ef6\u6ee1\u8db3": 316, "\u6761\u4ef6\u7ec8\u6b62": 316, "\u64cd\u4f5c\u7c7b\u4f3c": 316, "\u53ef\u4ee5\u8868\u8fbe\u4e00\u4e2a\u6761\u4ef6\u8c13\u8bcd": 316, "\u5b83\u88ab\u72ec\u7acb\u5e94\u7528\u4e8e\u5faa\u73af\u4f53\u7684\u6bcf\u4e00\u4e2a\u8f93\u51fa\u904d\u5386\u5668": 316, "\u6ee1\u8db3\u6761\u4ef6\u7684\u904d\u5386\u5668\u5c31\u4f1a\u79bb\u5f00\u5faa\u73af": 316, "\u53e6\u4e00\u4e2a\u5e38\u7528\u7684": 316, "\u8fed\u4ee3\u8f6e\u6b21\u7ec8\u6b62": 316, "\u64cd\u4f5c\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u6574\u578b\u5e38\u91cf": 316, "\u8868\u8fbe\u56fa\u5b9a\u8fed\u4ee3\u8f6e\u6b21\u540e\u7ec8\u6b62\u5faa\u73af": 316, "\u4e0b\u9762\u5c55\u793a\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684gremlin\u793a\u4f8b": 316, "\u5b83\u5c1d\u8bd5\u4ece\u4e00\u4e2a\u7ed9\u5b9a\u8d26\u6237": 316, "\u70b9\u5f00\u59cb\u627e\u5230\u957f\u5ea6\u4e3a": 316, "\u7684\u6709\u5411\u73af\u8def": 316, "\u9996\u5148": [316, 318], "\u8f93\u5165\u56fe\u64cd\u4f5c": 316, "\u5305\u542b\u4e00\u4e2a": 316, "\u8868\u8fbe\u7684\u7b80\u5355\u8fc7\u6ee4": 316, "\u8fd4\u56de\u56fe\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684": 316, "\u70b9": 316, "\u5373\u552f\u4e00\u6807\u8bc6\u4e3a": 316, "\u7684\u70b9": 316, "\u7d27\u968f\u5176\u540e\u7684": 316, "\u64cd\u4f5c\u662f\u4e00\u4e2a": 316, "\u4fee\u9970\u7b26": 316, "\u5b83\u4e0d\u6539\u53d8\u8f93\u5165\u904d\u5386\u5668\u96c6\u5408": 316, "\u4f46\u5bf9\u5176\u4e2d\u6bcf\u4e00\u4e2a\u904d\u5386\u5668\u7684\u5f53\u524d\u4f4d\u7f6e": 316, "\u6253\u4e0a\u4e00\u4e2a\u6709\u540d\u6807\u7b7e": 316, "\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u7684": 316, "\u4ece\u800c\u4eca\u540e\u53ef\u4ee5\u5f15\u7528": 316, "\u67e5\u8be2\u6cbf\u7740": 316, "\u7c7b\u578b\u7684\u51fa\u8fb9\u5faa\u73af\u6e38\u8d70": 316, "\u6b21": 316, "\u8f93\u51fahops\u5728": 316, "\u8303\u56f4\u5185\u7684\u90bb\u70b9": 316, "\u4e14\u6bcf\u4e00\u6b21\u90fd\u8fc7\u6ee4\u6216\u8df3\u8fc7\u8def\u5f84\u4e2d\u7684\u91cd\u590d\u70b9": 316, "\u901a\u8fc7\u5728": 316, "\u5185\u914d\u7f6e": 316, "\u9009\u9879\u5b9e\u73b0": 316, "\u64cd\u4f5c\u68c0\u67e5\u6b64\u65f6\u904d\u5386\u8def\u5f84\u7684\u4e0b\u4e00\u8df3\u662f\u5426\u53ef\u4ee5\u56de\u5230\u8d77\u70b9": 316, "\u6307\u4ee3": 316, "\u4ece\u800c\u5f62\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a": 316, "\u7684\u73af": 316, "\u5bf9\u4e8e\u68c0\u6d4b\u5230\u7684\u73af": 316, "\u67e5\u8be2\u8fd8\u901a\u8fc7": 316, "\u64cd\u4f5c\u5c55\u793a\u6bcf\u4e2a\u904d\u5386\u5668\u7684\u5b8c\u6210\u8def\u5f84\u4fe1\u606f": 316, "\u64cd\u4f5c\u7c7b\u4f3csql\u4e2d\u7684top": 316, "\u5b83\u8868\u8fbe\u4e86\u67e5\u8be2\u7ed3\u679c\u4ec5\u9700\u8981\u5305\u542b\u4e00\u4e2a\u8fd9\u6837\u7684\u8def\u5f84": 316, "\u5982\u679c\u6709\u7684\u8bdd": 316, "gie\u652f\u6301apach": 316, "tinkerpop\u5b9a\u4e49\u7684\u5c5e\u6027\u56fe\u6a21\u578b\u548cgremlin\u904d\u5386\u67e5\u8be2": 316, "\u4e14\u5b9e\u73b0\u4e86\u4e00\u4e2a\u4e0etinkerpop": 316, "3\u548c3": 316, "4\u7248\u672c\u517c\u5bb9\u7684": 316, "\u670d\u52a1\u63a5\u53e3": 316, "\u9664\u6b64\u4e4b\u5916": 316, "\u6211\u4eec\u6269\u5c55\u4e86\u4e00\u4e9b\u8bed\u6cd5\u7cd6\u6765\u8fdb\u4e00\u6b65\u5f15\u5165\u4e00\u4e9b\u7b80\u6d01\u660e\u4e86\u7684expression\u8868\u793a": 316, "\u4e0b\u9762\u6211\u4eec\u5217\u51fa\u5f53\u524d\u5b9e\u73b0\u548capach": 316, "tinkerpop\u89c4\u8303\u7684\u4e3b\u8981\u5dee\u4e00\u70b9": 316, "\u5176\u4e2d\u4e00\u4e9b\u5dee\u5f02\u4f1a\u6709\u673a\u4f1a\u6d88\u9664": 316, "\u53e6\u4e00\u4e9b\u662f\u76ee\u524dgraphscope\u5b9a\u4f4d\u7684\u573a\u666f\u5dee\u5f02\u9020\u6210\u7684\u4e0d\u540c\u8bbe\u8ba1\u9009\u62e9": 316, "\u76ee\u524d\u7684": 316, "\u6280\u672f\u9884\u89c8\u7248\u5229\u7528\u4e86": 316, "\u9879\u76ee\u63d0\u4f9b\u7684\u5206\u5e03\u5f0f\u5185\u5b58\u5b58\u50a8\u4f5c\u4e3a\u8f93\u5165\u56fe": 316, "\u5b83\u652f\u6301\u4e00\u6b21\u8f7d\u5165": 316, "\u4e0d\u53ef\u4fee\u6539": 316, "\u7684\u56fe\u6a21\u578b\u6570\u636e": 316, "\u548c\u56fe\u5206\u7247\u5b58\u50a8\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4": 316, "\u5f53\u524d\u8bbe\u8ba1\u6709\u4e0b\u9762\u7684\u4e00\u4e9b\u9650\u5236": 316, "\u7ea6\u675f": 316, "\u6bcf\u4e2a\u56fe\u7684\u6570\u636e\u9700\u8981\u6ee1\u8db3\u4e8b\u5148\u5b9a\u4e49\u7684schema": 316, "\u5305\u62ec\u70b9": 316, "\u8fb9\u7684\u7c7b\u578b\u540d\u79f0": 316, "\u548c\u5c5e\u6027\u540d\u53ca\u503c\u7c7b\u578b": 316, "\u4e3b\u952e\u7ea6\u675f": 316, "\u6bcf\u4e2a\u9876\u70b9\u7c7b\u578b\u9700\u8981\u5305\u542b\u4e00\u4e2a\u7528\u6237\u53ef\u81ea\u5b9a\u4e49\u7684\u4e3b\u952e": 316, "\u540c\u65f6\u7cfb\u7edf\u4f1a\u4e3a\u6bcf\u4e2a\u70b9\u548c\u8fb9\u5bf9\u8c61": 316, "\u81ea\u52a8\u5206\u914d\u4ea7\u751f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u552f\u4e00\u6807\u8bc6": 316, "\u5bf9\u4e8e\u70b9\u6765\u8bf4": 316, "id\u7f16\u7801\u4e86\u7c7b\u578b": 316, "\u548c\u7528\u6237\u81ea\u5b9a\u4e49\u4e3b\u952e\u4fe1\u606f": 316, "\u6bcf\u4e2a\u70b9\u6216\u8fb9\u7684\u5c5e\u6027": 316, "\u53ef\u4ee5\u5305\u542b\u4e0b\u5217\u7c7b\u578b\u7684\u5c5e\u6027\u503c": 316, "\u56e0\u4e3a\u7cfb\u7edf\u7684\u5168\u5206\u5e03\u5f0f\u53ef\u6269\u5c55\u67b6\u6784": 316, "\u5f53\u524d\u5b9a\u4f4d\u7684\u573a\u666f\u548c\u5b9e\u73b0\u4e0d\u652f\u6301\u4e0b\u5217\u529f\u80fd": 316, "\u56fe\u4fee\u6539\u64cd\u4f5c": 316, "lambda\u548cgroovy\u8868\u8fbe\u5f0f\u6216\u81ea\u5b9a\u4e49\u51fd\u6570": 316, "\u7b49\u8868\u8fbe\u5f0f\u6216java\u8c03\u7528\u7b49\u7b49": 316, "\u5b9a\u5236gremlin\u56fe\u904d\u5386\u7b56\u7565": 316, "\u5373\u67e5\u8be2\u4f18\u5316\u7531graphscope\u7cfb\u7edf\u81ea\u52a8\u5b8c\u6210": 316, "\u4e8b\u52a1": 316, "\u4e8c\u7ea7\u7d22\u5f15\u76ee\u524d\u5c1a\u672a\u652f\u6301": 316, "\u7528\u6237\u5b9a\u4e49\u7684\u4e3b\u952e\u4f1a\u88ab\u81ea\u52a8\u7d22\u5f15": 316, "\u5f53\u524dgraphscope\u652f\u6301\u4e0b\u5217gremlin\u64cd\u4f5c": 316, "\u548c\u793a\u4f8b\u7528\u6cd5": 316, "\u8f93\u5165\u56fe": 316, "id1": 316, "id2": 316, "labelnam": 316, "labelname1": 316, "labelname2": 316, "\u901a\u8fc7expression\u5b9e\u73b0\u8fc7\u6ee4": 316, "\u8bed\u6cd5\u7cd6": 316, "\u4ee3\u8868head\u8282\u70b9\u7684age\u5c5e\u6027": 316, "\u4ee3\u8868": 316, "\u8282\u70b9\u7684age\u5c5e\u6027": 316, "head\u8282\u70b9\u7684a\u5c5e\u6027\u662f\u6574\u6570\u6570\u7ec4\u7c7b\u578b": 316, "\u901a\u8fc7expression\u5b9e\u73b0\u4f4d\u8fd0\u7b97": 316, "head\u8282\u70b9\u7684number\u5c5e\u6027\u662f\u6574\u578b": 316, "\u901a\u8fc7expression\u5b9e\u73b0\u7b97\u6570\u8fd0\u7b97": 316, "head\u8282\u70b9\u7684number\u548cage\u5c5e\u6027\u90fd\u662f\u6574\u578b": 316, "\u901a\u8fc7expression\u5b9e\u73b0\u6307\u6570\u8fd0\u7b97": 316, "dedup": 316, "substr": 316, "contant": 316, "aaa": 316, "otherv": 316, "flatmap": 316, "\u591a\u91cd\u6620\u5c04": 316, "bothv": 316, "\u627e\u5230\u6240\u6709\u4ece": 316, "\u5f00\u59cb\u901a\u8fc7": 316, "\u8fb9\u7c7b\u578b\u5411\u5916\u6269\u5c55": 316, "\u8df3\u7684\u6240\u6709\u7b80\u5355\u8def\u5f84": 316, "\u70b9\u4e0d\u91cd\u590d": 316, "\u5e76\u4e14\u53ea\u4fdd\u5b58path\u7684\u6700\u672b\u7aef\u70b9": 316, "\u8df3\u7684\u6240\u6709\u4efb\u610f\u8def\u5f84": 316, "\u70b9\u53ef\u91cd\u590d": 316, "\u8f93\u51fa\u6240\u6709\u5c5e\u6027": 316, "\u805a\u5408": 316, "groupbi": 316, "groupby\u591a\u4e2akei": 316, "\u5e76\u4e14\u4e3a\u6bcf\u4e2akey\u8bbe\u7f6e\u522b\u540d": 316, "groupby\u591a\u4e2avalu": 316, "\u5e76\u4e14\u4e3a\u6bcf\u4e2avalue\u8bbe\u7f6e\u522b\u540d": 316, "\u5373\u53d6\u524dk\u4e2a\u7ed3\u679c": 316, "graphscope\u6682\u65f6\u4e0d\u652f\u6301\u4e0b\u5217gremlin\u64cd\u4f5c": 316, "\u4f1a\u9010\u6b65\u652f\u6301": 316, "\u53ef\u4ee5\u901a\u8fc7path": 316, "expansion\u8bed\u6cd5\u7cd6\u5b9e\u73b0": 316, "\u57fa\u4e8e\u96c6\u5408\u7684local\u8ba1\u7b97": 316, "\u67e5\u8be2\u8ba1\u5212\u89e3\u91ca": 316, "\u67e5\u8be2\u6267\u884c\u6027\u80fd\u5206\u6790": 316, "\u81ea\u5b9a\u4e49\u72b6\u6001\u8ba1\u7b97": 316, "\u8ba1\u7b97\u5b50\u56fe": 316, "\u76ee\u524d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5316\u7248\u672c": 316, "\u652f\u6301\u62bd\u53d6\u5b50\u56fe\u5199\u5165vineyard\u5b58\u50a8": 316, "cap": 316, "\u8bbf\u95ee\u81ea\u5b9a\u4e49\u72b6\u6001": 316, "\u4f8b\u5982pagerank\u548cshortestpath": 316, "\u8fd9\u90e8\u5206\u529f\u80fdgraphscope\u901a\u8fc7\u56fe\u5206\u6790\u5f15\u64ce\u548cnetworkx\u517c\u5bb9\u63a5\u53e3\u63d0\u4f9b": 316, "graphscope\u4e2d\u7684\u56fe\u5b66\u4e60\u5f15\u64ce": 317, "\u662f\u9762\u5411\u5927\u89c4\u6a21\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u7814\u53d1\u548c\u5e94\u7528\u800c\u8bbe\u8ba1\u7684\u4e00\u6b3e\u5206\u5e03\u5f0f\u6846\u67b6": 317, "\u5b83\u4ece\u5b9e\u9645\u95ee\u9898\u51fa\u53d1": 317, "\u63d0\u70bc\u548c\u62bd\u8c61\u4e86\u4e00\u5957\u9002\u5408\u4e8e\u5f53\u4e0b\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u7f16\u7a0b\u8303\u5f0f": 317, "\u5e76\u5df2\u7ecf\u6210\u529f\u5e94\u7528\u5728\u963f\u91cc\u5df4\u5df4": 317, "\u5185\u90e8\u7684\u8bf8\u5982\u641c\u7d22\u63a8\u8350": 317, "\u77e5\u8bc6\u56fe\u8c31\u7b49\u4f17\u591a\u573a\u666f": 317, "gl\u6ce8\u91cd\u53ef\u79fb\u690d\u548c\u53ef\u6269\u5c55": 317, "\u5bf9\u4e8e\u5f00\u53d1\u8005\u66f4\u4e3a\u53cb\u597d": 317, "\u4e3a\u4e86\u5e94\u5bf9gnn\u5728\u5de5\u4e1a\u573a\u666f\u4e2d\u7684\u591a\u6837\u6027\u548c\u5feb\u901f\u53d1\u5c55\u7684\u9700\u6c42": 317, "\u57fa\u4e8egl": 317, "\u5f00\u53d1\u8005\u53ef\u4ee5\u5b9e\u73b0\u4e00\u79cdgnn\u7b97\u6cd5": 317, "\u6216\u8005\u9762\u5411\u5b9e\u9645\u573a\u666f\u5b9a\u5236\u5316\u4e00\u79cd\u56fe\u7b97\u5b50": 317, "\u4f8b\u5982\u56fe\u91c7\u6837": 317, "\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5165\u95e8\u6559\u7a0b\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528": 317, "\u6765\u6784\u5efa\u7528\u6237\u81ea\u5df1\u7684cnn\u6a21\u578b": 317, "\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u5b9e\u73b0\u76ee\u524d\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u5f0f": 317, "\u7b2c\u4e00\u79cd\u662f\u76f4\u63a5\u4ee5\u5168\u56fe\u4e3a\u8ba1\u7b97\u5bf9\u8c61": 317, "\u539f\u59cb\u7684gcn": 317, "gat\u7b49\u7b97\u6cd5\u90fd\u662f\u8fd9\u79cd\u5b9e\u73b0\u601d\u8def": 317, "\u4e00\u822c\u4f1a\u76f4\u63a5\u7528\u90bb\u63a5\u77e9\u9635\u8fdb\u884c\u8ba1\u7b97": 317, "\u7136\u800c\u8fd9\u79cd\u65b9\u6cd5\u5728\u5927\u89c4\u6a21\u56fe\u4e0a\u4f1a\u6d88\u8017\u5927\u91cf\u5185\u5b58": 317, "\u5bfc\u81f4\u65e0\u6cd5\u9ad8\u6548\u8bad\u7ec3\u751a\u81f3\u65e0\u6cd5\u8bad\u7ec3": 317, "\u7b2c\u4e8c\u79cd\u601d\u8def\u662f\u5c06\u5168\u56fe\u5206\u6210\u82e5\u5e72\u5b50\u56fe": 317, "\u7528\u6df1\u5ea6\u5b66\u4e60\u91cc\u5e38\u7528\u7684\u6279\u6b21\u8bad\u7ec3\u65b9\u6cd5\u8fdb\u884c\u8bad\u7ec3": 317, "\u6bcf\u6b21\u8bad\u7ec3\u4e00\u4e2a\u5b50\u56fe": 317, "\u4ee3\u8868\u65b9\u6cd5\u662fgraphsag": 317, "graphsaint\u7b49": 317, "\u4e3b\u8981\u9762\u5411\u8d85\u5927\u89c4\u6a21\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u5f00\u53d1": 317, "\u5b83\u7531\u5e95\u5c42\u7684\u4e00\u4e2a\u56fe\u5f15\u64ce\u548c\u4e0a\u5c42\u7684": 317, "\u7b97\u6cd5\u6a21\u578b\u6784\u6210": 317, "\u56fe\u5f15\u64ce\u5206\u5e03\u5f0f\u5b58\u50a8\u56fe\u7684\u62d3\u6251\u548c\u5c5e\u6027\u4fe1\u606f\u5e76\u63d0\u4f9b\u9ad8\u6548\u7684\u56fe\u91c7\u6837\u67e5\u8be2": 317, "\u7b97\u6cd5\u6a21\u578b\u901a\u8fc7\u8c03\u7528\u56fe\u91c7\u6837\u548c\u67e5\u8be2\u63a5\u53e3\u83b7\u53d6\u5b50\u56fe\u5e76\u8fdb\u884c\u8ba1\u7b97": 317, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u7edf\u4e00\u7f16\u7a0b\u6846\u67b6": 317, "\u652f\u6301\u5e38\u89c1\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u5f00\u53d1": 317, "\u77e5\u8bc6\u56fe\u8c31\u6a21\u578b": 317, "\u56fe\u5d4c\u5165\u7b97\u6cd5\u7b49": 317, "\u5e76\u4e14\u548c\u4e3b\u6d41\u7684\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u517c\u5bb9": 317, "\u5305\u62ectensorflow": 317, "\u548cpytorch": 317, "\u76ee\u524d\u6211\u4eec\u5b9e\u73b0\u4e86\u57fa\u4e8etensorflow\u7684\u6a21\u578b": 317, "\u57fa\u4e8epytorch\u7684\u6a21\u578b\u6b63\u5728\u5f00\u53d1\u4e2d": 317, "\u91c7\u7528\u91c7\u6837\u5b50\u56fe\u518d\u8ba1\u7b97\u7684\u65b9\u5f0f\u6784\u5efa\u548c\u8bad\u7ec3\u6a21\u578b": 317, "\u6211\u4eec\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u57fa\u672c\u7684\u6570\u636e\u6a21\u578b": 317, "\u662f\u56fe\u5b66\u4e60\u7b97\u6cd5\u7f16\u7a0b\u7684\u57fa\u672c\u6570\u636e\u5bf9\u8c61": 317, "\u5b83\u7531\u4e00\u4e2abatch\u7684\u79cd\u5b50\u70b9\u6216\u8005\u8fb9": 317, "\u79f0\u4e3a": 317, "\u4ee5\u53ca\u4ed6\u4eec\u7684": 317, "\u611f\u53d7\u91ce": 317, "\u591a\u8df3\u90bb\u5c45": 317, "\u7ec4\u6210": 317, "\u7531\u56fe\u91c7\u6837\u548c\u67e5\u8be2\u5230\u7684\u6570\u636e\u7ec4\u6210": 317, "\u6211\u4eec\u5b9e\u73b0": 317, "\u4e86\u5e38\u89c1\u7684\u90bb\u5c45\u91c7\u6837": 317, "\u56fe\u904d\u5386\u548c\u8d1f\u91c7\u6837\u65b9\u6cd5": 317, "\u91c7\u6837\u7684\u6570\u636e\u7ec4\u7ec7\u6210numpy\u683c\u5f0f\u7684": 317, "\u540e\u6839\u636e\u4e0d\u540c\u7684\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce\u8f6c\u6362\u6210\u5bf9\u5e94\u7684tensor\u683c\u5f0f": 317, "\u7136\u540e\u7528": 317, "\u7ba1\u7406": 317, "\u5230": 317, "\u7684\u8f6c\u6362": 317, "\u63d0\u4f9b\u8bad\u7ec3\u6240\u9700\u8981\u7684\u6570\u636e": 317, "\u6240\u6709\u7684\u56fe\u5b66\u4e60\u6a21\u578b\u53ef\u4ee5\u62bd\u8c61\u4e3a\u4f7f\u7528\u7f16\u7801\u5668\u5c06": 317, "\u7f16\u7801\u6210\u6700\u7ec8\u7684\u70b9": 317, "\u8fb9\u6216\u8005\u5b50\u56fe\u7684": 317, "\u5411\u91cf": 317, "\u9996\u5148\u5229\u7528\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801\u539f\u59cb\u7684\u70b9\u548c\u8fb9\u4e0a\u7684\u7279\u5f81": 317, "\u7136\u540e\u5c06\u7279\u5f81\u7f16\u7801\u5668\u7f16\u7801\u540e\u7684": 317, "\u539f\u59cb\u5411\u91cf\u7528\u4e0d\u540c\u7684\u56fe\u7f16\u7801\u5668\u8fdb\u884c\u7f16\u7801": 317, "\u5f97\u5230\u6700\u7ec8\u7684\u8f93\u51fa": 317, "\u5bf9\u4e8e\u5927\u591a\u6570gnn\u6a21\u578b": 317, "\u56fe\u7f16\u7801\u5668": 317, "\u63d0\u4f9b\u4e86\u5982\u4f55\u805a\u5408\u90bb\u5c45\u4fe1\u606f\u5230\u81ea\u8eab\u8282\u70b9\u6216\u8005\u8fb9\u7684\u62bd\u8c61": 317, "\u7528\u4e0d\u540c\u7684\u56fe\u5377\u79ef\u5c42\u5b9e\u73b0": 317, "\u57fa\u4e8e\u4e0a\u9762\u4ecb\u7ecd\u7684\u6570\u636e\u6a21\u578b\u548c\u7f16\u7801\u5668": 317, "\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5feb\u901f\u5730\u5b9e\u73b0\u4e0d\u540c\u7684\u56fe\u5b66\u4e60\u7b97\u6cd5": 317, "\u5728\u63a5\u4e0b\u6765\u4e00\u7ae0\u91cc": 317, "\u6211\u4eec\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u5f00\u53d1\u4e00\u4e2agnn\u6a21\u578b": 317, "\u8fd9\u7bc7\u6587\u6863\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u7528": 317, "\u63d0\u4f9b\u7684\u57fa\u672capi\u914d\u5408\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce": 317, "\u5982tensorflow": 317, "\u6765\u6784\u5efa\u56fe\u5b66\u4e60\u7b97\u6cd5": 317, "\u6211\u4eec\u4ee5\u56fe\u795e\u7ecf\u7f51\u7edc\u91cc\u6700\u6d41\u884c\u7684gcn\u6a21\u578b\u505a\u4e3a\u793a\u4f8b\u6765\u8bf4\u660e": 317, "\u901a\u5e38\u6765\u8bf4": 317, "\u5b9e\u73b0\u4e00\u4e2a\u7b97\u6cd5\u9700\u8981\u4e0b\u9762\u56db\u4e2a\u6b65\u9aa4": 317, "\u6307\u5b9a\u91c7\u6837\u6a21\u5f0f": 317, "\u7528\u56fe\u91c7\u6837": 317, "\u67e5\u8be2\u65b9\u6cd5\u91c7\u6837\u5b50\u56fe\u5e76\u7ec4\u7ec7\u6210": 317, "\u6211\u4eec\u62bd\u8c61\u4e864\u4e2a\u57fa\u672c\u7684\u51fd\u6570": 317, "\u7528\u6765\u904d\u5386\u56fe\u6570\u636e\u4ea7\u751f": 317, "positve_sampl": 317, "\u4ee5\u8fd9\u4e9b": 317, "\u4e3a\u8f93\u5165\u4ea7\u751f": 317, "\u8bad\u7ec3\u7684\u6b63\u6837\u672c": 317, "\u5bf9\u4e8e\u65e0\u76d1\u7763\u5b66\u4e60": 317, "\u4ea7\u751f\u8d1f\u6837\u672c": 317, "gnns\u9700\u8981\u805a\u5408\u90bb\u5c45\u4fe1\u606f": 317, "\u6211\u4eec\u62bd\u8c61\u4e86": 317, "\u6765\u91c7\u6837\u90bb\u5c45": 317, "\u6700\u540e\u5c06": 317, "\u4ea7\u751f\u7684": 317, "\u4ee5\u53ca\u91c7\u6837\u51fa\u7684\u90bb\u5c45\u7ec4\u6210": 317, "\u6784\u5efa\u56fe\u6570\u636e\u6d41": 317, "\u7b97\u6cd5\u6a21\u578b\u57fa\u4e8e\u7c7b\u4f3ctensorflow\u7684\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce\u6784\u5efa": 317, "\u6240\u4ee5\u91c7\u6837\u51fa\u7684": 317, "\u9700\u8981\u5148\u8f6c\u6362\u6210tensor\u683c\u5f0f": 317, "\u624d\u80fd\u4f7f\u7528": 317, "\u6765\u5c01\u88c5\u8fd9\u4e00\u8f6c\u6362\u8fc7\u7a0b": 317, "\u53ef\u4ee5\u4ea7\u751f\u4e00\u4e2a\u8fed\u4ee3\u5668\u6765\u8fdb\u884c\u6279\u6b21\u8bad\u7ec3": 317, "\u5b9a\u4e49\u7f16\u7801\u5668": 317, "\u7f16\u7801\u5668\u548c\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801": 317, "\u5f97\u5230": 317, "\u540e": 317, "\u6211\u4eec\u9996\u5148\u5c06\u539f\u59cb\u7684\u70b9": 317, "\u8fb9\u7279\u5f81\u7528\u4e00\u4e9b\u5e38\u89c1\u7279\u5f81\u7f16\u7801\u5668\u7f16\u7801\u6210\u539f\u59cb\u5411\u91cf": 317, "\u505a\u4e3agnns\u6a21\u578b\u7684\u7279\u5f81\u8f93\u5165": 317, "\u7136\u540e\u7528\u56fe\u7f16\u7801\u5668\u5904\u7406": 317, "\u5c06\u90bb\u5c45\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u6c47\u805a\u5e76": 317, "\u548c\u81ea\u8eab\u7279\u5f81\u8fdb\u884c\u7ec4\u5408": 317, "\u5f97\u5230\u6700\u540e\u7684\u70b9\u6216\u8005\u8fb9\u7684\u5411\u91cf": 317, "\u7f16\u5199\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": 317, "\u9009\u62e9\u9002\u5f53\u7684\u635f\u5931\u51fd\u6570": 317, "\u5e76\u7f16\u5199\u8bad\u7ec3\u8fc7\u7a0b": 317, "\u5185\u7f6e\u4e86\u4e00\u4e9b\u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\u548c\u4f18\u5316\u5668": 317, "\u5e76\u5bf9\u8bad\u7ec3\u8fc7\u7a0b\u8fdb\u884c\u4e86\u5c01\u88c5": 317, "\u540c\u65f6\u652f\u6301\u5355\u673a\u548c\u5206\u5e03\u5f0f\u8bad\u7ec3": 317, "\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u635f\u5931\u51fd\u6570": 317, "\u4f18\u5316\u5668\u548c\u8bad\u7ec3\u8fc7\u7a0b": 317, "\u4e0b\u9762\u6211\u4eec\u6309\u7167\u4e0a\u9762\u4ecb\u7ecd\u76844\u4e2a\u6b65\u9aa4\u6765\u4ecb\u7ecd\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2agcn\u6a21\u578b": 317, "\u6211\u4eec\u4f7f\u7528cora\u6570\u636e\u96c6\u4ee5\u70b9\u5206\u7c7b\u4efb\u52a1\u505a\u4e3a\u793a\u4f8b": 317, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u8f6c\u6362\u811a\u672c": 317, "\u6765": 317, "\u5c06\u539f\u59cbcora\u8f6c\u6362\u6210": 317, "\u9700\u8981\u7684\u683c\u5f0f": 317, "\u8fd0\u884c\u5b8c\u8fd9\u4e2a\u811a\u672c\u540e\u4f60\u53ef\u4ee5\u5f97\u5230\u4e0b\u97625\u4e2a\u6587\u4ef6": 317, "\u5206\u522b\u662f\u70b9\u8868": 317, "\u8fb9\u8868\u4ee5\u53ca\u7528\u6765\u533a\u5206\u8bad\u7ec3": 317, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u7684\u70b9\u8868": 317, "\u7136\u540e\u53ef\u4ee5\u7528\u4e0b\u9762\u4ee3\u7801\u6765\u6784\u5efa\u56fe": 317, "\u540e\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u5c06\u56fe\u52a0\u8f7d\u8fdb\u5185\u5b58": 317, "gcn\u6a21\u578b\u7ee7\u627f\u81ea\u57fa\u672c\u7684\u5b66\u4e60\u6a21\u578b\u7c7b": 317, "\u53ea\u9700\u8981\u91cd\u5199\u57fa\u7c7b\u7684\u91c7\u6837": 317, "\u6a21\u578b\u6784\u5efa\u7b49\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b8c\u6210gcn\u7684\u6784\u5efa": 317, "\u524d\u4e24\u4e2a\u51fd\u6570\u7528\u6765\u91c7\u6837\u79cd\u5b50\u8282\u70b9\u548c\u6b63\u6837\u672c": 317, "\u91c7\u6837\u90bb\u5c45\u5e76\u7ec4\u7ec7": 317, "\u56de\u4e00\u8df3\u90bb\u5c45": 317, "\u56e0\u6b64\u4e0a\u9762\u4ee3\u7801\u662f\u91c7\u6837\u4e8c\u8df3\u90bb\u5c45": 317, "\u8fd9\u91cc\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5": 317, "\u5bf9\u4e8e\u539f\u59cbgcn\u6765\u8bf4\u56e0\u4e3a\u8981\u83b7\u5f97\u6bcf\u4e2a\u70b9\u7684\u6240\u6709\u90bb\u5c45": 317, "\u56e0\u6b64\u9009\u62e9": 317, "\u91c7\u6837\u5b8c\u540e\u5c06\u7ed3\u679c\u7ec4\u7ec7": 317, "\u6210": 317, "\u8fd4\u56de": 317, "\u51fd\u6570\u91cc\u6211\u4eec\u4f7f\u7528\u5c01\u88c5\u7684": 317, "\u6765\u628a": 317, "\u8f6c\u6362\u6210\u5bf9\u5e94\u7684": 317, "\u5305\u542b\u4e00\u4e2a\u6570\u636e\u6d41\u8fed\u4ee3\u5668\u548c\u82e5\u5e72": 317, "\u4f60\u53ef\u4ee5\u4ece": 317, "\u83b7\u53d6\u548c\u524d\u9762": 317, "\u5bf9\u5e94\u7684": 317, "\u9996\u5148\u4f7f\u7528\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801\u539f\u59cb\u7279\u5f81": 317, "\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528": 317, "\u5373\u8fd4\u56de\u81ea\u8eab\u5373\u53ef": 317, "\u56e0\u4e3a": 317, "cora\u7684\u7279\u5f81\u5df2\u7ecf\u662f\u5904\u7406\u8fc7\u7684\u5411\u91cf\u683c\u5f0f\u4e86": 317, "\u5bf9\u4e8e\u65e2\u6709\u79bb\u6563\u7279\u5f81\u7531\u4e8e\u8fde\u7eed\u7279\u5f81\u7684\u60c5\u51b5": 317, "\u66f4\u591aencoder\u8bf7\u53c2\u8003": 317, "\u5c42\u6784\u5efa\u56fe\u7f16\u7801\u5668": 317, "gcn\u6bcf\u4e2a\u8282\u70b9\u91c7\u6837\u5168\u90e8\u90bb\u5c45": 317, "\u90bb\u5c45\u4ee5\u7a00\u758f\u683c\u5f0f\u7ec4\u7ec7": 317, "\u6240\u4ee5\u8fd9\u91cc\u4f7f\u7528": 317, "\u90bb\u5c45\u5bf9\u9f50\u7684\u6a21\u578b\u53ef\u4ee5\u53c2\u8003graphsage\u7684\u5b9e\u73b0": 317, "\u5bf9\u4e8ecora\u70b9\u5206\u7c7b\u6a21\u578b": 317, "\u6211\u4eec\u9009\u62e9\u5bf9\u5e94\u7684tensorflow\u91cc\u7684\u5206\u7c7b\u635f\u5931\u51fd\u6570\u5373\u53ef": 317, "\u7136\u540e\u5728": 317, "\u51fd\u6570\u91cc\u5c06\u7f16\u7801\u5668\u548c\u635f\u5931\u51fd\u6570\u7ec4\u7ec7\u8d77\u6765": 317, "\u6700\u7ec8\u8fd4\u56de\u4e00\u4e2a\u6570\u636e\u8fed\u4ee3\u5668\u548c\u635f\u5931\u51fd\u6570": 317, "\u63a5\u7740\u4f7f\u7528\u5c01\u88c5\u7684\u5355\u673a\u8bad\u7ec3\u8fc7\u7a0b": 317, "\u6765\u8fdb\u884c\u8bad\u7ec3": 317, "\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u4e00\u4e2agcn\u6a21\u578b\u7684\u7f16\u5199": 317, "\u5b8c\u6574\u4ee3\u7801\u8bf7\u53c2\u8003": 317, "\u76ee\u5f55": 317, "\u6211\u4eec\u5b9e\u73b0\u4e86gcn": 317, "gat\u7b49\u6a21\u578b": 317, "\u4f60\u53ef\u4ee5\u53c2\u8003\u76f8\u4f3c\u7684\u6a21\u578b\u4ee3\u7801\u505a\u4e3a\u5f00\u59cb": 317, "\u5c5e\u6027\u56fe": 318, "\u56fe\u4e0a\u7684\u70b9": 318, "\u8fb9\u90fd\u5e26\u6709\u6807\u7b7e": 318, "\u6bcf\u4e2a\u6807\u7b7e\u90fd\u53ef\u80fd\u5e26\u6709\u8bb8\u591a\u5c5e\u6027": 318, "\u5185\u7f6e\u4e86\u4e00\u7ec4\u6d41\u884c\u7684\u6570\u636e\u96c6": 318, "\u4ee5\u53ca\u8f7d\u5165\u4ed6\u4eec\u7684\u5de5\u5177\u51fd\u6570": 318, "\u5e2e\u52a9\u7528\u6237\u66f4\u5bb9\u6613\u7684\u4e0a\u624b": 318, "\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50": 318, "\u5728\u5355\u673a\u6a21\u5f0f\u4e0b": 318, "\u4f1a\u5c06\u6570\u636e\u6587\u4ef6\u4e0b\u8f7d\u5230": 318, "\u5e76\u4e14\u4f1a\u4fdd\u7559\u4ee5\u4f9b\u5c06\u6765\u4f7f\u7528": 318, "\u96c6\u7fa4\u6a21\u5f0f\u4e0b": 318, "\u5c06\u6570\u636e\u6587\u4ef6\u4e0b\u8f7d\u5230": 318, "\u7684\u672c\u5730\u5b58\u50a8\u6bd4\u8f83\u590d\u6742": 318, "\u6240\u4ee5\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6302\u8f7d\u4e86": 318, "\u7684\u6570\u636e\u96c6\u6876\u7684\u4e00\u4e2a\u5bb9\u5668": 318, "\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u91cc": 318, "\u6211\u4eec\u5c06\u8f7d\u5165\u548c\u4e0a\u9762\u540c\u6837\u7684\u4e00\u5f20\u56fe": 318, "\u53ea\u4e0d\u8fc7\u8fd9\u6b21": 318, "\u90e8\u7f72\u5728\u96c6\u7fa4\u4e2d": 318, "\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 318, "\u7136\u540e\u5c06\u6570\u636e\u96c6\u6876\u6302\u8f7d\u5230": 318, "\u6b64\u8def\u5f84\u76f8\u5bf9\u4e8e": 318, "\u7684\u672c\u5730\u8def\u5f84": 318, "\u7136\u540e\u6211\u4eec\u5c06\u4f1a\u8bdd\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165": 318, "\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570": 318, "\u662f\u6211\u4eec\u901a\u8fc7": 318, "\u7684\u53c2\u6570\u6307\u5b9a\u7684\u6302\u8f7d\u8def\u5f84": 318, "\u662f\u8fd9\u4e2a\u6570\u636e\u96c6\u6240\u5728\u7684\u6587\u4ef6\u5939\u7684\u540d\u5b57": 318, "\u4f60\u53ef\u4ee5\u5728": 318, "\u627e\u5230\u6240\u6709\u76ee\u524d\u652f\u6301\u7684\u6570\u636e\u96c6": 318, "\u6587\u4ef6\u4e2d\u5305\u62ec\u8be6\u7ec6\u7684\u4ecb\u7ecd\u548c\u7528\u6cd5": 318, "\u7136\u800c": 318, "\u66f4\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u7528\u6237\u9700\u8981\u4f7f\u7528\u81ea\u5df1\u7684\u6570\u636e\u96c6": 318, "\u5e76\u505a\u4e00\u4e9b\u6570\u636e\u5206\u6790\u7684\u5de5\u4f5c": 318, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fd\u6570\u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u5c5e\u6027\u56fe\u7684\u6a21\u578b": 318, "\u5e76\u4ee5\u5c06\u5c5e\u6027\u56fe\u8f7d\u5165": 318, "\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 318, "\u7136\u540e\u5728\u6b64\u4f1a\u8bdd\u5185\u521b\u5efa\u56fe": 318, "\u6709\u51e0\u4e2a\u65b9\u6cd5\u6765\u914d\u7f6e": 318, "\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u589e\u91cf\u7684\u6784\u5efa\u4e00\u4e2a\u5c5e\u6027\u56fe": 318, "\u6211\u4eec\u5c06\u4f7f\u7528": 318, "\u91cc\u7684\u6587\u4ef6\u505a\u5b8c\u6b64\u7bc7\u6559\u7a0b\u7684\u793a\u4f8b": 318, "\u627e\u5230\u6e90\u6570\u636e": 318, "\u4f60\u53ef\u4ee5\u968f\u65f6\u4f7f\u7528": 318, "\u6765\u67e5\u770b\u56fe\u7684\u6a21\u578b": 318, "\u6211\u4eec\u53ef\u4ee5\u5411\u56fe\u5185\u6dfb\u52a0\u4e00\u4e2a\u70b9\u6807\u7b7e": 318, "\u76f8\u5173\u7684\u53c2\u6570\u542b\u4e49\u5982\u4e0b": 318, "\u4ee3\u8868\u6570\u636e\u6e90": 318, "\u6307\u793a": 318, "\u53ef\u4ee5\u5728\u54ea\u91cc\u627e\u5230\u6e90\u6570\u636e": 318, "\u53ef\u4ee5\u4e3a\u6587\u4ef6\u8def\u5f84": 318, "\u6570\u7ec4\u7b49": 318, "\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50": 318, "\u8fd9\u5c06\u4f1a\u4ece\u6587\u4ef6": 318, "\u8f7d\u5165\u6570\u636e": 318, "\u5e76\u4e14\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a": 318, "\u4f46\u662f\u6709\u4e0d\u540c\u7684\u8d77\u59cb\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u6807\u7b7e": 318, "\u70b9\u6807\u7b7e\u7684\u540d\u5b57": 318, "\u9ed8\u8ba4\u4e3a": 318, "\u4e00\u5f20\u56fe\u4e2d\u4e0d\u80fd\u542b\u6709\u540c\u540d\u7684\u6807\u7b7e": 318, "\u6240\u4ee5\u82e5\u6709\u4e24\u4e2a\u6216\u4ee5\u4e0a\u7684\u6807\u7b7e": 318, "\u7528\u6237\u5fc5\u987b\u6307\u5b9a\u6807\u7b7e\u540d\u5b57": 318, "\u603b\u662f\u7ed9\u6807\u7b7e\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u540d\u5b57\u4e5f\u6709\u597d\u5904": 318, "\u53ef\u4ee5\u4e3a\u4efb\u4f55\u6807\u8bc6\u7b26": 318, "\u4e3e\u4e2a\u4f8b\u5b50": 318, "\u7ed3\u679c\u4e0e\u4e0a\u4e00\u6b65\u7ed3\u679c\u9664\u4e86\u6807\u7b7e\u540d\u5b8c\u5168\u4e00\u81f4": 318, "\u4e00\u7ec4\u5c5e\u6027\u540d\u5b57": 318, "\u53ef\u9009\u9879": 318, "\u5c5e\u6027\u540d\u5e94\u5f53\u4e0e\u6570\u636e\u4e2d\u7684\u9996\u884c\u8868\u5934\u4e2d\u7684\u540d\u5b57\u76f8\u4e00\u81f4": 318, "\u5982\u679c\u7701\u7565\u6216\u4e3a": 318, "\u9664id\u5217\u4e4b\u5916\u7684\u6240\u6709\u5217\u90fd\u5c06\u4f1a\u4f5c\u4e3a\u5c5e\u6027\u8f7d\u5165": 318, "\u5982\u679c\u4e3a\u7a7a\u5217\u8868": 318, "\u90a3\u4e48\u5c06\u4e0d\u4f1a\u8f7d\u5165\u4efb\u4f55\u5c5e\u6027": 318, "\u5176\u4ed6\u60c5\u51b5\u4e0b": 318, "\u53ea\u4f1a\u8f7d\u5165\u6307\u5b9a\u4e86\u7684\u5217\u4f5c\u4e3a\u5c5e\u6027": 318, "\u6bd4\u5982\u8bf4": 318, "\u5217\u7684\u5217\u540d": 318, "\u6b64\u5217\u5c06\u5728\u8f7d\u5165\u8fb9\u65f6\u88ab\u7528\u505a\u8d77\u59cb\u70b9": 318, "\u6216\u76ee\u6807\u70b9": 318, "\u5176\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32": 318, "\u6b64\u65f6\u6307\u4ee3\u5217\u540d": 318, "\u6216\u8005\u53ef\u4ee5\u662f\u4e00\u4e2a\u6b63\u6574\u6570": 318, "\u4ee3\u8868\u7b2c\u51e0\u5217": 318, "\u4ece0\u5f00\u59cb": 318, "\u9ed8\u8ba4\u4e3a\u7b2c0\u5217": 318, "\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5411\u56fe\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u8fb9\u6807\u7b7e": 318, "\u4e0e\u6784\u5efa\u70b9\u6807\u7b7e\u4e00\u8282\u4e2d\u7684": 318, "\u7c7b\u4f3c": 318, "\u4e3a\u6307\u793a\u53bb\u54ea\u91cc\u8bfb\u6570\u636e\u7684\u8def\u5f84": 318, "\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50": 318, "\u8fd9\u5c06\u4f1a\u8f7d\u5165\u4e00\u4e2a\u6807\u7b7e\u540d\u4e3a": 318, "\u6e90\u8282\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u8282\u70b9\u6807\u7b7e\u90fd\u4e3a": 318, "\u7b2c\u4e00\u5217\u4f5c\u4e3a\u8d77\u70b9\u7684\u70b9id": 318, "\u7b2c\u4e8c\u5217\u4f5c\u4e3a\u7ec8\u70b9\u7684\u70b9id": 318, "\u5176\u4ed6\u5217\u90fd\u4f5c\u4e3a\u5c5e\u6027": 318, "\u8fb9\u7684\u6807\u7b7e\u540d": 318, "\u63a8\u8350\u603b\u662f\u4f7f\u7528\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u6807\u7b7e\u540d": 318, "\u4e00\u5217\u5c5e\u6027": 318, "\u610f\u4e49\u4e0e\u884c\u4e3a\u90fd\u548c\u70b9\u4e2d\u7684\u4e00\u81f4": 318, "\u8d77\u70b9\u7684\u6807\u7b7e\u540d\u4e0e\u7ec8\u70b9\u7684\u6807\u7b7e\u540d": 318, "\u6211\u4eec\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u5df2\u7ecf\u770b\u5230\u8fc7\u4e86": 318, "\u5728\u90a3\u91cc\u5c06\u5176\u8d4b\u503c\u4e3a": 318, "\u8fd9\u4e24\u8005\u53ef\u4ee5\u53d6\u4e0d\u540c\u7684\u503c": 318, "\u4e3e\u4f8b\u6765\u8bf4": 318, "person_likes_comment_0_0": 318, "\u8d77\u70b9\u7684": 318, "\u5217\u540d\u4e0e\u7ec8\u70b9\u7684": 318, "\u5217\u540d": 318, "\u9ed8\u8ba4\u5206\u522b\u4e3a": 318, "\u610f\u4e49\u548c\u8868\u73b0\u4e0e\u70b9\u4e2d\u7684": 318, "\u4e0d\u540c\u7684\u662f\u9700\u8981\u4e24\u5217": 318, "\u4e00\u5217\u4e3a\u8d77\u70b9": 318, "\u4e00\u5217\u4e3a\u7ec8\u70b9": 318, "\u4ee5\u4e0b\u662f\u4e2a\u4f8b\u5b50": 318, "\u8fd9\u662f\u4e00\u4e9b\u7528\u6765\u5904\u7406\u7279\u522b\u7b80\u5355\u6216\u7279\u522b\u590d\u6742\u7684\u9ad8\u7ea7\u4e00\u4e9b\u7684\u7528\u6cd5": 318, "\u5982\u679c\u56fe\u4e2d\u53ea\u5b58\u5728\u4e00\u4e2a\u70b9\u6807\u7b7e": 318, "\u90a3\u4e48\u53ef\u4ee5\u7701\u7565\u6307\u5b9a\u70b9\u6807\u7b7e": 318, "\u5c06\u4f1a\u63a8\u65ad\u8d77\u59cb\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u6807\u7b7e\u4e3a\u8fd9\u4e00\u4e2a\u70b9\u6807\u7b7e": 318, "\u5982\u679c\u7528\u6237\u7684": 318, "\u53d6\u503c\u4e3a\u56fe\u4e2d\u4e0d\u5b58\u5728\u7684\u70b9\u6807\u7b7e": 318, "\u4f1a\u4ece\u8fb9\u7684\u7aef\u70b9\u4e2d\u805a\u5408\u51fa\u70b9\u8868": 318, "\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b": 318, "\u4e00\u79cd\u8fb9\u7684\u6807\u7b7e\u53ef\u80fd\u8fde\u63a5\u4e86\u4e24\u79cd\u53ca\u4ee5\u4e0a\u7684\u70b9": 318, "\u5728\u4e0b\u9762\u7684\u5c5e\u6027\u56fe\u4e2d": 318, "\u6709\u4e00\u4e2a\u540d\u4e3a": 318, "\u7684\u8fb9\u6807\u7b7e": 318, "\u8fde\u63a5\u4e86\u4e24\u79cd\u70b9\u6807\u7b7e": 318, "\u53ef\u4ee5\u6dfb\u52a0\u4e24\u6b21\u540d\u4e3a": 318, "person_likes_post_0_0": 318, "\u53ef\u4ee5\u4ece\u8f93\u5165\u6587\u4ef6\u4e2d\u63a8\u65ad\u70b9\u7684\u7c7b\u578b": 318, "\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u5de5\u4f5c\u7684\u5f88\u597d": 318, "\u7528\u6237\u6709\u65f6\u9700\u8981\u66f4\u591a\u7684\u81ea\u5b9a\u4e49\u80fd\u529b": 318, "\u4e3a\u4e86\u6ee1\u8db3\u6b64\u79cd\u9700\u6c42": 318, "\u53ef\u4ee5\u5728\u5c5e\u6027\u540d\u4e4b\u540e\u52a0\u5165\u4e00\u4e2a\u989d\u5916\u7c7b\u578b\u7684\u53c2\u6570": 318, "\u50cf\u8fd9\u6837": 318, "post_0_0": 318, "\u8fd9\u5c06\u4f1a\u5c06\u5c5e\u6027\u7684\u7c7b\u578b\u8f6c\u6362\u4e3a\u6307\u5b9a\u7684\u7c7b\u578b": 318, "\u6ce8\u610f\u5c5e\u6027\u540d\u5b57\u548c\u7c7b\u578b\u9700\u8981\u5728\u540c\u4e00\u4e2a\u5143\u7ec4\u4e2d": 318, "\u5728\u8fd9\u91cc": 318, "\u7684\u7c7b\u578b\u5c06\u4f1a\u662f": 318, "\u800c\u9ed8\u8ba4\u4e0d\u6307\u5b9a\u7684\u8bdd\u4e3a": 318, "\u5e38\u89c1\u7684\u4f7f\u7528\u573a\u666f\u662f\u6307\u5b9a": 318, "\u7b49\u7c7b\u578b": 318, "\u6709\u4e09\u4e2a\u914d\u7f6e\u5143\u4fe1\u606f\u7684\u53c2\u6570": 318, "\u5206\u522b\u4e3a": 318, "\u53ef\u4ee5\u4e3a": 318, "\u4f1a\u6709\u66f4\u5feb\u7684\u901f\u5ea6": 318, "\u548c\u4f7f\u7528\u66f4\u5c11\u7684\u5185\u5b58": 318, "\u5f53id\u4e0d\u80fd\u7528": 318, "\u8868\u793a\u65f6": 318, "\u624d\u5e94\u8be5\u4f7f\u7528": 318, "\u5982\u679c\u786e\u5b9a\u56fe\u70b9id\u8303\u56f4\u4e0d\u4f1a\u8d85\u8fc7": 318, "\u5efa\u8bae\u4f7f\u7528": 318, "\u6765\u964d\u4f4e\u5185\u5b58\u5f00\u9500": 318, "\u6307\u793a\u8f7d\u5165\u65e0\u5411\u56fe\u8fd8\u662f\u6709\u5411\u56fe": 318, "\u6307\u793a\u662f\u5426\u4e3a\u6bcf\u6761\u8fb9\u5206\u914d\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684id": 318, "\u6307\u793a\u662f\u5426\u662f\u5426\u5c06\u70b9\u539f\u59cbid\u4fdd\u7559\u4e3a\u5c5e\u6027": 318, "\u8ba9\u6211\u4eec\u5199\u4e00\u4e2a\u5b8c\u6574\u7684\u56fe\u7684\u5b9a\u4e49": 318, "\u8fd9\u91cc\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u8f7d\u5165": 318, "\u5c5e\u6027\u56fe\u7684": 318, "\u4f8b\u5b50": 318, "\u4e0a\u6587\u63d0\u5230\u7684\u6570\u636e\u6e90\u662f\u4e00\u4e2a": 318, "\u7684\u7c7b": 318, "\u5305\u542b\u6587\u4ef6\u8def\u5f84\u6216\u8005\u6570\u636e\u672c\u8eab": 318, "\u652f\u6301\u4ece": 318, "\u8fd9\u53ef\u4ee5\u4f7f\u7528\u6237\u4ec5\u901a\u8fc7": 318, "\u63a7\u5236\u53f0\u4fbf\u53ef\u4ee5\u521b\u5efa\u56fe": 318, "\u9664\u4e86": 318, "\u5916": 318, "\u5176\u4ed6\u5c5e\u6027": 318, "id\u5217": 318, "\u6807\u7b7e\u8bbe\u7f6e\u7b49\u90fd\u548c\u4e4b\u524d\u63d0\u5230\u7684\u4fdd\u6301\u4e00\u81f4": 318, "datasourc": 318, "col_0": 318, "col_1": 318, "\u6ce8\u610f\u6bcf\u4e2a\u6570\u7ec4\u90fd\u4ee3\u8868\u4e00\u5217": 318, "\u6211\u4eec\u5c06\u5176\u4ee5": 318, "\u77e9\u9635\u7684\u65b9\u5f0f\u4f20\u5165": 318, "array_v": 318, "col": 318, "array_": 318, "\u5f53": 318, "\u5305\u542b\u6587\u4ef6\u8def\u5f84\u65f6": 318, "\u5b83\u53ef\u80fd\u4ec5\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32": 318, "\u6587\u4ef6\u8def\u5f84\u5e94\u9075\u5faa": 318, "uri": 318, "\u6807\u51c6": 318, "\u5f53\u6536\u5230\u5305\u542b\u6587\u4ef6\u8def\u5f84\u7684\u8f7d\u56fe\u8bf7\u6c42\u65f6": 318, "\u5c06\u4f1a\u89e3\u6790": 318, "\u8c03\u7528\u76f8\u5e94\u7684\u8f7d\u56fe\u6a21\u5757": 318, "\u652f\u6301\u591a\u79cd\u6570\u636e\u6e90": 318, "\u672c\u5730": 318, "\u6570\u636e\u7531": 318, "\u8d1f\u8d23\u8f7d\u5165": 318, "fsspec": 318, "\u89e3\u6790\u4e0d\u540c\u7684\u6570\u636e\u683c\u5f0f\u4ee5\u53ca\u53c2\u6570": 318, "\u4efb\u4f55\u989d\u5916\u7684\u5177\u4f53\u7684\u914d\u7f6e\u90fd\u53ef\u4ee5\u5728loader\u7684\u53ef\u53d8\u53c2\u6570\u5217\u8868\u4e2d\u4f20\u5165": 318, "\u8fd9\u4e9b\u53c2\u6570\u4f1a\u76f4\u63a5\u88ab\u4f20\u9012\u5230\u5bf9\u5e94\u7684\u5b58\u50a8\u7c7b\u4e2d": 318, "\u4e4b\u4e8e": 318, "\u6216\u8005\u662f": 318, "ds1": 318, "datafil": 318, "ds2": 318, "graphscope_bucket": 318, "ds3": 318, "extra_conf": 318, "conf1": 318, "d34": 318, "client_kwarg": 318, "region_nam": 318, "east": 318, "\u7528\u6237\u53ef\u4ee5\u65b9\u4fbf\u7684\u5b9e\u73b0\u81ea\u5df1\u7684driver\u6765\u652f\u6301\u66f4\u591a\u7684\u6570\u636e\u6e90": 318, "\u6bd4\u5982\u53c2\u7167": 318, "ossf": 318, "driver\u7684\u5b9e\u73b0\u65b9\u5f0f": 318, "\u7528\u6237\u9700\u8981\u7ee7\u627f": 318, "abstractfilesystem": 318, "\u7c7b\u7528\u6765\u505ascheme\u5bf9\u5e94\u7684resolv": 318, "abstractbufferedfil": 318, "\u7528\u6237\u4ec5\u9700\u8981\u5b9e\u73b0": 318, "_upload_chunk": 318, "_initiate_upload": 318, "_fetch_rang": 318, "\u8fd9\u51e0\u4e2a\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b9e\u73b0\u57fa\u672c\u7684read": 318, "write\u529f\u80fd": 318, "\u6700\u540e\u901a\u8fc7": 318, "register_implement": 318, "protocol_nam": 318, "protocol_file_system": 318, "\u6ce8\u518c\u81ea\u5b9a\u4e49\u7684resolv": 318, "\u6211\u4eec\u4e3agraphscope\u7684\u7528\u6237\u51c6\u5907\u4e86\u4e00\u7cfb\u5217\u8be6\u5c3d\u7684\u5165\u95e8\u6559\u7a0b": 319, "\u4ece\u8fd9\u4e9b\u5165\u95e8\u6559\u7a0b\u4e2d\u4f60\u53ef\u4ee5\u4e86\u89e3\u5230\u5982\u4f55\u542f\u52a8\u4e00\u4e2agraphscope\u4f1a\u8bdd": 319, "\u5982\u4f55\u8f7d\u56fe": 319, "\u4ee5\u53ca\u5982\u4f55\u5206\u522b": 319, "\u4f7f\u7528graphscope\u4e2d\u7684ga": 319, "gle\u5f15\u64ce\u6765\u5b8c\u6210\u56fe\u5206\u6790\u4efb\u52a1": 319, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u548c\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3": 319, "\u6211\u4eec\u7528jupyt": 319, "notebook\u6765\u7ec4\u7ec7\u8fd9\u4e9b\u6559\u7a0b": 319, "\u7528\u6237\u53ef\u4ee5\u5728\u4efb\u4f55\u4e00\u4e2ajupyt": 319, "notebook\u670d\u52a1\u4e2d\u5c1d\u8bd5\u6267\u884c": 319, "\u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u5df2\u7ecf\u51c6\u5907\u597d\u7684jupyt": 319, "lab": 319, "\u73af\u5883": 319, "\u4ee5\u4fbf\u4e8e\u7528\u6237\u66f4\u5feb\u5730\u4e0a\u624bgraphscop": 319, "\u5165\u95e8\u6559\u7a0b\u5305\u62ec\u5982\u4e0b\u8fd9\u4e9b\u5185\u5bb9": 319}, "objects": {"": [[73, 0, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase"], [73, 1, 1, "_CPPv4N2gs7AppBase7AppBaseEv", "gs::AppBase::AppBase"], [73, 2, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase::CONTEXT_T"], [73, 2, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase::FRAG_T"], [73, 1, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval"], [73, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::context"], [73, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::graph"], [73, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::messages"], [73, 1, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval"], [73, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::context"], [73, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::graph"], [73, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::messages"], [73, 4, 1, "_CPPv4N2gs7AppBase13load_strategyE", "gs::AppBase::load_strategy"], [73, 5, 1, "_CPPv4N2gs7AppBase17message_manager_tE", "gs::AppBase::message_manager_t"], [73, 4, 1, "_CPPv4N2gs7AppBase16message_strategyE", "gs::AppBase::message_strategy"], [73, 4, 1, "_CPPv4N2gs7AppBase16need_split_edgesE", "gs::AppBase::need_split_edges"], [73, 1, 1, "_CPPv4N2gs7AppBaseD0Ev", "gs::AppBase::~AppBase"], [73, 0, 1, "_CPPv4N2gs8AppEntryE", "gs::AppEntry"], [73, 1, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry"], [73, 3, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry::id"], [73, 3, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry::lib_path"], [73, 1, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker"], [73, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::comm_spec"], [73, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::fragment"], [73, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::spec"], [73, 1, 1, "_CPPv4N2gs8AppEntry4InitEv", "gs::AppEntry::Init"], [73, 1, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query"], [73, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::context_key"], [73, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::frag_wrapper"], [73, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::query_args"], [73, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::worker_handler"], [73, 0, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt"], [73, 2, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt::FunctionType"], [73, 2, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt::index"], [73, 0, 1, "_CPPv4I0EN2gs7ArgsNumE", "gs::ArgsNum"], [73, 2, 1, "_CPPv4I0EN2gs7ArgsNumE", "gs::ArgsNum::FunctionType"], [73, 0, 1, "_CPPv4I0EN2gs12ArgsUnpackerE", "gs::ArgsUnpacker"], [73, 2, 1, "_CPPv4I0EN2gs12ArgsUnpackerE", "gs::ArgsUnpacker::T"], [73, 0, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader"], [73, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragment"], [73, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragment::frag_id"], [73, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragmentAsFragmentGroup"], [73, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragmentAsFragmentGroup::frag_id"], [73, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader"], [73, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader"], [73, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::client"], [73, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::client"], [73, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::comm_spec"], [73, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::comm_spec"], [73, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::directed"], [73, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::efiles"], [73, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::generate_eid"], [73, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::graph_info"], [73, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::retain_oid"], [73, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::vfiles"], [73, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader14LoadEdgeTablesEv", "gs::ArrowFragmentLoader::LoadEdgeTables"], [73, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader12LoadFragmentEv", "gs::ArrowFragmentLoader::LoadFragment"], [73, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader27LoadFragmentAsFragmentGroupEv", "gs::ArrowFragmentLoader::LoadFragmentAsFragmentGroup"], [73, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader20LoadVertexEdgeTablesEv", "gs::ArrowFragmentLoader::LoadVertexEdgeTables"], [73, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader16LoadVertexTablesEv", "gs::ArrowFragmentLoader::LoadVertexTables"], [73, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::OID_T"], [73, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::VERTEX_MAP_T"], [73, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::VID_T"], [73, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader15initPartitionerEv", "gs::ArrowFragmentLoader::initPartitioner"], [73, 1, 1, "_CPPv4N2gs19ArrowFragmentLoaderD0Ev", "gs::ArrowFragmentLoader::~ArrowFragmentLoader"], [73, 0, 1, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment"], [73, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedFragment::Construct"], [73, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedFragment::Construct::meta"], [73, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment6CreateEv", "gs::ArrowProjectedFragment::Create"], [73, 2, 1, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::EDATA_T"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t", "gs::ArrowProjectedFragment::GetData"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t", "gs::ArrowProjectedFragment::GetData::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10GetEdgeNumEv", "gs::ArrowProjectedFragment::GetEdgeNum"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t", "gs::ArrowProjectedFragment::GetFragId"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t", "gs::ArrowProjectedFragment::GetFragId::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t", "gs::ArrowProjectedFragment::GetId"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t", "gs::ArrowProjectedFragment::GetId::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12GetInEdgeNumEv", "gs::ArrowProjectedFragment::GetInEdgeNum"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::src_fid"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingEdgeNumEv", "gs::ArrowProjectedFragment::GetIncomingEdgeNum"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex::oid"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexGid"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexGid::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexId"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexId::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexInternalId"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexInternalId::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetInnerVerticesNumEv", "gs::ArrowProjectedFragment::GetInnerVerticesNum"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInternalId"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInternalId::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalInDegree"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalInDegree::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalOutDegree"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalOutDegree::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetOutEdgeNumEv", "gs::ArrowProjectedFragment::GetOutEdgeNum"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex::oid"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexGid"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexGid::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexId"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexId::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexInternalId"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexInternalId::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetOuterVerticesNumEv", "gs::ArrowProjectedFragment::GetOuterVerticesNum"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::dst_fid"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingEdgeNumEv", "gs::ArrowProjectedFragment::GetOutgoingEdgeNum"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetTotalVerticesNumEv", "gs::ArrowProjectedFragment::GetTotalVerticesNum"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex::oid"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex::v"], [73, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment12GetVertexMapEv", "gs::ArrowProjectedFragment::GetVertexMap"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12GetVertexMapEv", "gs::ArrowProjectedFragment::GetVertexMap"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetVerticesNumEv", "gs::ArrowProjectedFragment::GetVerticesNum"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t", "gs::ArrowProjectedFragment::Gid2Oid"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t", "gs::ArrowProjectedFragment::Gid2Oid::gid"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex::gid"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IEDests"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IEDests::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IOEDests"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IOEDests::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex::gid"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13InnerVerticesEv", "gs::ArrowProjectedFragment::InnerVertices"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsInnerVertex"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsInnerVertex::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsOuterVertex"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsOuterVertex::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t", "gs::ArrowProjectedFragment::MirrorVertices"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t", "gs::ArrowProjectedFragment::MirrorVertices::fid"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t", "gs::ArrowProjectedFragment::OEDests"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t", "gs::ArrowProjectedFragment::OEDests::v"], [73, 2, 1, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::OID_T"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t", "gs::ArrowProjectedFragment::Oid2Gid"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid::gid"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t", "gs::ArrowProjectedFragment::Oid2Gid::oid"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid::oid"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex::gid"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t", "gs::ArrowProjectedFragment::OuterVertices"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesEv", "gs::ArrowProjectedFragment::OuterVertices"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t", "gs::ArrowProjectedFragment::OuterVertices::fid"], [73, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp"], [73, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp::comm_spec"], [73, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp::conf"], [73, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project"], [73, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::e_label"], [73, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::e_prop"], [73, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::fragment"], [73, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::v_label"], [73, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::v_prop"], [73, 2, 1, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VDATA_T"], [73, 2, 1, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VERTEX_MAP_T"], [73, 2, 1, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VID_T"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t", "gs::ArrowProjectedFragment::Vertex2Gid"], [73, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t", "gs::ArrowProjectedFragment::Vertex2Gid::v"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8VerticesEv", "gs::ArrowProjectedFragment::Vertices"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10adj_list_tE", "gs::ArrowProjectedFragment::adj_list_t"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16const_adj_list_tE", "gs::ArrowProjectedFragment::const_adj_list_t"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8directedEv", "gs::ArrowProjectedFragment::directed"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment7edata_tE", "gs::ArrowProjectedFragment::edata_t"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10edge_labelEv", "gs::ArrowProjectedFragment::edge_label"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12edge_prop_idEv", "gs::ArrowProjectedFragment::edge_prop_id"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment11eid_array_tE", "gs::ArrowProjectedFragment::eid_array_t"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5eid_tE", "gs::ArrowProjectedFragment::eid_t"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment3fidEv", "gs::ArrowProjectedFragment::fid"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment4fnumEv", "gs::ArrowProjectedFragment::fnum"], [73, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment18get_arrow_fragmentEv", "gs::ArrowProjectedFragment::get_arrow_fragment"], [73, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment24get_edata_array_accessorEv", "gs::ArrowProjectedFragment::get_edata_array_accessor"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24get_ie_offsets_begin_ptrEv", "gs::ArrowProjectedFragment::get_ie_offsets_begin_ptr"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment22get_ie_offsets_end_ptrEv", "gs::ArrowProjectedFragment::get_ie_offsets_end_ptr"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16get_in_edges_ptrEv", "gs::ArrowProjectedFragment::get_in_edges_ptr"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24get_oe_offsets_begin_ptrEv", "gs::ArrowProjectedFragment::get_oe_offsets_begin_ptr"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment22get_oe_offsets_end_ptrEv", "gs::ArrowProjectedFragment::get_oe_offsets_end_ptr"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17get_out_edges_ptrEv", "gs::ArrowProjectedFragment::get_out_edges_ptr"], [73, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment24get_vdata_array_accessorEv", "gs::ArrowProjectedFragment::get_vdata_array_accessor"], [73, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE", "gs::ArrowProjectedFragment::inner_vertex_array_t"], [73, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE", "gs::ArrowProjectedFragment::inner_vertex_array_t::DATA_T"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16inner_vertices_tE", "gs::ArrowProjectedFragment::inner_vertices_t"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14internal_oid_tE", "gs::ArrowProjectedFragment::internal_oid_t"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10label_id_tE", "gs::ArrowProjectedFragment::label_id_t"], [73, 4, 1, "_CPPv4N2gs22ArrowProjectedFragment13load_strategyE", "gs::ArrowProjectedFragment::load_strategy"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5nbr_tE", "gs::ArrowProjectedFragment::nbr_t"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10nbr_unit_tE", "gs::ArrowProjectedFragment::nbr_unit_t"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5oid_tE", "gs::ArrowProjectedFragment::oid_t"], [73, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE", "gs::ArrowProjectedFragment::outer_vertex_array_t"], [73, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE", "gs::ArrowProjectedFragment::outer_vertex_array_t::DATA_T"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16outer_vertices_tE", "gs::ArrowProjectedFragment::outer_vertices_t"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment9prop_id_tE", "gs::ArrowProjectedFragment::prop_id_t"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16property_graph_tE", "gs::ArrowProjectedFragment::property_graph_t"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment21property_vertex_map_tE", "gs::ArrowProjectedFragment::property_vertex_map_t"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14sub_vertices_tE", "gs::ArrowProjectedFragment::sub_vertices_t"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment7vdata_tE", "gs::ArrowProjectedFragment::vdata_t"], [73, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE", "gs::ArrowProjectedFragment::vertex_array_t"], [73, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE", "gs::ArrowProjectedFragment::vertex_array_t::DATA_T"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12vertex_labelEv", "gs::ArrowProjectedFragment::vertex_label"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment12vertex_map_tE", "gs::ArrowProjectedFragment::vertex_map_t"], [73, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14vertex_prop_idEv", "gs::ArrowProjectedFragment::vertex_prop_id"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14vertex_range_tE", "gs::ArrowProjectedFragment::vertex_range_t"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment8vertex_tE", "gs::ArrowProjectedFragment::vertex_t"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10vertices_tE", "gs::ArrowProjectedFragment::vertices_t"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment11vid_array_tE", "gs::ArrowProjectedFragment::vid_array_t"], [73, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5vid_tE", "gs::ArrowProjectedFragment::vid_t"], [73, 1, 1, "_CPPv4N2gs22ArrowProjectedFragmentD0Ev", "gs::ArrowProjectedFragment::~ArrowProjectedFragment"], [73, 0, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap"], [73, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedVertexMap::Construct"], [73, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedVertexMap::Construct::meta"], [73, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap6CreateEv", "gs::ArrowProjectedVertexMap::Create"], [73, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetFidFromGid"], [73, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetFidFromGid::gid"], [73, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid"], [73, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid"], [73, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::fid"], [73, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::gid"], [73, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::gid"], [73, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::oid"], [73, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::oid"], [73, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t", "gs::ArrowProjectedVertexMap::GetInnerVertexSize"], [73, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t", "gs::ArrowProjectedVertexMap::GetInnerVertexSize::fid"], [73, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetLidFromGid"], [73, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetLidFromGid::gid"], [73, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t", "gs::ArrowProjectedVertexMap::GetOffsetFromLid"], [73, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t", "gs::ArrowProjectedVertexMap::GetOffsetFromLid::lid"], [73, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid"], [73, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid::gid"], [73, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid::oid"], [73, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap19GetTotalVerticesNumEv", "gs::ArrowProjectedVertexMap::GetTotalVerticesNum"], [73, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::OID_T"], [73, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t", "gs::ArrowProjectedVertexMap::Offset2Lid"], [73, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t", "gs::ArrowProjectedVertexMap::Offset2Lid::offset"], [73, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project"], [73, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project::v_label"], [73, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project::vm"], [73, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::VERTEX_MAP_T"], [73, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::VID_T"], [73, 0, 1, "_CPPv4I00EN2gs17CtxWrapperBuilderE", "gs::CtxWrapperBuilder"], [73, 2, 1, "_CPPv4I00EN2gs17CtxWrapperBuilderE", "gs::CtxWrapperBuilder::CTX_T"], [73, 0, 1, "_CPPv4I0EN2gs21DefaultPropertyWorkerE", "gs::DefaultPropertyWorker"], [73, 2, 1, "_CPPv4I0EN2gs21DefaultPropertyWorkerE", "gs::DefaultPropertyWorker::APP_T"], [73, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker"], [73, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker::app"], [73, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker::graph"], [73, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker8FinalizeEv", "gs::DefaultPropertyWorker::Finalize"], [73, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker10GetContextEv", "gs::DefaultPropertyWorker::GetContext"], [73, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init"], [73, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init::comm_spec"], [73, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init::pe_spec"], [73, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE", "gs::DefaultPropertyWorker::Output"], [73, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE", "gs::DefaultPropertyWorker::Output::os"], [73, 1, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query"], [73, 2, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query::Args"], [73, 3, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query::args"], [73, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker9context_tE", "gs::DefaultPropertyWorker::context_t"], [73, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker10fragment_tE", "gs::DefaultPropertyWorker::fragment_t"], [73, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker17message_manager_tE", "gs::DefaultPropertyWorker::message_manager_t"], [73, 1, 1, "_CPPv4N2gs21DefaultPropertyWorkerD0Ev", "gs::DefaultPropertyWorker::~DefaultPropertyWorker"], [73, 0, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker"], [73, 0, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker"], [73, 2, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker::APP_T"], [73, 2, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker::APP_T"], [73, 1, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker"], [73, 1, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker"], [73, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::app"], [73, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::app"], [73, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::graph"], [73, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::graph"], [73, 1, 1, "_CPPv4N2gs13DefaultWorker8FinalizeEv", "gs::DefaultWorker::Finalize"], [73, 1, 1, "_CPPv4N2gs13DefaultWorker8FinalizeEv", "gs::DefaultWorker::Finalize"], [73, 1, 1, "_CPPv4N2gs13DefaultWorker10GetContextEv", "gs::DefaultWorker::GetContext"], [73, 1, 1, "_CPPv4N2gs13DefaultWorker10GetContextEv", "gs::DefaultWorker::GetContext"], [73, 1, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init"], [73, 1, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init"], [73, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::comm_spec"], [73, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::comm_spec"], [73, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::pe_spec"], [73, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::pe_spec"], [73, 1, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output"], [73, 1, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output"], [73, 3, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output::os"], [73, 3, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output::os"], [73, 1, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query"], [73, 1, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query"], [73, 2, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::Args"], [73, 2, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::Args"], [73, 3, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::args"], [73, 3, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::args"], [73, 5, 1, "_CPPv4N2gs13DefaultWorker9context_tE", "gs::DefaultWorker::context_t"], [73, 5, 1, "_CPPv4N2gs13DefaultWorker9context_tE", "gs::DefaultWorker::context_t"], [73, 5, 1, "_CPPv4N2gs13DefaultWorker10fragment_tE", "gs::DefaultWorker::fragment_t"], [73, 5, 1, "_CPPv4N2gs13DefaultWorker10fragment_tE", "gs::DefaultWorker::fragment_t"], [73, 5, 1, "_CPPv4N2gs13DefaultWorker17message_manager_tE", "gs::DefaultWorker::message_manager_t"], [73, 5, 1, "_CPPv4N2gs13DefaultWorker17message_manager_tE", "gs::DefaultWorker::message_manager_t"], [73, 1, 1, "_CPPv4N2gs13DefaultWorkerD0Ev", "gs::DefaultWorker::~DefaultWorker"], [73, 1, 1, "_CPPv4N2gs13DefaultWorkerD0Ev", "gs::DefaultWorker::~DefaultWorker"], [73, 0, 1, "_CPPv4N2gs14DispatchResultE", "gs::DispatchResult"], [73, 6, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicyE", "gs::DispatchResult::AggregatePolicy"], [73, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE", "gs::DispatchResult::AggregatePolicy::kConcat"], [73, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE", "gs::DispatchResult::AggregatePolicy::kMergeGraphDef"], [73, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE", "gs::DispatchResult::AggregatePolicy::kPickFirst"], [73, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE", "gs::DispatchResult::AggregatePolicy::kPickFirstNonEmpty"], [73, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE", "gs::DispatchResult::AggregatePolicy::kPickFirstNonEmptyGraphDef"], [73, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE", "gs::DispatchResult::AggregatePolicy::kRequireConsistent"], [73, 1, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult"], [73, 1, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEv", "gs::DispatchResult::DispatchResult"], [73, 3, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult::error_code"], [73, 3, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult::worker_id"], [73, 1, 1, "_CPPv4NK2gs14DispatchResult16aggregate_policyEv", "gs::DispatchResult::aggregate_policy"], [73, 1, 1, "_CPPv4NK2gs14DispatchResult4dataEv", "gs::DispatchResult::data"], [73, 1, 1, "_CPPv4NK2gs14DispatchResult10error_codeEv", "gs::DispatchResult::error_code"], [73, 1, 1, "_CPPv4N2gs14DispatchResult9graph_defEv", "gs::DispatchResult::graph_def"], [73, 1, 1, "_CPPv4NK2gs14DispatchResult9graph_defEv", "gs::DispatchResult::graph_def"], [73, 1, 1, "_CPPv4NK2gs14DispatchResult14has_large_dataEv", "gs::DispatchResult::has_large_data"], [73, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE", "gs::DispatchResult::kConcat"], [73, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE", "gs::DispatchResult::kMergeGraphDef"], [73, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE", "gs::DispatchResult::kPickFirst"], [73, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE", "gs::DispatchResult::kPickFirstNonEmpty"], [73, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE", "gs::DispatchResult::kPickFirstNonEmptyGraphDef"], [73, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE", "gs::DispatchResult::kRequireConsistent"], [73, 1, 1, "_CPPv4N2gs14DispatchResult7messageEv", "gs::DispatchResult::message"], [73, 1, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data"], [73, 1, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data"], [73, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::arc"], [73, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::data"], [73, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::large_data"], [73, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::large_data"], [73, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::policy"], [73, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::policy"], [73, 1, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error"], [73, 3, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error::error_code"], [73, 3, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error::message"], [73, 1, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def"], [73, 3, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def::graph_def"], [73, 3, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def::policy"], [73, 1, 1, "_CPPv4NK2gs14DispatchResult9worker_idEv", "gs::DispatchResult::worker_id"], [73, 0, 1, "_CPPv4N2gs10DispatcherE", "gs::Dispatcher"], [73, 1, 1, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::Dispatch"], [73, 3, 1, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::Dispatch::cmd"], [73, 1, 1, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE", "gs::Dispatcher::Dispatcher"], [73, 3, 1, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE", "gs::Dispatcher::Dispatcher::comm_spec"], [73, 1, 1, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::SetCommand"], [73, 3, 1, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::SetCommand::cmd"], [73, 1, 1, "_CPPv4N2gs10Dispatcher5StartEv", "gs::Dispatcher::Start"], [73, 1, 1, "_CPPv4N2gs10Dispatcher4StopEv", "gs::Dispatcher::Stop"], [73, 1, 1, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE", "gs::Dispatcher::Subscribe"], [73, 3, 1, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE", "gs::Dispatcher::Subscribe::subscriber"], [73, 0, 1, "_CPPv4N2gs12EngineConfigE", "gs::EngineConfig"], [73, 1, 1, "_CPPv4NK2gs12EngineConfig12ToJsonStringEv", "gs::EngineConfig::ToJsonString"], [73, 4, 1, "_CPPv4N2gs12EngineConfig15enable_java_sdkE", "gs::EngineConfig::enable_java_sdk"], [73, 4, 1, "_CPPv4N2gs12EngineConfig8networkxE", "gs::EngineConfig::networkx"], [73, 4, 1, "_CPPv4N2gs12EngineConfig21vineyard_rpc_endpointE", "gs::EngineConfig::vineyard_rpc_endpoint"], [73, 4, 1, "_CPPv4N2gs12EngineConfig15vineyard_socketE", "gs::EngineConfig::vineyard_socket"], [73, 0, 1, "_CPPv4I0EN2gs15FragmentWrapperE", "gs::FragmentWrapper"], [73, 2, 1, "_CPPv4I0EN2gs15FragmentWrapperE", "gs::FragmentWrapper::FRAG_T"], [73, 0, 1, "_CPPv4N2gs8GSObjectE", "gs::GSObject"], [73, 1, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject"], [73, 3, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject::id"], [73, 3, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject::type"], [73, 1, 1, "_CPPv4NK2gs8GSObject8ToStringEv", "gs::GSObject::ToString"], [73, 1, 1, "_CPPv4NK2gs8GSObject2idEv", "gs::GSObject::id"], [73, 1, 1, "_CPPv4NK2gs8GSObject4typeEv", "gs::GSObject::type"], [73, 1, 1, "_CPPv4N2gs8GSObjectD0Ev", "gs::GSObject::~GSObject"], [73, 0, 1, "_CPPv4N2gs11GrapeEngineE", "gs::GrapeEngine"], [73, 1, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE", "gs::GrapeEngine::GrapeEngine"], [73, 1, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine"], [73, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE", "gs::GrapeEngine::GrapeEngine::dag_file"], [73, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine::host"], [73, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine::port"], [73, 1, 1, "_CPPv4N2gs11GrapeEngine10RunDAGFileEv", "gs::GrapeEngine::RunDAGFile"], [73, 1, 1, "_CPPv4N2gs11GrapeEngine5StartEv", "gs::GrapeEngine::Start"], [73, 1, 1, "_CPPv4N2gs11GrapeEngine4StopEv", "gs::GrapeEngine::Stop"], [73, 0, 1, "_CPPv4N2gs13GrapeInstanceE", "gs::GrapeInstance"], [73, 1, 1, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE", "gs::GrapeInstance::GrapeInstance"], [73, 3, 1, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE", "gs::GrapeInstance::GrapeInstance::comm_spec"], [73, 1, 1, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE", "gs::GrapeInstance::Init"], [73, 3, 1, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE", "gs::GrapeInstance::Init::vineyard_socket"], [73, 1, 1, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE", "gs::GrapeInstance::OnReceive"], [73, 3, 1, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE", "gs::GrapeInstance::OnReceive::cmd"], [73, 0, 1, "_CPPv4N2gs13ObjectManagerE", "gs::ObjectManager"], [73, 1, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject"], [73, 1, 1, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE", "gs::ObjectManager::GetObject"], [73, 2, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject::T"], [73, 3, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject::id"], [73, 3, 1, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE", "gs::ObjectManager::GetObject::id"], [73, 1, 1, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE", "gs::ObjectManager::HasObject"], [73, 3, 1, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE", "gs::ObjectManager::HasObject::id"], [73, 1, 1, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE", "gs::ObjectManager::PutObject"], [73, 3, 1, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE", "gs::ObjectManager::PutObject::obj"], [73, 1, 1, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE", "gs::ObjectManager::RemoveObject"], [73, 3, 1, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE", "gs::ObjectManager::RemoveObject::id"], [73, 0, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker"], [73, 0, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker"], [73, 2, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker::APP_T"], [73, 2, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker::APP_T"], [73, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv", "gs::ParallelPropertyWorker::Finalize"], [73, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv", "gs::ParallelPropertyWorker::Finalize"], [73, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv", "gs::ParallelPropertyWorker::GetContext"], [73, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv", "gs::ParallelPropertyWorker::GetContext"], [73, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init"], [73, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init"], [73, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::comm_spec"], [73, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::comm_spec"], [73, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::pe_spec"], [73, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::pe_spec"], [73, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output"], [73, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output"], [73, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output::os"], [73, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output::os"], [73, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker"], [73, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker"], [73, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::app"], [73, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::app"], [73, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::graph"], [73, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::graph"], [73, 1, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query"], [73, 1, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query"], [73, 2, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::Args"], [73, 2, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::Args"], [73, 3, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::args"], [73, 3, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::args"], [73, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker9context_tE", "gs::ParallelPropertyWorker::context_t"], [73, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker9context_tE", "gs::ParallelPropertyWorker::context_t"], [73, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE", "gs::ParallelPropertyWorker::fragment_t"], [73, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE", "gs::ParallelPropertyWorker::fragment_t"], [73, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE", "gs::ParallelPropertyWorker::message_manager_t"], [73, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE", "gs::ParallelPropertyWorker::message_manager_t"], [73, 1, 1, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev", "gs::ParallelPropertyWorker::~ParallelPropertyWorker"], [73, 1, 1, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev", "gs::ParallelPropertyWorker::~ParallelPropertyWorker"], [73, 0, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase"], [73, 2, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase::CONTEXT_T"], [73, 2, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase::FRAG_T"], [73, 1, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval"], [73, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::context"], [73, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::graph"], [73, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::messages"], [73, 1, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval"], [73, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::context"], [73, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::graph"], [73, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::messages"], [73, 1, 1, "_CPPv4N2gs15PropertyAppBase15PropertyAppBaseEv", "gs::PropertyAppBase::PropertyAppBase"], [73, 4, 1, "_CPPv4N2gs15PropertyAppBase13load_strategyE", "gs::PropertyAppBase::load_strategy"], [73, 5, 1, "_CPPv4N2gs15PropertyAppBase17message_manager_tE", "gs::PropertyAppBase::message_manager_t"], [73, 4, 1, "_CPPv4N2gs15PropertyAppBase16message_strategyE", "gs::PropertyAppBase::message_strategy"], [73, 4, 1, "_CPPv4N2gs15PropertyAppBase16need_split_edgesE", "gs::PropertyAppBase::need_split_edges"], [73, 1, 1, "_CPPv4N2gs15PropertyAppBaseD0Ev", "gs::PropertyAppBase::~PropertyAppBase"], [73, 0, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase"], [73, 2, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase::CONTEXT_T"], [73, 2, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase::FRAG_T"], [73, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval"], [73, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval::context"], [73, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval::graph"], [73, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval"], [73, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval::context"], [73, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval::graph"], [73, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase19PropertyAutoAppBaseEv", "gs::PropertyAutoAppBase::PropertyAutoAppBase"], [73, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase13load_strategyE", "gs::PropertyAutoAppBase::load_strategy"], [73, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase16message_strategyE", "gs::PropertyAutoAppBase::message_strategy"], [73, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase16need_split_edgesE", "gs::PropertyAutoAppBase::need_split_edges"], [73, 1, 1, "_CPPv4N2gs19PropertyAutoAppBaseD0Ev", "gs::PropertyAutoAppBase::~PropertyAutoAppBase"], [73, 0, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker"], [73, 0, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker"], [73, 2, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker::APP_T"], [73, 2, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker::APP_T"], [73, 1, 1, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv", "gs::PropertyAutoWorker::Finalize"], [73, 1, 1, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv", "gs::PropertyAutoWorker::Finalize"], [73, 1, 1, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv", "gs::PropertyAutoWorker::GetContext"], [73, 1, 1, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv", "gs::PropertyAutoWorker::GetContext"], [73, 1, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init"], [73, 1, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init"], [73, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::comm_spec"], [73, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::comm_spec"], [73, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::pe_spec"], [73, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::pe_spec"], [73, 1, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output"], [73, 1, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output"], [73, 3, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output::os"], [73, 3, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output::os"], [73, 1, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker"], [73, 1, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker"], [73, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::app"], [73, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::app"], [73, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::graph"], [73, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::graph"], [73, 1, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query"], [73, 1, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query"], [73, 2, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::Args"], [73, 2, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::Args"], [73, 3, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::args"], [73, 3, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::args"], [73, 5, 1, "_CPPv4N2gs18PropertyAutoWorker9context_tE", "gs::PropertyAutoWorker::context_t"], [73, 5, 1, "_CPPv4N2gs18PropertyAutoWorker9context_tE", "gs::PropertyAutoWorker::context_t"], [73, 5, 1, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE", "gs::PropertyAutoWorker::fragment_t"], [73, 5, 1, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE", "gs::PropertyAutoWorker::fragment_t"], [73, 5, 1, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE", "gs::PropertyAutoWorker::message_manager_t"], [73, 5, 1, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE", "gs::PropertyAutoWorker::message_manager_t"], [73, 1, 1, "_CPPv4N2gs18PropertyAutoWorkerD0Ev", "gs::PropertyAutoWorker::~PropertyAutoWorker"], [73, 1, 1, "_CPPv4N2gs18PropertyAutoWorkerD0Ev", "gs::PropertyAutoWorker::~PropertyAutoWorker"], [73, 0, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext"], [73, 2, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext::DATA_T"], [73, 2, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext::FRAG_T"], [73, 1, 1, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t", "gs::TensorContext::TensorContext"], [73, 3, 1, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t", "gs::TensorContext::TensorContext::fragment"], [73, 1, 1, "_CPPv4N2gs13TensorContext6assignERK6data_t", "gs::TensorContext::assign"], [73, 1, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign"], [73, 3, 1, "_CPPv4N2gs13TensorContext6assignERK6data_t", "gs::TensorContext::assign::data"], [73, 3, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign::data"], [73, 3, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign::shape"], [73, 5, 1, "_CPPv4N2gs13TensorContext6data_tE", "gs::TensorContext::data_t"], [73, 1, 1, "_CPPv4N2gs13TensorContext8fragmentEv", "gs::TensorContext::fragment"], [73, 1, 1, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE", "gs::TensorContext::set_shape"], [73, 3, 1, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE", "gs::TensorContext::set_shape::shape"], [73, 1, 1, "_CPPv4NK2gs13TensorContext5shapeEv", "gs::TensorContext::shape"], [73, 1, 1, "_CPPv4N2gs13TensorContext6tensorEv", "gs::TensorContext::tensor"], [73, 0, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper"], [73, 2, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper::DATA_T"], [73, 2, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper::FRAG_T"], [73, 1, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper"], [73, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::ctx"], [73, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::frag_wrapper"], [73, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::id"], [73, 1, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays"], [73, 3, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays::comm_spec"], [73, 3, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays::selectors"], [73, 1, 1, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE", "gs::TensorContextWrapper::ToDataframe"], [73, 3, 1, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE", "gs::TensorContextWrapper::ToDataframe::comm_spec"], [73, 1, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray"], [73, 3, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray::axis"], [73, 3, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray::comm_spec"], [73, 1, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe"], [73, 3, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe::client"], [73, 3, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe::comm_spec"], [73, 1, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor"], [73, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::axis"], [73, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::client"], [73, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::comm_spec"], [73, 1, 1, "_CPPv4N2gs20TensorContextWrapper12context_typeEv", "gs::TensorContextWrapper::context_type"], [73, 1, 1, "_CPPv4N2gs20TensorContextWrapper16fragment_wrapperEv", "gs::TensorContextWrapper::fragment_wrapper"], [73, 0, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper"], [73, 2, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper::DATA_T"], [73, 2, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper::FRAG_T"], [73, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays::comm_spec"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays::selectors"], [73, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::comm_spec"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::range"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::selectors"], [73, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::comm_spec"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::range"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::selector"], [73, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::client"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::comm_spec"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::range"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::selectors"], [73, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::client"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::comm_spec"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::range"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::selector"], [73, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::ctx"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::frag_wrapper"], [73, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::id"], [73, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper12context_typeEv", "gs::VertexDataContextWrapper::context_type"], [73, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper16fragment_wrapperEv", "gs::VertexDataContextWrapper::fragment_wrapper"], [73, 0, 1, "_CPPv4I0EN2gs21VertexPropertyContextE", "gs::VertexPropertyContext"], [73, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContextE", "gs::VertexPropertyContext::FRAG_T"], [73, 1, 1, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t", "gs::VertexPropertyContext::VertexPropertyContext"], [73, 3, 1, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t", "gs::VertexPropertyContext::VertexPropertyContext::fragment"], [73, 1, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column"], [73, 3, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column::name"], [73, 3, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column::type"], [73, 1, 1, "_CPPv4N2gs21VertexPropertyContext8fragmentEv", "gs::VertexPropertyContext::fragment"], [73, 5, 1, "_CPPv4N2gs21VertexPropertyContext10fragment_tE", "gs::VertexPropertyContext::fragment_t"], [73, 1, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t", "gs::VertexPropertyContext::get_column"], [73, 1, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE", "gs::VertexPropertyContext::get_column"], [73, 3, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t", "gs::VertexPropertyContext::get_column::index"], [73, 3, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE", "gs::VertexPropertyContext::get_column::name"], [73, 1, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column"], [73, 1, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column"], [73, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column::DATA_T"], [73, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column::DATA_T"], [73, 3, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column::index"], [73, 3, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column::name"], [73, 5, 1, "_CPPv4N2gs21VertexPropertyContext5oid_tE", "gs::VertexPropertyContext::oid_t"], [73, 5, 1, "_CPPv4N2gs21VertexPropertyContext9prop_id_tE", "gs::VertexPropertyContext::prop_id_t"], [73, 1, 1, "_CPPv4N2gs21VertexPropertyContext14properties_mapEv", "gs::VertexPropertyContext::properties_map"], [73, 1, 1, "_CPPv4N2gs21VertexPropertyContext17vertex_propertiesEv", "gs::VertexPropertyContext::vertex_properties"], [73, 5, 1, "_CPPv4N2gs21VertexPropertyContext8vertex_tE", "gs::VertexPropertyContext::vertex_t"], [73, 0, 1, "_CPPv4N2gs3rpc16AnalyticalServerE", "gs::rpc::AnalyticalServer"], [73, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer"], [73, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::dispatcher"], [73, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::host"], [73, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::port"], [73, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer11StartServerEv", "gs::rpc::AnalyticalServer::StartServer"], [73, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer10StopServerEv", "gs::rpc::AnalyticalServer::StopServer"], [0, 8, 1, "", "all_pairs_shortest_path_length"], [0, 8, 1, "", "attribute_assortativity"], [0, 8, 1, "", "average_degree_connectivity"], [0, 8, 1, "", "betweenness_centrality"], [0, 8, 1, "", "bfs"], [0, 8, 1, "", "closeness_centrality"], [0, 8, 1, "id0", "clustering"], [0, 8, 1, "", "degree_assortativity_coefficient"], [0, 8, 1, "", "degree_centrality"], [0, 8, 1, "", "dfs"], [0, 8, 1, "", "eigenvector_centrality"], [0, 8, 1, "", "hits"], [0, 8, 1, "", "katz_centrality"], [0, 8, 1, "", "kkore"], [0, 8, 1, "", "kshell"], [0, 8, 1, "", "lpa"], [0, 8, 1, "id1", "pagerank"], [0, 8, 1, "", "sampling_path"], [0, 8, 1, "", "sssp"], [0, 8, 1, "id2", "voterank"]], "graphscope": [[292, 9, 1, "", "Session"], [79, 12, 1, "", "Vertex"], [74, 8, 1, "", "attribute_assortativity_coefficient"], [74, 8, 1, "", "average_degree_connectivity"], [74, 8, 1, "", "average_shortest_path_length"], [74, 8, 1, "", "avg_clustering"], [74, 8, 1, "", "bfs"], [74, 8, 1, "", "cdlp"], [74, 8, 1, "", "clustering"], [80, 8, 1, "", "declare"], [74, 8, 1, "", "degree_assortativity_coefficient"], [74, 8, 1, "", "degree_centrality"], [74, 8, 1, "", "eigenvector_centrality"], [125, 8, 1, "", "g"], [126, 8, 1, "", "get_default_session"], [127, 8, 1, "", "get_option"], [128, 8, 1, "", "graphlearn"], [129, 8, 1, "", "gremlin"], [130, 8, 1, "", "has_default_session"], [74, 8, 1, "", "hits"], [74, 8, 1, "", "is_simple_path"], [74, 8, 1, "", "k_core"], [74, 8, 1, "", "k_shell"], [74, 8, 1, "", "katz_centrality"], [74, 8, 1, "", "louvain"], [74, 8, 1, "", "lpa"], [74, 8, 1, "", "lpa_u2i"], [74, 8, 1, "", "numeric_assortativity_coefficient"], [74, 8, 1, "", "pagerank"], [74, 8, 1, "", "pagerank_nx"], [131, 14, 1, "", "session"], [132, 8, 1, "", "set_option"], [74, 8, 1, "", "sssp"], [74, 8, 1, "", "triangles"], [74, 8, 1, "", "voterank"], [74, 8, 1, "", "wcc"]], "graphscope.Session": [[292, 10, 1, "", "__enter__"], [292, 10, 1, "", "__exit__"], [292, 10, 1, "", "__init__"], [292, 10, 1, "", "add_lib"], [292, 10, 1, "", "as_default"], [292, 10, 1, "", "close"], [292, 10, 1, "", "connected"], [292, 11, 1, "", "engine_config"], [292, 10, 1, "", "get_config"], [292, 10, 1, "", "graphlearn"], [292, 10, 1, "", "gremlin"], [292, 11, 1, "", "info"], [292, 10, 1, "", "learning"], [292, 10, 1, "", "load_from"], [292, 10, 1, "", "run_fetches"]], "graphscope.analytical.app": [[74, 9, 1, "", "JavaApp"]], "graphscope.analytical.app.JavaApp": [[74, 10, 1, "", "__call__"], [74, 10, 1, "", "__init__"], [74, 10, 1, "", "is_compatible"], [74, 10, 1, "", "signature"]], "graphscope.framework.app": [[74, 9, 1, "", "App"], [74, 9, 1, "", "AppAssets"], [74, 9, 1, "", "AppDAGNode"], [81, 8, 1, "", "load_app"]], "graphscope.framework.app.App": [[74, 10, 1, "", "__del__"], [74, 10, 1, "", "__init__"], [74, 11, 1, "", "key"], [74, 11, 1, "", "signature"]], "graphscope.framework.app.AppAssets": [[74, 10, 1, "", "__init__"], [74, 11, 1, "", "algo"], [74, 11, 1, "", "context_type"], [74, 11, 1, "", "gar"], [74, 10, 1, "", "is_compatible"], [74, 11, 1, "", "signature"], [74, 11, 1, "", "type"]], "graphscope.framework.context": [[75, 9, 1, "", "BaseContextDAGNode"], [75, 9, 1, "", "Context"], [75, 9, 1, "", "DynamicVertexDataContext"], [75, 9, 1, "", "LabeledVertexDataContextDAGNode"], [75, 9, 1, "", "LabeledVertexPropertyContextDAGNode"], [75, 9, 1, "", "ResultDAGNode"], [75, 9, 1, "", "TensorContextDAGNode"], [75, 9, 1, "", "VertexDataContextDAGNode"], [75, 9, 1, "", "VertexPropertyContextDAGNode"]], "graphscope.framework.context.BaseContextDAGNode": [[75, 10, 1, "", "to_dataframe"], [75, 10, 1, "", "to_numpy"], [75, 10, 1, "", "to_vineyard_dataframe"], [75, 10, 1, "", "to_vineyard_tensor"]], "graphscope.framework": [[289, 13, 0, "-", "dag_utils"]], "graphscope.framework.dag_utils": [[82, 8, 1, "", "add_column"], [83, 8, 1, "", "add_labels_to_graph"], [84, 8, 1, "", "arrow_to_dynamic"], [85, 8, 1, "", "bind_app"], [86, 8, 1, "", "clear_edges"], [87, 8, 1, "", "clear_graph"], [88, 8, 1, "", "context_to_dataframe"], [89, 8, 1, "", "context_to_numpy"], [90, 8, 1, "", "copy_graph"], [91, 8, 1, "", "create_app"], [92, 8, 1, "", "create_graph"], [93, 8, 1, "", "create_graph_view"], [94, 8, 1, "", "create_loader"], [95, 8, 1, "", "create_subgraph"], [96, 8, 1, "", "create_unload_op"], [97, 8, 1, "", "dynamic_to_arrow"], [98, 8, 1, "", "fetch_gremlin_result"], [99, 8, 1, "", "get_context_data"], [100, 8, 1, "", "graph_to_dataframe"], [101, 8, 1, "", "graph_to_numpy"], [102, 8, 1, "", "gremlin_query"], [103, 8, 1, "", "gremlin_to_subgraph"], [104, 8, 1, "", "modify_edges"], [105, 8, 1, "", "modify_vertices"], [106, 8, 1, "", "output"], [107, 8, 1, "", "project_arrow_property_graph"], [108, 8, 1, "", "project_to_simple"], [109, 8, 1, "", "report_graph"], [110, 8, 1, "", "run_app"], [111, 8, 1, "", "to_data_sink"], [112, 8, 1, "", "to_directed"], [113, 8, 1, "", "to_undirected"], [114, 8, 1, "", "to_vineyard_dataframe"], [115, 8, 1, "", "to_vineyard_tensor"], [116, 8, 1, "", "unload_app"], [117, 8, 1, "", "unload_context"], [118, 8, 1, "", "unload_graph"]], "graphscope.framework.graph": [[147, 9, 1, "", "Graph"], [147, 9, 1, "", "GraphDAGNode"]], "graphscope.framework.graph.Graph": [[147, 10, 1, "", "__init__"], [147, 10, 1, "", "detach"], [147, 11, 1, "", "key"], [147, 10, 1, "", "load_from"], [147, 10, 1, "", "loaded"], [147, 10, 1, "", "save_to"], [147, 11, 1, "", "schema"], [147, 11, 1, "", "schema_path"], [147, 11, 1, "", "session_id"], [147, 10, 1, "", "to_dataframe"], [147, 10, 1, "", "to_directed"], [147, 10, 1, "", "to_numpy"], [147, 10, 1, "", "to_undirected"], [147, 11, 1, "", "vineyard_id"]], "graphscope.framework.graph.GraphDAGNode": [[147, 10, 1, "", "__init__"], [147, 10, 1, "", "add_column"], [147, 10, 1, "", "add_edges"], [147, 10, 1, "", "add_vertices"], [147, 10, 1, "", "project"]], "graphscope.framework.graph_builder": [[147, 8, 1, "", "load_from"]], "graphscope.framework.loader": [[147, 9, 1, "", "Loader"]], "graphscope.framework.loader.Loader": [[147, 10, 1, "", "__init__"]], "graphscope.framework.operation": [[289, 9, 1, "", "Operation"]], "graphscope.framework.operation.Operation": [[119, 10, 1, "", "__init__"], [120, 10, 1, "", "as_op_def"], [121, 10, 1, "", "eval"], [122, 11, 1, "", "evaluated"], [123, 11, 1, "", "key"], [124, 11, 1, "", "signature"]], "graphscope.interactive.query": [[148, 9, 1, "", "InteractiveQuery"]], "graphscope.interactive.query.InteractiveQuery": [[148, 10, 1, "", "__init__"], [148, 10, 1, "", "close"], [148, 10, 1, "", "execute"], [148, 11, 1, "", "graph_url"], [148, 11, 1, "", "object_id"], [148, 11, 1, "", "session"], [148, 11, 1, "", "session_id"], [148, 10, 1, "", "subgraph"], [148, 10, 1, "", "submit"], [148, 10, 1, "", "traversal_source"]], "graphscope.learning.graph": [[149, 9, 1, "", "Graph"]], "graphscope.learning.graph.Graph": [[149, 10, 1, "", "E"], [149, 10, 1, "", "V"], [149, 10, 1, "", "__init__"], [149, 10, 1, "", "get_handle"]], "graphscope.nx": [[285, 9, 1, "", "DiGraph"], [285, 9, 1, "", "Graph"], [287, 8, 1, "", "read_adjlist"], [287, 8, 1, "", "read_edgelist"]], "graphscope.nx.DiGraph": [[285, 10, 1, "", "__contains__"], [285, 10, 1, "", "__getitem__"], [285, 10, 1, "", "__init__"], [285, 10, 1, "", "__iter__"], [285, 10, 1, "", "__len__"], [285, 10, 1, "", "add_edge"], [285, 10, 1, "", "add_edges_from"], [285, 10, 1, "", "add_node"], [285, 10, 1, "", "add_nodes_from"], [285, 10, 1, "", "add_weighted_edges_from"], [285, 11, 1, "", "adj"], [285, 10, 1, "", "adjacency"], [285, 14, 1, "", "adjlist_inner_dict_factory"], [285, 14, 1, "", "adjlist_outer_dict_factory"], [285, 10, 1, "", "clear"], [285, 10, 1, "", "clear_edges"], [285, 10, 1, "", "copy"], [285, 11, 1, "", "degree"], [285, 14, 1, "", "edge_attr_dict_factory"], [285, 10, 1, "", "edge_subgraph"], [285, 11, 1, "", "edges"], [285, 10, 1, "", "get_edge_data"], [285, 14, 1, "", "graph_attr_dict_factory"], [285, 14, 1, "", "graph_cache_factory"], [285, 11, 1, "", "graph_type"], [285, 10, 1, "", "has_edge"], [285, 10, 1, "", "has_node"], [285, 10, 1, "", "has_predecessor"], [285, 10, 1, "", "has_successor"], [285, 11, 1, "", "in_degree"], [285, 11, 1, "", "in_edges"], [285, 10, 1, "", "is_directed"], [285, 10, 1, "", "is_multigraph"], [285, 11, 1, "", "key"], [285, 11, 1, "", "name"], [285, 10, 1, "", "nbunch_iter"], [285, 10, 1, "", "neighbors"], [285, 14, 1, "", "node_attr_dict_factory"], [285, 14, 1, "", "node_dict_factory"], [285, 11, 1, "", "nodes"], [285, 10, 1, "", "number_of_edges"], [285, 10, 1, "", "number_of_nodes"], [285, 11, 1, "", "op"], [285, 10, 1, "", "order"], [285, 11, 1, "", "out_degree"], [285, 11, 1, "", "out_edges"], [285, 11, 1, "", "pred"], [285, 10, 1, "", "predecessors"], [285, 10, 1, "", "remove_edge"], [285, 10, 1, "", "remove_edges_from"], [285, 10, 1, "", "remove_node"], [285, 10, 1, "", "remove_nodes_from"], [285, 10, 1, "", "reverse"], [285, 11, 1, "", "schema"], [285, 11, 1, "", "session"], [285, 11, 1, "", "session_id"], [285, 10, 1, "", "set_edge_data"], [285, 10, 1, "", "set_node_data"], [285, 11, 1, "", "signature"], [285, 10, 1, "", "size"], [285, 10, 1, "", "subgraph"], [285, 11, 1, "", "succ"], [285, 10, 1, "", "successors"], [285, 10, 1, "", "to_directed"], [285, 10, 1, "", "to_undirected"], [285, 10, 1, "", "to_undirected_class"], [285, 10, 1, "", "update"]], "graphscope.nx.Graph": [[285, 10, 1, "", "__contains__"], [285, 10, 1, "", "__getitem__"], [288, 8, 1, "", "__init__"], [285, 10, 1, "", "__iter__"], [285, 10, 1, "", "__len__"], [288, 8, 1, "", "_convert_arrow_to_dynamic"], [285, 10, 1, "", "add_edge"], [285, 10, 1, "", "add_edges_from"], [285, 10, 1, "", "add_node"], [285, 10, 1, "", "add_nodes_from"], [285, 10, 1, "", "add_weighted_edges_from"], [285, 11, 1, "", "adj"], [285, 10, 1, "", "adjacency"], [285, 14, 1, "", "adjlist_inner_dict_factory"], [285, 14, 1, "", "adjlist_outer_dict_factory"], [285, 10, 1, "", "clear"], [285, 10, 1, "", "clear_edges"], [285, 10, 1, "", "copy"], [285, 11, 1, "", "degree"], [285, 14, 1, "", "edge_attr_dict_factory"], [285, 10, 1, "", "edge_subgraph"], [285, 11, 1, "", "edges"], [285, 10, 1, "", "get_edge_data"], [285, 14, 1, "", "graph_attr_dict_factory"], [285, 14, 1, "", "graph_cache_factory"], [285, 11, 1, "", "graph_type"], [285, 10, 1, "", "has_edge"], [285, 10, 1, "", "has_node"], [285, 10, 1, "", "is_directed"], [285, 10, 1, "", "is_multigraph"], [285, 11, 1, "", "key"], [285, 11, 1, "", "name"], [285, 10, 1, "", "nbunch_iter"], [285, 10, 1, "", "neighbors"], [285, 14, 1, "", "node_attr_dict_factory"], [285, 14, 1, "", "node_dict_factory"], [285, 11, 1, "", "nodes"], [285, 10, 1, "", "number_of_edges"], [285, 10, 1, "", "number_of_nodes"], [285, 11, 1, "", "op"], [285, 10, 1, "", "order"], [285, 10, 1, "", "remove_edge"], [285, 10, 1, "", "remove_edges_from"], [285, 10, 1, "", "remove_node"], [285, 10, 1, "", "remove_nodes_from"], [285, 11, 1, "", "schema"], [285, 11, 1, "", "session"], [285, 11, 1, "", "session_id"], [285, 10, 1, "", "set_edge_data"], [285, 10, 1, "", "set_node_data"], [285, 11, 1, "", "signature"], [285, 10, 1, "", "size"], [285, 10, 1, "", "subgraph"], [285, 10, 1, "", "to_directed"], [285, 10, 1, "", "to_undirected"], [285, 10, 1, "", "to_undirected_class"], [285, 10, 1, "", "update"]], "graphscope.nx.builtin": [[150, 8, 1, "", "average_clustering"], [150, 8, 1, "", "average_shortest_path_length"], [150, 8, 1, "", "bfs_edges"], [150, 8, 1, "", "clustering"], [150, 8, 1, "", "degree_centrality"], [150, 8, 1, "", "eigenvector_centrality"], [150, 8, 1, "", "has_path"], [150, 8, 1, "", "hits"], [150, 8, 1, "", "in_degree_centrality"], [150, 8, 1, "", "k_core"], [150, 8, 1, "", "katz_centrality"], [150, 8, 1, "", "out_degree_centrality"], [150, 8, 1, "", "triangles"]], "graphscope.nx.classes": [[151, 13, 0, "-", "function"]], "graphscope.nx.classes.function": [[152, 8, 1, "", "add_cycle"], [153, 8, 1, "", "add_path"], [154, 8, 1, "", "add_star"], [155, 8, 1, "", "all_neighbors"], [156, 8, 1, "", "common_neighbors"], [157, 8, 1, "", "create_empty_copy"], [158, 8, 1, "", "degree"], [159, 8, 1, "", "degree_histogram"], [160, 8, 1, "", "density"], [161, 8, 1, "", "edge_subgraph"], [162, 8, 1, "", "edges"], [163, 8, 1, "", "freeze"], [164, 8, 1, "", "induced_subgraph"], [165, 8, 1, "", "info"], [166, 8, 1, "", "is_directed"], [167, 8, 1, "", "is_empty"], [168, 8, 1, "", "is_frozen"], [169, 8, 1, "", "is_negatively_weighted"], [170, 8, 1, "", "is_weighted"], [171, 8, 1, "", "neighbors"], [172, 8, 1, "", "nodes"], [173, 8, 1, "", "nodes_with_selfloops"], [174, 8, 1, "", "non_edges"], [175, 8, 1, "", "non_neighbors"], [176, 8, 1, "", "number_of_edges"], [177, 8, 1, "", "number_of_nodes"], [178, 8, 1, "", "number_of_selfloops"], [179, 8, 1, "", "selfloop_edges"], [180, 8, 1, "", "subgraph"], [181, 8, 1, "", "to_directed"], [182, 8, 1, "", "to_undirected"]], "graphscope.nx.generators": [[284, 13, 0, "-", "atlas"], [284, 13, 0, "-", "classic"], [284, 13, 0, "-", "community"], [284, 13, 0, "-", "degree_seq"], [284, 13, 0, "-", "directed"], [284, 13, 0, "-", "duplication"], [284, 13, 0, "-", "ego"], [284, 13, 0, "-", "expanders"], [284, 13, 0, "-", "geometric"], [284, 13, 0, "-", "harary_graph"], [284, 13, 0, "-", "intersection"], [284, 13, 0, "-", "joint_degree_seq"], [284, 13, 0, "-", "mycielski"], [284, 13, 0, "-", "nonisomorphic_trees"], [284, 13, 0, "-", "small"], [284, 13, 0, "-", "social"], [284, 13, 0, "-", "spectral_graph_forge"], [284, 13, 0, "-", "sudoku"], [284, 13, 0, "-", "trees"], [284, 13, 0, "-", "triads"]], "graphscope.nx.generators.atlas": [[183, 8, 1, "", "graph_atlas"], [184, 8, 1, "", "graph_atlas_g"]], "graphscope.nx.generators.classic": [[185, 8, 1, "", "balanced_tree"], [186, 8, 1, "", "barbell_graph"], [187, 8, 1, "", "binomial_tree"], [188, 8, 1, "", "circulant_graph"], [189, 8, 1, "", "circular_ladder_graph"], [190, 8, 1, "", "complete_graph"], [191, 8, 1, "", "complete_multipartite_graph"], [192, 8, 1, "", "cycle_graph"], [193, 8, 1, "", "dorogovtsev_goltsev_mendes_graph"], [194, 8, 1, "", "empty_graph"], [195, 8, 1, "", "full_rary_tree"], [196, 8, 1, "", "ladder_graph"], [197, 8, 1, "", "lollipop_graph"], [198, 8, 1, "", "null_graph"], [199, 8, 1, "", "path_graph"], [200, 8, 1, "", "star_graph"], [201, 8, 1, "", "trivial_graph"], [202, 8, 1, "", "turan_graph"], [203, 8, 1, "", "wheel_graph"]], "graphscope.nx.generators.community": [[204, 8, 1, "", "LFR_benchmark_graph"], [205, 8, 1, "", "caveman_graph"], [206, 8, 1, "", "connected_caveman_graph"], [207, 8, 1, "", "gaussian_random_partition_graph"], [208, 8, 1, "", "planted_partition_graph"], [209, 8, 1, "", "random_partition_graph"], [210, 8, 1, "", "relaxed_caveman_graph"], [211, 8, 1, "", "ring_of_cliques"], [212, 8, 1, "", "stochastic_block_model"], [213, 8, 1, "", "windmill_graph"]], "graphscope.nx.generators.degree_seq": [[214, 8, 1, "", "configuration_model"], [215, 8, 1, "", "degree_sequence_tree"], [216, 8, 1, "", "directed_configuration_model"], [217, 8, 1, "", "directed_havel_hakimi_graph"], [218, 8, 1, "", "expected_degree_graph"], [219, 8, 1, "", "havel_hakimi_graph"], [220, 8, 1, "", "random_degree_sequence_graph"]], "graphscope.nx.generators.directed": [[221, 8, 1, "", "gn_graph"], [222, 8, 1, "", "gnc_graph"], [223, 8, 1, "", "gnr_graph"], [224, 8, 1, "", "random_k_out_graph"], [225, 8, 1, "", "scale_free_graph"]], "graphscope.nx.generators.duplication": [[226, 8, 1, "", "duplication_divergence_graph"], [227, 8, 1, "", "partial_duplication_graph"]], "graphscope.nx.generators.ego": [[228, 8, 1, "", "ego_graph"]], "graphscope.nx.generators.expanders": [[229, 8, 1, "", "chordal_cycle_graph"], [230, 8, 1, "", "margulis_gabber_galil_graph"], [231, 8, 1, "", "paley_graph"]], "graphscope.nx.generators.geometric": [[232, 8, 1, "", "geographical_threshold_graph"], [233, 8, 1, "", "random_geometric_graph"], [234, 8, 1, "", "soft_random_geometric_graph"], [235, 8, 1, "", "thresholded_random_geometric_graph"], [236, 8, 1, "", "waxman_graph"]], "graphscope.nx.generators.harary_graph": [[237, 8, 1, "", "hkn_harary_graph"], [238, 8, 1, "", "hnm_harary_graph"]], "graphscope.nx.generators.intersection": [[239, 8, 1, "", "general_random_intersection_graph"], [240, 8, 1, "", "k_random_intersection_graph"], [241, 8, 1, "", "uniform_random_intersection_graph"]], "graphscope.nx.generators.joint_degree_seq": [[242, 8, 1, "", "directed_joint_degree_graph"], [243, 8, 1, "", "is_valid_directed_joint_degree"], [244, 8, 1, "", "is_valid_joint_degree"], [245, 8, 1, "", "joint_degree_graph"]], "graphscope.nx.generators.mycielski": [[246, 8, 1, "", "mycielski_graph"], [247, 8, 1, "", "mycielskian"]], "graphscope.nx.generators.nonisomorphic_trees": [[248, 8, 1, "", "nonisomorphic_trees"], [249, 8, 1, "", "number_of_nonisomorphic_trees"]], "graphscope.nx.generators.small": [[250, 8, 1, "", "LCF_graph"], [251, 8, 1, "", "bull_graph"], [252, 8, 1, "", "chvatal_graph"], [253, 8, 1, "", "cubical_graph"], [254, 8, 1, "", "desargues_graph"], [255, 8, 1, "", "diamond_graph"], [256, 8, 1, "", "dodecahedral_graph"], [257, 8, 1, "", "frucht_graph"], [258, 8, 1, "", "heawood_graph"], [259, 8, 1, "", "house_graph"], [260, 8, 1, "", "house_x_graph"], [261, 8, 1, "", "icosahedral_graph"], [262, 8, 1, "", "krackhardt_kite_graph"], [263, 8, 1, "", "make_small_graph"], [264, 8, 1, "", "moebius_kantor_graph"], [265, 8, 1, "", "octahedral_graph"], [266, 8, 1, "", "pappus_graph"], [267, 8, 1, "", "petersen_graph"], [268, 8, 1, "", "sedgewick_maze_graph"], [269, 8, 1, "", "tetrahedral_graph"], [270, 8, 1, "", "truncated_cube_graph"], [271, 8, 1, "", "truncated_tetrahedron_graph"], [272, 8, 1, "", "tutte_graph"]], "graphscope.nx.generators.social": [[273, 8, 1, "", "davis_southern_women_graph"], [274, 8, 1, "", "florentine_families_graph"], [275, 8, 1, "", "karate_club_graph"], [276, 8, 1, "", "les_miserables_graph"]], "graphscope.nx.generators.spectral_graph_forge": [[277, 8, 1, "", "spectral_graph_forge"]], "graphscope.nx.generators.sudoku": [[278, 8, 1, "", "sudoku_graph"]], "graphscope.nx.generators.trees": [[279, 8, 1, "", "prefix_tree"], [280, 8, 1, "", "random_tree"]], "graphscope.nx.generators.triads": [[281, 8, 1, "", "triad_graph"]], "networkx.generators": [[284, 13, 0, "-", "internet_as_graphs"], [284, 13, 0, "-", "stochastic"]], "networkx.generators.internet_as_graphs": [[282, 8, 1, "", "random_internet_as_graph"]], "networkx.generators.stochastic": [[283, 8, 1, "", "stochastic_graph"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:function", "2": "cpp:templateParam", "3": "cpp:functionParam", "4": "cpp:member", "5": "cpp:type", "6": "cpp:enum", "7": "cpp:enumerator", "8": "py:function", "9": "py:class", "10": "py:method", "11": "py:property", "12": "py:data", "13": "py:module", "14": "py:attribute"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "function", "C++ function"], "2": ["cpp", "templateParam", "C++ template parameter"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "member", "C++ member"], "5": ["cpp", "type", "C++ type"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "enumerator", "C++ enumerator"], "8": ["py", "function", "Python function"], "9": ["py", "class", "Python class"], "10": ["py", "method", "Python method"], "11": ["py", "property", "Python property"], "12": ["py", "data", "Python data"], "13": ["py", "module", "Python module"], "14": ["py", "attribute", "Python attribute"]}, "titleterms": {"built": [0, 6, 55, 145, 298, 300], "algorithm": [0, 1, 2, 6, 9, 11, 15, 16, 17, 18, 19, 21, 22, 23, 31, 55, 133, 150, 300, 302], "all": [0, 30, 33, 36, 38], "pair": 0, "shortest": 0, "path": [0, 49, 52, 53], "length": 0, "attribut": [0, 20, 134, 151], "assort": 0, "averag": 0, "degre": [0, 158, 284], "connect": [0, 27, 29, 298], "between": [0, 49, 294], "central": 0, "breadth": 0, "first": [0, 47], "search": 0, "close": 0, "cluster": [0, 27, 28, 38, 47, 61], "coeffici": 0, "depth": 0, "eigenvector": 0, "hyperlink": 0, "induc": [0, 20], "topic": [0, 44], "katz": 0, "k": 0, "core": 0, "shell": 0, "label": [0, 52, 53, 134, 297, 318], "propag": 0, "pagerank": 0, "sampl": [0, 59, 68, 133, 137, 139, 142, 145], "singl": [0, 43], "sourc": [0, 30, 36, 52, 77, 134, 140, 143, 144], "voterank": 0, "custom": [1, 23, 28, 298], "aggreg": [1, 49, 52, 53, 56], "deploy": [2, 28, 35, 46, 47], "gae": [2, 31, 65, 302, 306], "prerequisit": [2, 16, 27, 28, 29, 30, 298], "onli": [2, 34], "python": [2, 15, 18, 32, 33, 36, 55, 72, 290, 298, 302, 310], "sdk": [2, 16, 31, 76], "helm": [2, 29], "execut": [2, 31, 63], "graph": [2, 9, 11, 19, 20, 27, 31, 42, 43, 44, 46, 53, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 133, 135, 136, 137, 138, 139, 141, 145, 147, 149, 151, 284, 285, 287, 288, 294, 296, 297, 298, 299, 300, 306], "analyt": [2, 3, 4, 7, 10, 24, 36, 42, 46, 55, 63, 66, 71, 73, 74, 306], "uninstal": [2, 29, 298], "design": [3, 9, 31, 48, 55, 56, 63, 143, 297], "engin": [3, 4, 7, 9, 10, 12, 24, 33, 36, 46, 50, 55, 57, 58, 62, 63, 71, 73, 297, 306], "dev": [4, 30, 33, 38, 57], "test": [4, 33, 34, 38, 57, 140], "environ": [4, 30, 33, 36, 38, 57], "build": [4, 30, 33, 38, 57, 77, 133, 140, 298, 318], "how": [4, 19, 34, 37, 38, 44, 45, 49, 57, 133, 143, 145, 306], "faq": [5, 49], "program": [6, 12, 14, 31, 43, 143], "model": [6, 12, 14, 15, 16, 17, 24, 31, 56, 61, 62, 65, 68, 133, 141, 145, 297, 298], "flash": [6, 15, 65], "motiv": [6, 9, 48, 63, 297], "The": [6, 19, 47, 48, 296], "overview": [6, 9, 12, 46, 141, 298], "api": [6, 9, 12, 19, 20, 73, 76, 134, 145, 286, 290, 314], "strong": 6, "express": [6, 52, 53], "implement": [6, 15, 17, 34, 143, 297], "architectur": [6, 12, 48, 294], "optim": [6, 49], "get": [7, 34, 41, 50, 58, 64, 140, 295], "start": [7, 41, 50, 53, 58, 64, 145, 295], "instal": [7, 27, 28, 29, 30, 33, 34, 36, 46, 50, 57, 58, 140, 298], "run": [7, 15, 16, 17, 18, 21, 22, 23, 34, 38, 43, 50, 58, 140], "graphscop": [7, 10, 15, 16, 17, 19, 20, 22, 23, 26, 27, 28, 29, 30, 33, 36, 38, 43, 46, 50, 58, 63, 66, 68, 69, 70, 73, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 294, 296, 310, 314, 315], "local": [7, 30, 33, 35, 38, 50, 52, 57, 58, 62, 297, 298], "what": [7, 14, 49, 50, 58, 66, 68, 69], "": [7, 49, 50, 58, 73], "next": [7, 50, 58, 69], "guid": [8, 32, 33, 51, 60, 298, 302, 303], "exampl": [8, 17, 22, 23, 51, 60, 302, 303], "ingress": [9, 65], "increment": [9, 12], "messag": [9, 56], "driven": 9, "differenti": 9, "flexibl": [9, 31], "memoiz": 9, "distribut": [9, 43, 135, 143], "runtim": [9, 31, 143], "kei": [10, 49, 55, 123], "concept": [10, 297], "loadstrategi": 10, "onlyout": 10, "onlyin": 10, "bothinout": 10, "partitionstrategi": 10, "edg": [10, 20, 53, 151, 162, 287, 297, 318], "cut": [10, 297], "vertex": [10, 24, 53, 79, 291, 297, 318], "vertic": [10, 53, 318], "outervertex": 10, "innervertex": 10, "innervertexwithoutgoingedg": 10, "innervertexwithincomingedg": 10, "messagemanag": 10, "messagestrategi": 10, "alongoutgoingedgetooutervertex": 10, "alongincomingedgetooutervertex": 10, "alongedgetooutervertex": 10, "synconoutervertexastarget": 10, "synconoutervertexassourc": 10, "synconoutervertex": 10, "networkx": [11, 19, 282, 283, 286], "compat": [11, 67], "convert": 11, "nx": [11, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "support": [11, 23, 52, 55], "oper": [11, 20, 53, 119, 120, 121, 122, 123, 124, 143, 289], "storag": [12, 31, 46, 63, 294, 297], "layer": [12, 63], "grape": [12, 17, 65, 77], "ffi": 12, "comput": [12, 43, 46, 63, 297], "applic": [12, 15, 22, 23, 53, 63, 300], "perform": [13, 19, 31, 49, 55, 71], "tune": 13, "pie": [14, 16, 17, 18, 65, 76, 308], "i": [14, 52, 66, 68, 69], "workflow": [14, 55, 294], "tutori": [15, 16, 17, 18, 19, 20, 21, 22, 23, 53, 54, 61, 62, 72], "develop": [15, 16, 17, 18, 22, 23, 33, 46, 133, 145, 298, 302], "your": [15, 16, 17, 18, 22, 34, 47, 62, 133, 143, 302], "c": [15, 16, 32, 302], "defin": [15, 16, 44, 62, 143, 294], "A": [15, 46], "function": [15, 18, 74, 76, 133, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 292], "integr": [15, 34, 43, 144], "client": [15, 27, 28, 33, 135], "step": [16, 52, 53, 68], "1": [16, 39, 134, 135, 137, 145], "context": [16, 73, 75, 291], "class": [16, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "2": [16, 39, 134, 135, 145], "3": [16, 39, 134, 135, 145], "packag": [16, 30, 36, 140], "4": [16, 39, 134, 145], "gar": 16, "file": [16, 28, 36, 144, 296], "github": [16, 17, 25, 34], "templat": [16, 17], "java": [17, 32, 54, 78, 298, 302], "jar": 17, "own": [17, 18, 22, 47, 133, 143], "prepar": [17, 27, 28, 38, 145], "jdk": [17, 77], "submit": [17, 22, 23, 34, 37], "javasdk": 17, "write": [18, 298], "pregel": [18, 24, 76, 308], "us": [18, 20, 27, 28, 30, 47, 49, 55, 69, 140, 143, 145, 291, 294, 298, 299], "math": [18, 308], "h": [18, 308], "netowrkx": [19, 20], "doe": 19, "analysi": [19, 63], "from": [19, 20, 30, 36, 46, 53, 77, 140, 294, 298], "displai": 19, "speed": 19, "up": [19, 27, 28], "over": 19, "creat": [20, 34, 61], "an": [20, 27, 143], "empti": 20, "ad": 20, "node": [20, 56, 61, 62, 151, 172, 298], "examin": 20, "element": 20, "remov": [20, 47], "constructor": 20, "access": 20, "neighbor": [20, 171], "deepcopi": 20, "subgraph": [20, 49, 52, 56, 59, 68, 180], "edge_subgraph": [20, 161], "make": 20, "copi": [20, 36], "direct": [20, 221, 222, 223, 224, 225, 284], "analyz": 20, "object": [20, 74, 75, 135, 147, 289, 292], "transform": [20, 288], "builtin": [21, 74, 150, 289], "giraph": 22, "try": [22, 145], "some": [22, 53], "app": [22, 23, 73, 74, 81], "graphx": 23, "deploi": [23, 26, 27, 28, 29, 47, 298], "along": 23, "spark": 23, "includ": 23, "depend": [23, 30, 36, 140], "toward": 23, "centric": [24, 56], "ga": 24, "simul": 24, "contact": 25, "u": 25, "slack": [25, 34], "discuss": [25, 34], "cloud": [26, 55, 134], "exist": 27, "vineyard": [27, 65, 299], "multipl": [27, 49, 53], "session": [27, 61, 131, 292], "kubernet": [27, 28, 35, 38, 61, 310, 315], "load": [27, 44, 53, 61, 62, 294, 296, 298, 299], "dataset": [27, 298], "anoth": 27, "clean": [27, 28], "k8": [28, 47, 61, 306], "launch": [28, 62], "default": 28, "paramet": 28, "frequent": [28, 40, 49], "imag": [28, 30, 38, 140, 298], "uri": 28, "specifi": 28, "number": 28, "worker": [28, 73], "provid": 28, "kubeconfig": 28, "other": [28, 47, 144], "than": 28, "mount": 28, "volum": 28, "inspect": 28, "releas": [29, 34], "configur": [29, 47, 146, 298], "offlin": [29, 36, 298], "stabl": 30, "version": 30, "preview": 30, "setup": 30, "linux": [30, 310], "maco": [30, 310], "framework": [31, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "multi": [31, 291], "languag": [31, 139], "high": [31, 55, 63], "librari": [31, 55, 140], "code": [32, 34, 143, 304], "style": [32, 34, 286, 297], "rust": 32, "script": 32, "linter": 32, "checker": 32, "dep": [33, 57], "docker": [33, 57, 140, 310], "contain": [33, 57], "target": [33, 38], "compon": 33, "individu": 33, "coordin": 33, "contribut": 34, "conduct": 34, "commun": [34, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 284], "report": [34, 45], "bug": [34, 45], "request": [34, 37], "featur": [34, 55, 296], "improv": 34, "document": 34, "chang": 34, "pre": 34, "commit": [34, 298], "minor": 34, "fix": 34, "fork": 34, "branch": [34, 52], "suit": 34, "format": [34, 134, 296, 298], "right": 34, "keep": 34, "pull": [34, 37], "updat": 34, "merg": 34, "pr": 34, "maintain": 34, "ship": 34, "review": 34, "continu": 34, "debug": 35, "command": [35, 305], "techniqu": 35, "mode": [36, 135], "wheel": [36, 140, 310], "download": 36, "destin": 36, "extract": [36, 53], "them": 36, "locat": 36, "basic": [36, 53, 134], "gcc": 36, "g": [36, 125, 305], "third": 36, "parti": 36, "introduct": [39, 52, 137], "arrowfrag": 39, "0": 39, "\u672f\u8bed": 39, "\u8f7d\u56fe": [39, 318], "\u521d\u59cb\u5316partiton": 39, "\u6784\u5efa\u539f\u59cbarrow": 39, "tabl": [39, 46, 134], "shuffl": 39, "vtabl": 39, "\u6784\u5efavertex": 39, "map": [39, 294], "basicarrowvertexmapbuild": 39, "5": [39, 134], "\u6784\u5efafragment\u51c6\u5907": 39, "\u5904\u7406edg": 39, "basicevfragmentload": 39, "fragmentbuilder\u6570\u636e\u521d\u59cb\u5316": 39, "basicarrowfragmentbuild": 39, "6": 39, "fragment\u6784\u5efa": 39, "\u8bbf\u95eefragment": 39, "\u8bbf\u95ee\u9876\u70b9": 39, "\u8bbf\u95ee\u5185\u90e8\u70b9": 39, "\u8303\u56f4\u5916\u90e8\u70b9": 39, "\u8bbf\u95ee\u5168\u90e8\u70b9": 39, "\u8bbf\u95ee\u9876\u70b9\u6570\u636e": 39, "\u8bbf\u95ee\u8fb9": 39, "\u8bbf\u95ee\u51fa\u8fb9": 39, "\u8bbf\u95ee\u5165\u8fb9": 39, "\u8bbf\u95ee\u8fb9\u4e0a\u7684\u6570\u636e": 39, "ask": [40, 49], "question": [40, 49], "gle": [41, 56, 303, 306], "workload": [42, 66, 67, 68, 70, 294], "interact": [42, 46, 50, 64, 67, 71, 148, 306], "queri": [42, 48, 49, 53, 63, 64, 136, 148, 298], "learn": [42, 46, 56, 57, 58, 62, 63, 64, 68, 70, 133, 141, 149, 306], "grpahscop": 43, "data": [43, 47, 49, 134, 141, 144, 145, 296, 298], "scientist": 43, "challeng": [43, 66, 68], "handl": [43, 70], "solut": 43, "machin": [43, 62], "pydata": 43, "ecosystem": 43, "schema": 44, "advanc": 44, "tip": 44, "reduc": 44, "memori": [44, 299], "consumpt": 44, "One": [46, 64, 291], "stop": [46, 64], "larg": [46, 66, 68], "scale": [46, 301], "system": [46, 70, 144, 146], "alibaba": [46, 134], "troubleshoot": [46, 298], "util": [46, 305], "refer": [46, 73, 78, 290, 297], "indic": 46, "standalon": 47, "gie": [47, 48, 49, 306], "servic": [47, 298], "process": [48, 62, 64, 70, 133, 298], "gremlin": [49, 52, 53, 55, 67, 129, 316], "usag": 49, "differ": [49, 291], "inner": 49, "id": [49, 52, 53, 297], "properti": [49, 52, 53, 67, 297, 318], "expand": [49, 52, 229, 230, 231, 284], "filter": [49, 52, 53], "like": 49, "sql": 49, "group": [49, 52, 53], "valu": [49, 52, 53], "appropri": 49, "index": 49, "standard": [52, 296], "v": 52, "e": 52, "out": [52, 53, 145], "inE": [52, 53], "both": [52, 53], "outv": [52, 53], "inv": [52, 53], "otherv": [52, 53], "bothv": [52, 53], "hasid": [52, 53], "haslabel": 52, "ha": 52, "hasnot": 52, "where": [52, 53], "travers": [52, 53, 55, 59, 67, 138], "predic": 52, "dedup": [52, 53], "project": [52, 53, 77], "constant": [52, 53], "valuemap": [52, 53], "select": [52, 53], "count": 52, "fold": [52, 53], "sum": [52, 53], "min": [52, 53], "max": [52, 53], "mean": [52, 53], "groupcount": [52, 53], "order": [52, 53, 297], "statist": 52, "limit": [52, 53, 69, 298], "coin": 52, "union": 52, "match": [52, 53, 67], "syntact": [52, 53], "sugar": [52, 53], "pathexpand": 52, "endv": 52, "To": 52, "ident": 52, "elementmap": 52, "unfold": 52, "Will": 52, "Not": 52, "repeat": 52, "sideeffect": 52, "ldbc": 53, "retriev": [53, 297], "appli": [53, 68], "real": 53, "expans": 53, "mani": 53, "point": 53, "after": 53, "pattern": [53, 67], "relat": [53, 294], "syntax": 53, "complex": 53, "bi2": 53, "bi3": 53, "bi4": 53, "left": 53, "part": 53, "bi11": 53, "bi14": 53, "user": [54, 72, 134, 302, 303], "eas": 55, "interfac": [55, 143, 144, 297], "cypher": 55, "extens": 55, "gnn": [55, 61, 68, 145, 312], "train": [55, 61, 62, 68, 133], "infer": 55, "nativ": 55, "across": 55, "orchestr": 55, "paradigm": [56, 68], "egograph": 56, "base": 56, "pass": 56, "pipelin": 56, "neighborhood": 59, "neg": [59, 142], "gsl": [59, 139], "classif": [61, 62], "neural": [61, 68], "network": [61, 68, 284], "egographsag": 62, "unifi": [63, 297], "platform": 63, "disaggreg": 63, "divers": 63, "bi": 63, "qp": 63, "quick": [64, 145], "glossari": 65, "gart": [65, 294], "grin": [65, 297], "graphar": [65, 296], "groot": [65, 298, 306], "gum": 65, "maxgraph": 65, "deprec": 65, "v6d": 65, "gaia": 65, "pegasu": 65, "can": [66, 68], "do": [66, 68], "tinkerpop": [67, 316], "constraint": 67, "typic": 68, "introduc": 69, "why": 69, "ar": 69, "case": 69, "posit": 70, "compar": 70, "databas": 70, "variou": 70, "type": [70, 76, 134, 285], "benchmark": 71, "result": [71, 291], "gpu": 71, "reproduc": 71, "fragment": 73, "appasset": 74, "javaapp": 74, "cython": 76, "about": 77, "structur": [77, 151], "javadoc": 78, "declar": 80, "load_app": 81, "dag_util": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "add_column": 82, "add_labels_to_graph": 83, "arrow_to_dynam": 84, "bind_app": 85, "clear_edg": 86, "clear_graph": 87, "context_to_datafram": 88, "context_to_numpi": 89, "copy_graph": 90, "create_app": 91, "create_graph": 92, "create_graph_view": 93, "create_load": 94, "create_subgraph": 95, "create_unload_op": 96, "dynamic_to_arrow": 97, "fetch_gremlin_result": 98, "get_context_data": 99, "graph_to_datafram": 100, "graph_to_numpi": 101, "gremlin_queri": 102, "gremlin_to_subgraph": 103, "modify_edg": 104, "modify_vertic": 105, "output": 106, "project_arrow_property_graph": 107, "project_to_simpl": 108, "report_graph": 109, "run_app": 110, "to_data_sink": 111, "to_direct": [112, 181], "to_undirect": [113, 182], "to_vineyard_datafram": 114, "to_vineyard_tensor": 115, "unload_app": 116, "unload_context": 117, "unload_graph": 118, "__init__": 119, "as_op_def": 120, "eval": 121, "evalu": 122, "signatur": 124, "get_default_sess": 126, "get_opt": 127, "graphlearn": 128, "has_default_sess": 130, "set_opt": 132, "encod": [133, 141], "loss": 133, "weight": 134, "put": 134, "togeth": 134, "maxcomput": 134, "describ": 135, "topologi": 135, "stand": 135, "alon": 135, "server": 135, "pip": 140, "tensorflow": 140, "git": 140, "compil": [140, 143], "new": 143, "clone": 143, "regist": [143, 144], "bytestreamaccessfil": 144, "structuredaccessfil": 144, "writablefil": 144, "scheme": 144, "gl": 145, "construct": 145, "loader": [147, 318], "self": 151, "loop": 151, "freez": [151, 163], "add_cycl": 152, "add_path": 153, "add_star": 154, "all_neighbor": 155, "common_neighbor": 156, "create_empty_copi": 157, "degree_histogram": 159, "densiti": 160, "induced_subgraph": 164, "info": 165, "is_direct": 166, "is_empti": 167, "is_frozen": 168, "is_negatively_weight": 169, "is_weight": 170, "nodes_with_selfloop": 173, "non_edg": 174, "non_neighbor": 175, "number_of_edg": 176, "number_of_nod": 177, "number_of_selfloop": 178, "selfloop_edg": 179, "gener": [183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284], "atla": [183, 184, 284], "graph_atla": 183, "graph_atlas_g": 184, "classic": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 284], "balanced_tre": 185, "barbell_graph": 186, "binomial_tre": 187, "circulant_graph": 188, "circular_ladder_graph": 189, "complete_graph": 190, "complete_multipartite_graph": 191, "cycle_graph": 192, "dorogovtsev_goltsev_mendes_graph": 193, "empty_graph": 194, "full_rary_tre": 195, "ladder_graph": 196, "lollipop_graph": 197, "null_graph": 198, "path_graph": 199, "star_graph": 200, "trivial_graph": 201, "turan_graph": 202, "wheel_graph": 203, "lfr_benchmark_graph": 204, "caveman_graph": 205, "connected_caveman_graph": 206, "gaussian_random_partition_graph": 207, "planted_partition_graph": 208, "random_partition_graph": 209, "relaxed_caveman_graph": 210, "ring_of_cliqu": 211, "stochastic_block_model": 212, "windmill_graph": 213, "degree_seq": [214, 215, 216, 217, 218, 219, 220], "configuration_model": 214, "degree_sequence_tre": 215, "directed_configuration_model": 216, "directed_havel_hakimi_graph": 217, "expected_degree_graph": 218, "havel_hakimi_graph": 219, "random_degree_sequence_graph": 220, "gn_graph": 221, "gnc_graph": 222, "gnr_graph": 223, "random_k_out_graph": 224, "scale_free_graph": 225, "duplic": [226, 227, 284], "duplication_divergence_graph": 226, "partial_duplication_graph": 227, "ego": [228, 284], "ego_graph": 228, "chordal_cycle_graph": 229, "margulis_gabber_galil_graph": 230, "paley_graph": 231, "geometr": [232, 233, 234, 235, 236, 284], "geographical_threshold_graph": 232, "random_geometric_graph": 233, "soft_random_geometric_graph": 234, "thresholded_random_geometric_graph": 235, "waxman_graph": 236, "harary_graph": [237, 238], "hkn_harary_graph": 237, "hnm_harary_graph": 238, "intersect": [239, 240, 241, 284], "general_random_intersection_graph": 239, "k_random_intersection_graph": 240, "uniform_random_intersection_graph": 241, "joint_degree_seq": [242, 243, 244, 245], "directed_joint_degree_graph": 242, "is_valid_directed_joint_degre": 243, "is_valid_joint_degre": 244, "joint_degree_graph": 245, "mycielski": [246, 247, 284], "mycielski_graph": 246, "mycielskian": 247, "nonisomorphic_tre": [248, 249], "number_of_nonisomorphic_tre": 249, "small": [250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 284], "lcf_graph": 250, "bull_graph": 251, "chvatal_graph": 252, "cubical_graph": 253, "desargues_graph": 254, "diamond_graph": 255, "dodecahedral_graph": 256, "frucht_graph": 257, "heawood_graph": 258, "house_graph": 259, "house_x_graph": 260, "icosahedral_graph": 261, "krackhardt_kite_graph": 262, "make_small_graph": 263, "moebius_kantor_graph": 264, "octahedral_graph": 265, "pappus_graph": 266, "petersen_graph": 267, "sedgewick_maze_graph": 268, "tetrahedral_graph": 269, "truncated_cube_graph": 270, "truncated_tetrahedron_graph": 271, "tutte_graph": 272, "social": [273, 274, 275, 276, 284], "davis_southern_women_graph": 273, "florentine_families_graph": 274, "karate_club_graph": 275, "les_miserables_graph": 276, "spectral_graph_forg": 277, "sudoku": [278, 284], "sudoku_graph": 278, "tree": [279, 280, 284], "prefix_tre": 279, "random_tre": 280, "triad": [281, 284], "triad_graph": 281, "internet_as_graph": 282, "random_internet_as_graph": 282, "stochast": [283, 284], "stochastic_graph": 283, "diverg": 284, "sequenc": 284, "AS": 284, "spectral": 284, "non": 284, "isomorph": 284, "joint": 284, "harari": 284, "digraph": 285, "read": 287, "list": [287, 297], "adjac": 287, "selector": 291, "tensorcontext": 291, "vertexdatacontext": 291, "labeledvertexdatacontext": 291, "vertexpropertycontext": 291, "labeledvertexpropertycontext": 291, "method": 291, "dimension": 291, "rang": 291, "resourc": 293, "estim": 293, "bridg": 294, "gap": 294, "oltp": 294, "log": [294, 298, 306], "inform": 296, "archiv": 296, "predefin": 297, "macro": 297, "partit": [297, 298, 301], "strategi": 297, "guidelin": 297, "For": 297, "detail": 297, "handler": 297, "arrai": 297, "iter": 297, "master": 297, "mirror": 297, "complet": 297, "natur": 297, "trait": 297, "persist": 298, "store": 298, "known": 298, "artifacthub": 298, "directori": 298, "common": 298, "modifi": 298, "j": 298, "import": 298, "ingest": 298, "realtim": 298, "restart": 298, "destroi": 298, "view": 298, "In": 299, "immut": 299, "bind": 300, "repartit": 301, "fennel": 301, "xtrapulp": 301, "hybrid": 301, "error": 304, "line": 305, "find": 306, "monitor": 307, "\u56fe\u5206\u6790\u5f15\u64ce": 308, "\u5185\u7f6e\u7b97\u6cd5": 308, "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": 308, "\u4f7f\u7528": 308, "\u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": 308, "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528": 308, "\u4e2d\u7684\u51fd\u6570": 308, "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": 308, "\u8fd0\u884cjava\u7f16\u5199\u7684\u7b97\u6cd5": 308, "\u8fd0\u884c\u793a\u4f8b\u7684java\u7b97\u6cd5": 308, "\u4f7f\u7528java\u7f16\u5199\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5": 308, "\u90e8\u7f72": 309, "\u4f7f\u7528helm\u90e8\u7f72graphscop": 309, "\u5728aw": 309, "\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": 309, "\u672c\u5730\u90e8\u7f72graphscop": 309, "\u5f00\u53d1\u8005\u6307\u5357": 310, "\u57fa\u4e8e": [310, 315], "\u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5": 310, "\u6784\u5efa": 310, "\u4ee3\u7801\u98ce\u683c": 310, "\u5e38\u89c1\u95ee\u9898": 311, "\u5feb\u901f\u4e0a\u624b": 312, "\u793a\u4f8b": 312, "\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 312, "\u521b\u5efa\u4f1a\u8bdd": 312, "\u4ea4\u4e92\u5f0f\u67e5\u8be2": 312, "\u56fe\u5206\u6790": 312, "\u56fe\u795e\u7ecf\u7f51\u7edc": 312, "\u5173\u95ed\u4f1a\u8bdd": 312, "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": 313, "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": 313, "\u6295\u5f71": 313, "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 313, "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": 313, "\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": 314, "\u76ee\u5f55": [314, 319], "\u53c2\u8003": 314, "\u7d22\u5f15": 314, "\u5b89\u88c5": 315, "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": 315, "\u5ba2\u6237\u7aef": 315, "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": 316, "apach": 316, "\u5229\u7528python": 316, "\u8fde\u63a5graphscop": 316, "\u5229\u7528java": 316, "consol": 316, "\u5f00\u53d1\u63a7\u5236\u53f0": 316, "gremlin\u7f16\u7a0b\u5165\u95e8": 316, "101": 316, "\u56fe\u6570\u636e\u6a21\u578b": 316, "\u67e5\u8be2\u8bed\u8a00": 316, "\u4e00\u4e2a\u4f8b\u5b50": 316, "gremlin\u517c\u5bb9\u6027": 316, "\u5bf9\u6bd4tinkerpop": 316, "\u5c5e\u6027\u56fe\u6a21\u578b\u7ea6\u675f": 316, "\u5c1a\u4e0d\u652f\u6301\u7684\u529f\u80fd\u7279\u6027": 316, "\u652f\u6301\u7684gremlin\u64cd\u4f5c": 316, "\u5df2\u77e5\u9650\u5236": 316, "\u56fe\u5b66\u4e60\u5f15\u64ce": 317, "\u56fe\u5b66\u4e60\u6a21\u578b": 317, "\u6570\u636e\u6a21\u578b": 317, "\u7f16\u7801\u5668": 317, "\u81ea\u5b9a\u4e49\u7b97\u6cd5": 317, "\u91c7\u6837": 317, "\u56fe\u6570\u636e\u6d41": 317, "\u6a21\u578b": 317, "\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": 317, "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": 318, "\u624b\u52a8\u914d\u7f6e\u56fe": 318, "vid_field": 318, "src_label": 318, "dst_label": 318, "src_field": 318, "dst_field": 318, "\u9ad8\u7ea7\u7528\u6cd5": 318, "\u6ca1\u6709\u6b67\u4e49\u65f6": 318, "\u81ea\u52a8\u63a8\u65ad\u70b9\u6807\u7b7e": 318, "\u4ece\u8fb9\u4e2d\u63a8\u65ad\u70b9": 318, "\u591a\u79cd\u8fb9\u5173\u7cfb": 318, "\u6307\u5b9a\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b": 318, "\u56fe\u7684\u5176\u4ed6\u53c2\u6570": 318, "\u5b8c\u6574\u7684\u793a\u4f8b": 318, "\u4ece": 318, "panda": 318, "\u6216": 318, "numpi": 318, "\u4e2d\u8f7d\u56fe": 318, "\u7684\u53d8\u79cd": 318, "\u5165\u95e8\u6559\u7a0b": 319}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Built-in Algorithms": [[0, "built-in-algorithms"], [6, "built-in-algorithms"]], "All Pairs Shortest Path Length": [[0, "all-pairs-shortest-path-length"]], "Attribute Assortativity": [[0, "attribute-assortativity"]], "Average Degree Connectivity": [[0, "average-degree-connectivity"]], "Betweenness Centrality": [[0, "betweenness-centrality"]], "Breadth-First Search": [[0, "breadth-first-search"]], "Closeness Centrality": [[0, "closeness-centrality"]], "Clustering": [[0, "clustering"]], "Degree Assortativity Coefficient": [[0, "degree-assortativity-coefficient"]], "Degree Centrality": [[0, "degree-centrality"]], "Depth-First Search": [[0, "depth-first-search"]], "Eigenvector Centrality": [[0, "eigenvector-centrality"]], "Hyperlink-Induced Topic Search": [[0, "hyperlink-induced-topic-search"]], "Katz Centrality": [[0, "katz-centrality"]], "K-Core": [[0, "k-core"]], "K-Shell": [[0, "k-shell"]], "Label Propagation Algorithm": [[0, "label-propagation-algorithm"]], "PageRank": [[0, "pagerank"]], "Sampling Path": [[0, "sampling-path"]], "Single-Source Shortest Paths": [[0, "single-source-shortest-paths"]], "VoteRank": [[0, "voterank"]], "Customized Algorithms": [[1, "customized-algorithms"]], "Aggregators": [[1, "aggregators"]], "Deployment for GAE": [[2, "deployment-for-gae"]], "Prerequisites": [[2, "prerequisites"], [27, "prerequisites"], [28, "prerequisites"], [29, "prerequisites"], [30, "prerequisites"], [298, "prerequisites"]], "Deployment GAE only": [[2, "deployment-gae-only"]], "Deployment with Python SDK": [[2, "deployment-with-python-sdk"]], "Deployment with Helm": [[2, "deployment-with-helm"]], "Execute graph analytical algorithms": [[2, "execute-graph-analytical-algorithms"]], "Uninstall deployment": [[2, "uninstall-deployment"]], "Design of Analytical Engine": [[3, "design-of-analytical-engine"], [3, null]], "Dev and Test": [[4, "dev-and-test"], [57, "dev-and-test"]], "Dev Environment": [[4, "dev-environment"], [33, "dev-environment"], [38, "dev-environment"], [57, "dev-environment"]], "Build Analytical Engine": [[4, "build-analytical-engine"]], "How to Test": [[4, "how-to-test"], [38, "how-to-test"], [57, "how-to-test"]], "FAQs": [[5, "faqs"]], "Programming Model: FLASH": [[6, "programming-model-flash"]], "Motivation": [[6, "motivation"], [9, "motivation"], [63, "motivation"]], "The FLASH Programming Model": [[6, "the-flash-programming-model"]], "Overview": [[6, "overview"], [9, "overview"], [46, null], [141, "overview"], [298, "overview"]], "FLASH API": [[6, "flash-api"]], "Strong Expressiveness": [[6, "strong-expressiveness"]], "Implementation": [[6, "implementation"]], "Architecture": [[6, "architecture"], [12, "architecture"]], "Optimizations": [[6, "optimizations"]], "Getting Started": [[7, "getting-started"], [50, "getting-started"], [58, "getting-started"], [64, "getting-started"], [295, "getting-started"]], "Installation": [[7, "installation"], [29, "installation"], [50, "installation"], [58, "installation"], [298, "installation"]], "Running GraphScope Analytical Engine on Local": [[7, "running-graphscope-analytical-engine-on-local"]], "What\u2019s the Next": [[7, "whats-the-next"], [50, "whats-the-next"], [58, "whats-the-next"]], "Guide and Examples": [[8, "guide-and-examples"], [51, "guide-and-examples"], [60, "guide-and-examples"]], "Ingress: Incrementalize Graph Algorithms": [[9, "ingress-incrementalize-graph-algorithms"]], "Design of Ingress": [[9, "design-of-ingress"]], "Message-driven Differentiation": [[9, "message-driven-differentiation"]], "Flexible Memoization": [[9, "flexible-memoization"]], "Ingress API": [[9, "ingress-api"]], "Distributed Runtime Engine": [[9, "distributed-runtime-engine"]], "Key Concepts": [[10, "key-concepts"]], "LoadStrategy": [[10, "loadstrategy"]], "OnlyOut": [[10, "onlyout"]], "OnlyIn": [[10, "onlyin"]], "BothInOut": [[10, "bothinout"]], "PartitionStrategy": [[10, "partitionstrategy"]], "Edge Cut": [[10, "edge-cut"]], "Vertex Cut": [[10, "vertex-cut"]], "Vertices on GraphScope analytical engine": [[10, "vertices-on-graphscope-analytical-engine"]], "OuterVertex": [[10, "outervertex"]], "InnerVertex": [[10, "innervertex"]], "InnerVertexWithOutgoingEdge": [[10, "innervertexwithoutgoingedge"]], "InnerVertexWithIncomingEdge": [[10, "innervertexwithincomingedge"]], "MessageManager and MessageStrategy": [[10, "messagemanager-and-messagestrategy"]], "AlongOutgoingEdgeToOuterVertex": [[10, "alongoutgoingedgetooutervertex"]], "AlongIncomingEdgeToOuterVertex": [[10, "alongincomingedgetooutervertex"]], "AlongEdgeToOuterVertex": [[10, "alongedgetooutervertex"]], "SyncOnOuterVertexAsTarget": [[10, "synconoutervertexastarget"]], "SyncOnOuterVertexAsSource": [[10, "synconoutervertexassource"]], "SyncOnOuterVertex": [[10, "synconoutervertex"]], "NetworkX Compatibility": [[11, "networkx-compatibility"]], "Convert a Graph to a nx.Graph": [[11, "convert-a-graph-to-a-nx-graph"]], "Supported Graph Operations": [[11, "supported-graph-operations"]], "Supported Algorithms": [[11, "supported-algorithms"]], "Overview and Architecture": [[12, "overview-and-architecture"]], "Storage Layer": [[12, "storage-layer"]], "Engine Layer": [[12, "engine-layer"]], "GRAPE Engine": [[12, "grape-engine"]], "Programming Model APIs": [[12, "programming-model-apis"]], "FFIs": [[12, "ffis"]], "Incremental Computation Engine": [[12, "incremental-computation-engine"]], "Application Layer": [[12, "application-layer"]], "Performance Tuning": [[13, "performance-tuning"]], "Programming Model: PIE": [[14, "programming-model-pie"]], "What is the PIE Model?": [[14, "what-is-the-pie-model"]], "Workflow of PIE": [[14, "workflow-of-pie"]], "Tutorial: Develop Your Algorithms in C++ with FLASH Model": [[15, "tutorial-develop-your-algorithms-in-c-with-flash-model"]], "Developing Algorithms with FLASH Model": [[15, "developing-algorithms-with-flash-model"]], "Defining A FLASH Application": [[15, "defining-a-flash-application"]], "Implementing the Run Function": [[15, "implementing-the-run-function"]], "Integrating with the Python Client of GraphScope": [[15, "integrating-with-the-python-client-of-graphscope"]], "Running the FLASH Algorithms": [[15, "running-the-flash-algorithms"]], "Tutorial: Develop your Algorithm in C++ with PIE Model": [[16, "tutorial-develop-your-algorithm-in-c-with-pie-model"]], "Prerequisites:": [[16, "prerequisites"]], "Step 1: Define the context class": [[16, "step-1-define-the-context-class"]], "Step 2: Define the Algorithm class": [[16, "step-2-define-the-algorithm-class"]], "Step 3: Package the Algorithm": [[16, "step-3-package-the-algorithm"]], "Step 4: Run the .gar file on GraphScope": [[16, "step-4-run-the-gar-file-on-graphscope"]], "GraphScope C++ SDK with Github Template": [[16, "graphscope-c-sdk-with-github-template"]], "Tutorial: Develop your Algorithm in Java with PIE Model": [[17, "tutorial-develop-your-algorithm-in-java-with-pie-model"]], "Run example algorithms with example jar": [[17, "run-example-algorithms-with-example-jar"]], "Implement your own algorithms in Java.": [[17, "implement-your-own-algorithms-in-java"]], "Prepare GRAPE-jdk": [[17, "prepare-grape-jdk"]], "Implement your algorithm": [[17, "implement-your-algorithm"]], "Submit to GraphScope": [[17, "submit-to-graphscope"]], "GraphScope JavaSDK with Github Template": [[17, "graphscope-javasdk-with-github-template"]], "Tutorial: Develop algorithms in Python": [[18, "tutorial-develop-algorithms-in-python"]], "Writing Your Own Algorithms in PIE": [[18, "writing-your-own-algorithms-in-pie"]], "Writing Algorithms in Pregel": [[18, "writing-algorithms-in-pregel"]], "Using math.h Functions in Algorithms": [[18, "using-math-h-functions-in-algorithms"]], "Run Your Own Algorithms": [[18, "run-your-own-algorithms"]], "Tutorial: Graph Algorithms with NetowrkX APIs": [[19, "tutorial-graph-algorithms-with-netowrkx-apis"]], "How does Networkx Perform Graph Analysis?": [[19, "how-does-networkx-perform-graph-analysis"]], "How to Perform Graph Analysis with NetworkX APIs from GraphScope": [[19, "how-to-perform-graph-analysis-with-networkx-apis-from-graphscope"]], "Graph Analysis": [[19, "graph-analysis"]], "Graph Display": [[19, "graph-display"]], "The Performance Speed-up of GraphScope over NetworkX": [[19, "the-performance-speed-up-of-graphscope-over-networkx"]], "Tutorial: Graph Operations with NetowrkX APIs": [[20, "tutorial-graph-operations-with-netowrkx-apis"]], "Creating an Empty Graph": [[20, "creating-an-empty-graph"]], "Adding Nodes": [[20, "adding-nodes"]], "Adding Edges": [[20, "adding-edges"]], "Examining Elements of a Graph": [[20, "examining-elements-of-a-graph"]], "Removing Elements from a Graph": [[20, "removing-elements-from-a-graph"]], "Using Graph Constructors": [[20, "using-graph-constructors"]], "Accessing Edges and Neighbors": [[20, "accessing-edges-and-neighbors"]], "Adding Attributes to Graphs, Nodes and Edges": [[20, "adding-attributes-to-graphs-nodes-and-edges"]], "Graph Attributes": [[20, "graph-attributes"]], "Node Attributes": [[20, "node-attributes"]], "Edge Attributes": [[20, "edge-attributes"]], "Induce deepcopy subgraph and edge_subgraph": [[20, "induce-deepcopy-subgraph-and-edge-subgraph"]], "Making Copies": [[20, "making-copies"]], "Directed Graphs": [[20, "directed-graphs"]], "Analyzing Graphs": [[20, "analyzing-graphs"]], "Create graph from GraphScope Graph Object": [[20, "create-graph-from-graphscope-graph-object"]], "Transform to GraphScope Graph Object": [[20, "transform-to-graphscope-graph-object"]], "Tutorial: Running Builtin Algorithms": [[21, "tutorial-running-builtin-algorithms"]], "Tutorial: Run Giraph Applications on GraphScope": [[22, "tutorial-run-giraph-applications-on-graphscope"]], "Try some example giraph apps": [[22, "try-some-example-giraph-apps"]], "Run your own Giraph apps.": [[22, "run-your-own-giraph-apps"]], "Develop Giraph algorithm": [[22, "develop-giraph-algorithm"]], "Submit to GraphScope.": [[22, "submit-to-graphscope"]], "Tutorial: Run GraphX Applications on GraphScope": [[23, "tutorial-run-graphx-applications-on-graphscope"]], "Deploy GraphScope along with Spark": [[23, "deploy-graphscope-along-with-spark"]], "Run example GraphX apps": [[23, "run-example-graphx-apps"]], "Submit to Spark": [[23, "submit-to-spark"]], "Run customized GraphX apps": [[23, "run-customized-graphx-apps"]], "Include dependency": [[23, "include-dependency"]], "Develop customized GraphX algorithm towards GraphScope.": [[23, "develop-customized-graphx-algorithm-towards-graphscope"]], "Run customized GraphX algorithms on Spark with GraphScope support": [[23, "run-customized-graphx-algorithms-on-spark-with-graphscope-support"]], "Vertex-Centric Model": [[24, "vertex-centric-model"]], "Pregel Model": [[24, "pregel-model"]], "GAS Model": [[24, "gas-model"]], "Simulation of Pregel Model in Analytical Engine": [[24, "simulation-of-pregel-model-in-analytical-engine"]], "Contact Us": [[25, "contact-us"]], "Slack": [[25, "slack"], [34, "slack"]], "Discussion on Github": [[25, "discussion-on-github"]], "Deploy GraphScope on Clouds": [[26, "deploy-graphscope-on-clouds"]], "Use an existing vineyard cluster with multiple GraphScope sessions": [[27, "use-an-existing-vineyard-cluster-with-multiple-graphscope-sessions"]], "Install GraphScope Client": [[27, "install-graphscope-client"], [28, "install-graphscope-client"]], "Prepare a Kubernetes cluster": [[27, "prepare-a-kubernetes-cluster"], [28, "prepare-a-kubernetes-cluster"], [38, "prepare-a-kubernetes-cluster"]], "Deploy a Vineyard Cluster": [[27, "deploy-a-vineyard-cluster"]], "Load the dataset to the Kubernetes cluster": [[27, "load-the-dataset-to-the-kubernetes-cluster"]], "Load a graph to the existing vineyard cluster": [[27, "load-a-graph-to-the-existing-vineyard-cluster"]], "Connect to the existing vineyard cluster with another GraphScope session": [[27, "connect-to-the-existing-vineyard-cluster-with-another-graphscope-session"]], "Cleaning up": [[27, "cleaning-up"]], "Deploy GraphScope on K8s cluster": [[28, "deploy-graphscope-on-k8s-cluster"]], "Deploying GraphScope": [[28, "deploying-graphscope"]], "Launch with default parameters": [[28, "launch-with-default-parameters"]], "Frequently used parameters": [[28, "frequently-used-parameters"]], "Customize image URI": [[28, "customize-image-uri"]], "Specify the number of workers": [[28, "specify-the-number-of-workers"]], "Provide a kubeconfig file other than default": [[28, "provide-a-kubeconfig-file-other-than-default"]], "Mount volumes": [[28, "mount-volumes"]], "Inspect the deployment": [[28, "inspect-the-deployment"]], "Cleaning Up": [[28, "cleaning-up"]], "Deploy GraphScope with helm": [[29, "deploy-graphscope-with-helm"]], "Connect to GraphScope": [[29, "connect-to-graphscope"]], "Uninstall the release": [[29, "uninstall-the-release"]], "Configuration": [[29, "configuration"]], "Offline Installation": [[29, "offline-installation"]], "Install GraphScope on Local": [[30, "install-graphscope-on-local"]], "Install from packages": [[30, "install-from-packages"]], "Install stable version of GraphScope": [[30, "install-stable-version-of-graphscope"]], "Install preview version of GraphScope": [[30, "install-preview-version-of-graphscope"]], "Install from source": [[30, "install-from-source"], [36, "install-from-source"]], "Setup build environment for Linux and macOS": [[30, "setup-build-environment-for-linux-and-macos"]], "Use dev image with all dependencies installed": [[30, "use-dev-image-with-all-dependencies-installed"]], "Build and install": [[30, "build-and-install"]], "Design of GAE": [[31, "design-of-gae"]], "Graph Storage": [[31, "graph-storage"]], "Execution Framework": [[31, "execution-framework"]], "Flexible programming models": [[31, "flexible-programming-models"]], "Multi-language SDKs": [[31, "multi-language-sdks"]], "High-performance runtime": [[31, "high-performance-runtime"]], "Algorithm Library": [[31, "algorithm-library"]], "Code Style Guide": [[32, "code-style-guide"]], "C++ Style": [[32, "c-style"]], "Python Style": [[32, "python-style"]], "Rust Style": [[32, "rust-style"]], "Java Style": [[32, "java-style"]], "Script Style": [[32, "script-style"]], "Style Linter and Checker": [[32, "style-linter-and-checker"]], "Development Guide": [[33, "development-guide"]], "Install deps on local": [[33, "install-deps-on-local"], [57, "install-deps-on-local"]], "Dev on docker container": [[33, "dev-on-docker-container"], [57, "dev-on-docker-container"]], "Build All Targets for GraphScope": [[33, "build-all-targets-for-graphscope"], [38, "build-all-targets-for-graphscope"]], "Build Components Individually": [[33, "build-components-individually"]], "Build and Test Engines": [[33, "build-and-test-engines"]], "Build Coordinator": [[33, "build-coordinator"]], "Build Python Client": [[33, "build-python-client"]], "How to Contribute": [[34, "how-to-contribute"]], "Code of Conduct": [[34, "code-of-conduct"]], "Community": [[34, "community"], [284, "module-graphscope.nx.generators.community"]], "GitHub Discussion": [[34, "github-discussion"]], "Reporting Bugs": [[34, "reporting-bugs"]], "Requesting Features": [[34, "requesting-features"]], "Improving Documentation": [[34, "improving-documentation"]], "Contributing Code and Documentation Changes": [[34, "contributing-code-and-documentation-changes"]], "Install pre-commit": [[34, "install-pre-commit"]], "Minor Fixes": [[34, "minor-fixes"]], "Fork and Create a Branch": [[34, "fork-and-create-a-branch"]], "Get the Test Suite Running": [[34, "get-the-test-suite-running"]], "Implement Your Fix or Feature": [[34, "implement-your-fix-or-feature"]], "Get the Code Format and Style Right": [[34, "get-the-code-format-and-style-right"]], "Submitting Your Changes": [[34, "submitting-your-changes"]], "Discussing and Keeping Your Pull Request Updated": [[34, "discussing-and-keeping-your-pull-request-updated"]], "Merging a PR (maintainers only)": [[34, "merging-a-pr-maintainers-only"]], "Shipping a Release (maintainers only)": [[34, "shipping-a-release-maintainers-only"]], "How to Review Pull Requests": [[34, "how-to-review-pull-requests"]], "Continuous integration testing": [[34, "continuous-integration-testing"]], "Debugging on local deployment": [[35, "debugging-on-local-deployment"]], "Debugging on Kubernetes deployment": [[35, "debugging-on-kubernetes-deployment"]], "Commands for Debugging": [[35, "commands-for-debugging"]], "Debugging Techniques": [[35, "debugging-techniques"]], "Install GraphScope in offline mode": [[36, "install-graphscope-in-offline-mode"]], "Install from wheels": [[36, "install-from-wheels"]], "Download dependencies and GraphScope": [[36, "download-dependencies-and-graphscope"]], "Copy all files to the destination environment and extract them to a location": [[36, "copy-all-files-to-the-destination-environment-and-extract-them-to-a-location"]], "Install basic packages and gcc-g++,\u00a0python": [[36, "install-basic-packages-and-gcc-g-python"]], "Install third-party dependencies and GraphScope Analytical Engine": [[36, "install-third-party-dependencies-and-graphscope-analytical-engine"]], "How to Submit Pull-requests": [[37, "how-to-submit-pull-requests"]], "Test GraphScope on local": [[38, "test-graphscope-on-local"]], "Run tests": [[38, "run-tests"], [38, "id1"]], "Test GraphScope on Kubernetes cluster": [[38, "test-graphscope-on-kubernetes-cluster"]], "Build images": [[38, "build-images"]], "Introduction to ArrowFragment": [[39, "introduction-to-arrowfragment"]], "0. \u672f\u8bed": [[39, "id1"]], "1. \u8f7d\u56fe": [[39, "id2"]], "1.1 \u521d\u59cb\u5316partitoner": [[39, "partitoner"]], "1.2 \u6784\u5efa\u539f\u59cbarrow table": [[39, "arrow-table"]], "1.3. Shuffle vtable": [[39, "shuffle-vtable"]], "1.4. \u6784\u5efaVertex map(BasicArrowVertexMapBuilder)": [[39, "vertex-map-basicarrowvertexmapbuilder"]], "1.5. \u6784\u5efaFragment\u51c6\u5907": [[39, "fragment"]], "1.5.1. \u5904\u7406edge table(BasicEVFragmentLoader)": [[39, "edge-table-basicevfragmentloader"]], "1.5.2 FragmentBuilder\u6570\u636e\u521d\u59cb\u5316 (BasicArrowFragmentBuilder)": [[39, "fragmentbuilder-basicarrowfragmentbuilder"]], "1.6 Fragment\u6784\u5efa": [[39, "id3"]], "2. \u8bbf\u95eeFragment": [[39, "id4"]], "2.1 \u8bbf\u95ee\u9876\u70b9": [[39, "id5"]], "2.1.1 \u8bbf\u95ee\u5185\u90e8\u70b9": [[39, "id6"]], "2.1.2 \u8303\u56f4\u5916\u90e8\u70b9": [[39, "id7"]], "2.1.3 \u8bbf\u95ee\u5168\u90e8\u70b9": [[39, "id8"]], "2.1.4 \u8bbf\u95ee\u9876\u70b9\u6570\u636e": [[39, "id9"]], "2.2 \u8bbf\u95ee\u8fb9": [[39, "id10"]], "2.2.1 \u8bbf\u95ee\u51fa\u8fb9": [[39, "id11"]], "2.2.2 \u8bbf\u95ee\u5165\u8fb9": [[39, "id12"]], "2.2.3 \u8bbf\u95ee\u8fb9\u4e0a\u7684\u6570\u636e": [[39, "id13"]], "Frequently Asked Questions": [[40, "frequently-asked-questions"]], "Getting Started for GLE": [[41, "getting-started-for-gle"]], "Graph Workloads": [[42, "graph-workloads"]], "Graph Analytics": [[42, "graph-analytics"]], "Graph Interactive Query": [[42, "graph-interactive-query"]], "Graph Learning": [[42, "graph-learning"], [149, "graph-learning"]], "GrpahScope for Data Scientists": [[43, "grpahscope-for-data-scientists"]], "Challenges of Handling Graph Computation": [[43, "challenges-of-handling-graph-computation"]], "Solutions of GraphScope": [[43, "solutions-of-graphscope"]], "Program as Single Machine and Run as Distributed": [[43, "program-as-single-machine-and-run-as-distributed"]], "Integration with PyData Ecosystem": [[43, "integration-with-pydata-ecosystem"]], "How to Load Graphs": [[44, "how-to-load-graphs"]], "Define Graph Schema": [[44, "define-graph-schema"]], "Load Graphs": [[44, "load-graphs"]], "Advanced Topics": [[44, "advanced-topics"]], "Tips for reduce memory consumption of graphs": [[44, "tips-for-reduce-memory-consumption-of-graphs"]], "How to Report Bugs": [[45, "how-to-report-bugs"]], "GraphScope: A One-Stop Large-Scale Graph Computing System from Alibaba": [[46, "graphscope-a-one-stop-large-scale-graph-computing-system-from-alibaba"]], "Installation & Deployment": [[46, null]], "Graph Analytical Engine": [[46, null], [71, "graph-analytical-engine"]], "Graph Interactive Engine": [[46, null], [71, "graph-interactive-engine"]], "Graph Learning Engine": [[46, null]], "Storage Engine": [[46, null]], "troubleshooting & utilities": [[46, null]], "Development": [[46, null]], "Reference": [[46, null], [297, "reference"]], "Indices and tables": [[46, "indices-and-tables"]], "Standalone Deployment for GIE": [[47, "standalone-deployment-for-gie"]], "The K8s Cluster": [[47, "the-k8s-cluster"]], "Deploy Your First GIE Service": [[47, "deploy-your-first-gie-service"]], "Remove the GIE Service": [[47, "remove-the-gie-service"]], "Using Your Own Data": [[47, "using-your-own-data"]], "Deploy on a Cluster": [[47, "deploy-on-a-cluster"]], "Other Useful Configurations": [[47, "other-useful-configurations"]], "Design of GIE": [[48, "design-of-gie"]], "The Motivations": [[48, "the-motivations"]], "The Architecture": [[48, "the-architecture"]], "Query Processing": [[48, "query-processing"]], "Frequently Asked Questions (FAQs) for GIE Gremlin Usage": [[49, "frequently-asked-questions-faqs-for-gie-gremlin-usage"]], "What\u2019s the difference between Inner ID and Property ID ?": [[49, "whats-the-difference-between-inner-id-and-property-id"]], "How to use path expand in GIE Gremlin ?": [[49, "how-to-use-path-expand-in-gie-gremlin"]], "How to filter data in GIE Gremlin like SQL ?": [[49, "how-to-filter-data-in-gie-gremlin-like-sql"]], "How to aggregate data in GIE Gremlin like SQL?": [[49, "how-to-aggregate-data-in-gie-gremlin-like-sql"]], "group by multiple keys": [[49, "group-by-multiple-keys"]], "group by multiple values:": [[49, "group-by-multiple-values"]], "How to optimize Gremlin queries for performance in GIE?": [[49, "how-to-optimize-gremlin-queries-for-performance-in-gie"]], "Use appropriate indexing": [[49, "use-appropriate-indexing"]], "How to use subgraph in GIE Gremlin ?": [[49, "how-to-use-subgraph-in-gie-gremlin"]], "Running GraphScope Interactive Engine on Local": [[50, "running-graphscope-interactive-engine-on-local"]], "Supported Gremlin Steps": [[52, "supported-gremlin-steps"]], "Introduction": [[52, "introduction"]], "Standard Steps": [[52, "standard-steps"]], "Source": [[52, "source"]], "V()": [[52, "v"]], "E()": [[52, "e"]], "Expand": [[52, "expand"]], "outE()": [[52, "oute"]], "inE()": [[52, "ine"]], "bothE()": [[52, "bothe"]], "out()": [[52, "out"], [52, "id5"]], "in()": [[52, "in"], [52, "id6"]], "both()": [[52, "both"], [52, "id7"]], "outV()": [[52, "outv"]], "inV()": [[52, "inv"]], "otherV()": [[52, "otherv"]], "bothV()": [[52, "bothv"]], "Filter": [[52, "filter"]], "hasId()": [[52, "hasid"], [53, "hasid"]], "hasLabel()": [[52, "haslabel"]], "has()": [[52, "has"]], "hasNot()": [[52, "hasnot"]], "is()": [[52, "is"]], "where(traversal)": [[52, "where-traversal"]], "where(predicate)": [[52, "where-predicate"]], "not(traversal)": [[52, "not-traversal"]], "dedup()": [[52, "dedup"], [53, "dedup"]], "Project": [[52, "project"]], "id()": [[52, "id"]], "label()": [[52, "label"]], "constant()": [[52, "constant"], [53, "constant"]], "valueMap()": [[52, "valuemap"], [53, "valuemap"]], "values()": [[52, "values"]], "select()": [[52, "select"], [53, "select"]], "Aggregate": [[52, "aggregate"]], "count()": [[52, "count"]], "fold()": [[52, "fold"], [53, "fold"]], "sum()": [[52, "sum"]], "min()": [[52, "min"]], "max()": [[52, "max"]], "mean()": [[52, "mean"]], "group()": [[52, "group"], [53, "group"]], "groupCount()": [[52, "groupcount"], [53, "groupcount"]], "Order": [[52, "order"], [297, "order"]], "order()": [[52, "id1"]], "Statistics": [[52, "statistics"]], "limit()": [[52, "limit"]], "coin()": [[52, "coin"]], "Union": [[52, "union"]], "union()": [[52, "id2"]], "Match": [[52, "match"]], "match()": [[52, "id3"]], "Subgraph": [[52, "subgraph"]], "subgraph()": [[52, "id4"]], "Syntactic Sugars": [[52, "syntactic-sugars"]], "PathExpand": [[52, "pathexpand"]], "endV()": [[52, "endv"]], "Expression": [[52, "expression"]], "Aggregate (Group)": [[52, "aggregate-group"]], "Limitations": [[52, "limitations"]], "To be Supported": [[52, "to-be-supported"]], "identity()": [[52, "identity"]], "elementMap()": [[52, "elementmap"]], "path()": [[52, "path"]], "unfold()": [[52, "unfold"]], "local()": [[52, "local"]], "Will Not be Supported": [[52, "will-not-be-supported"]], "repeat()": [[52, "repeat"]], "properties()": [[52, "properties"]], "sideEffect": [[52, "sideeffect"]], "branch": [[52, "branch"]], "Tutorial: LDBC Gremlin": [[53, "tutorial-ldbc-gremlin"]], "Load the LDBC Graph": [[53, "load-the-ldbc-graph"]], "Basic Vertex/Edge Query": [[53, "basic-vertex-edge-query"]], "Retrieve Vertices and Edges": [[53, "retrieve-vertices-and-edges"]], "Apply Some Filters": [[53, "apply-some-filters"]], "Extract Property Values": [[53, "extract-property-values"]], "Real Applications": [[53, "real-applications"], [53, "id1"]], "Basic Traversal Query": [[53, "basic-traversal-query"]], "Expansion": [[53, "expansion"]], "out(), in() and both()": [[53, "out-in-and-both"]], "outE(), inE() and bothE()": [[53, "oute-ine-and-bothe"]], "outV(), inV(), bothV() and otherV()": [[53, "outv-inv-bothv-and-otherv"]], "Multiple Expansion Steps": [[53, "multiple-expansion-steps"]], "Expansion from many starting points": [[53, "expansion-from-many-starting-points"]], "Filter & Expansion": [[53, "filter-expansion"]], "Apply filters after expansion": [[53, "apply-filters-after-expansion"]], "Expansion as filters": [[53, "expansion-as-filters"]], "Path Expansion (Syntactic Sugar)": [[53, "path-expansion-syntactic-sugar"]], "Pattern Match": [[53, "pattern-match"]], "Relational Operations": [[53, "relational-operations"]], "Filter Steps": [[53, "filter-steps"]], "where()": [[53, "where"]], "Project Steps": [[53, "project-steps"]], "id() and label()": [[53, "id-and-label"]], "Aggregate Steps": [[53, "aggregate-steps"]], "sum(), min(), max() and  mean()": [[53, "sum-min-max-and-mean"]], "Order Step": [[53, "order-step"]], "Limit Step": [[53, "limit-step"]], "Expression(Syntax Sugar)": [[53, "expression-syntax-sugar"]], "Complex Queries": [[53, "complex-queries"]], "LDBC BI2": [[53, "ldbc-bi2"]], "LDBC BI3": [[53, "ldbc-bi3"]], "LDBC BI4(Left Part)": [[53, "ldbc-bi4-left-part"]], "LDBC BI11": [[53, "ldbc-bi11"]], "LDBC BI14": [[53, "ldbc-bi14"]], "Tutorials for Java Users": [[54, "tutorials-for-java-users"]], "Key Features": [[55, "key-features"]], "Ease-of-use: Python Interface": [[55, "ease-of-use-python-interface"]], "Graph Traversal Support, in Gremlin and Cypher": [[55, "graph-traversal-support-in-gremlin-and-cypher"]], "High Performant Built-in Algorithms": [[55, "high-performant-built-in-algorithms"]], "Extensible Algorithm Library for Graph Analytics": [[55, "extensible-algorithm-library-for-graph-analytics"]], "GNN Training & Inference": [[55, "gnn-training-inference"]], "Cloud Native Design": [[55, "cloud-native-design"]], "Across-Engine Workflow Orchestration": [[55, "across-engine-workflow-orchestration"]], "Design of GLE": [[56, "design-of-gle"]], "Model Paradigms": [[56, "model-paradigms"]], "EgoGraph-based node-centric aggregation": [[56, "egograph-based-node-centric-aggregation"]], "SubGraph-based graph message passing": [[56, "subgraph-based-graph-message-passing"]], "Pipeline for Learning": [[56, "pipeline-for-learning"]], "Build Learning Engine": [[57, "build-learning-engine"]], "Running GraphScope Learning Engine on Local": [[58, "running-graphscope-learning-engine-on-local"]], "Graph Sampling": [[59, "graph-sampling"], [137, "graph-sampling"]], "Graph Traversal": [[59, "graph-traversal"], [67, "graph-traversal"], [138, "graph-traversal"]], "Neighborhood Sampling": [[59, "neighborhood-sampling"]], "Subgraph Sampling": [[59, "subgraph-sampling"], [68, "subgraph-sampling"]], "Negative Sampling": [[59, "negative-sampling"], [142, "negative-sampling"]], "GSL": [[59, "gsl"]], "Tutorial: Training a Node Classification Model on K8s Cluster": [[61, "tutorial-training-a-node-classification-model-on-k8s-cluster"]], "Create a session on kubernetes and load graph": [[61, "create-a-session-on-kubernetes-and-load-graph"]], "Graph neural networks (GNNs)": [[61, "graph-neural-networks-gnns"]], "Tutorial: Training a Node Classification Model on Your Local Machine": [[62, "tutorial-training-a-node-classification-model-on-your-local-machine"]], "Load Graph": [[62, "load-graph"]], "Define the Training Process for the EgoGraphSAGE Model": [[62, "define-the-training-process-for-the-egographsage-model"]], "Launch the Learning Engine": [[62, "launch-the-learning-engine"]], "Train the Model": [[62, "train-the-model"]], "Design of GraphScope": [[63, "design-of-graphscope"]], "Unified Graph Computing Platform": [[63, "unified-graph-computing-platform"]], "Application layer": [[63, "application-layer"]], "Execution engine layer": [[63, "execution-engine-layer"]], "Storage layer": [[63, "storage-layer"]], "Disaggregated Design for Diverse Graph Applications": [[63, "disaggregated-design-for-diverse-graph-applications"]], "GraphScope for BI analysis": [[63, "graphscope-for-bi-analysis"]], "GraphScope for high QPS queries": [[63, "graphscope-for-high-qps-queries"]], "GraphScope for graph analytics": [[63, "graphscope-for-graph-analytics"]], "GraphScope for learning": [[63, "graphscope-for-learning"]], "One-stop Graph Processing": [[64, "one-stop-graph-processing"]], "Graph Interactive Query Quick Start": [[64, "graph-interactive-query-quick-start"]], "Graph Learning Quick Start": [[64, "graph-learning-quick-start"]], "Glossary": [[65, "glossary"]], "FLASH": [[65, "flash"]], "GRAPE": [[65, "grape"]], "GAE": [[65, "gae"]], "GART": [[65, "gart"]], "GRIN": [[65, "grin"]], "GraphAr": [[65, "graphar"]], "Groot": [[65, "groot"]], "GUM": [[65, "gum"]], "MaxGraph (deprecated)": [[65, "maxgraph-deprecated"]], "Vineyard, or v6d": [[65, "vineyard-or-v6d"]], "GAIA": [[65, "gaia"]], "Ingress": [[65, "ingress"]], "Pegasus": [[65, "pegasus"]], "PIE-model": [[65, "pie-model"]], "Graph Analytics Workloads": [[66, "graph-analytics-workloads"]], "What is Graph Analytics": [[66, "what-is-graph-analytics"]], "Challenges of Graph Analytics on Large Graphs": [[66, "challenges-of-graph-analytics-on-large-graphs"]], "What can GraphScope Do": [[66, "what-can-graphscope-do"], [68, "what-can-graphscope-do"]], "Graph Interactive Workloads": [[67, "graph-interactive-workloads"]], "Tinkerpop and Gremlin": [[67, "tinkerpop-and-gremlin"]], "Pattern Matching": [[67, "pattern-matching"]], "Compatibility with TinkerPop": [[67, "compatibility-with-tinkerpop"]], "Property Graph Constraints": [[67, "property-graph-constraints"]], "Graph Learning Workloads": [[68, "graph-learning-workloads"]], "What is Graph Neural Network": [[68, "what-is-graph-neural-network"]], "Typical GNN Models": [[68, "typical-gnn-models"]], "Paradigm of Model Training": [[68, "paradigm-of-model-training"]], "Steps of Model Training": [[68, "steps-of-model-training"]], "Challenges of Applying GNNs on Large Graphs": [[68, "challenges-of-applying-gnns-on-large-graphs"]], "Introducing GraphScope": [[69, "introducing-graphscope"]], "What is GraphScope": [[69, "what-is-graphscope"]], "Why use GraphScope": [[69, "why-use-graphscope"]], "What are the Use Cases": [[69, "what-are-the-use-cases"]], "What are the Limitations": [[69, "what-are-the-limitations"]], "What are the Next": [[69, "what-are-the-next"]], "Positioning of GraphScope": [[70, "positioning-of-graphscope"]], "Compare with Graph Processing Systems": [[70, "compare-with-graph-processing-systems"]], "Compare with Graph Databases": [[70, "compare-with-graph-databases"]], "Compare with Graph Learning Systems": [[70, "compare-with-graph-learning-systems"]], "Handling Various Types of Graph Workloads": [[70, "handling-various-types-of-graph-workloads"]], "Performance and Benchmark": [[71, "performance-and-benchmark"]], "Results": [[71, "results"]], "Performance on GPUs": [[71, "performance-on-gpus"]], "Reproducing the results": [[71, "reproducing-the-results"]], "Tutorials for Python Users": [[72, "tutorials-for-python-users"]], "Analytical Engine API Reference": [[73, "analytical-engine-api-reference"]], "Analytical Engine": [[73, "analytical-engine"]], "Fragments in GraphScope": [[73, "fragments-in-graphscope"]], "Analytical Apps": [[73, "analytical-apps"]], "Analytical Workers": [[73, "analytical-workers"]], "App\u2019s Context": [[73, "app-s-context"]], "Analytical App": [[74, "analytical-app"]], "AppAssets": [[74, "appassets"]], "JavaApp": [[74, "javaapp"]], "App object": [[74, "app-object"]], "Functions": [[74, "functions"], [76, "functions"], [151, "functions"]], "BuiltIn apps": [[74, "builtin-apps"]], "Context": [[75, "context"]], "Context object": [[75, "context-object"]], "Cython SDK API": [[76, "cython-sdk-api"]], "Pregel": [[76, "pregel"]], "PIE": [[76, "pie"]], "GraphScope types": [[76, "graphscope-types"]], "About Grape JDK": [[77, "about-grape-jdk"]], "Project Structure": [[77, "project-structure"]], "Building from source": [[77, "building-from-source"]], "Java Reference (javadoc)": [[78, "java-reference-javadoc"]], "graphscope.Vertex": [[79, "graphscope-vertex"]], "graphscope.declare": [[80, "graphscope-declare"]], "graphscope.framework.app.load_app": [[81, "graphscope-framework-app-load-app"]], "graphscope.framework.dag_utils.add_column": [[82, "graphscope-framework-dag-utils-add-column"]], "graphscope.framework.dag_utils.add_labels_to_graph": [[83, "graphscope-framework-dag-utils-add-labels-to-graph"]], "graphscope.framework.dag_utils.arrow_to_dynamic": [[84, "graphscope-framework-dag-utils-arrow-to-dynamic"]], "graphscope.framework.dag_utils.bind_app": [[85, "graphscope-framework-dag-utils-bind-app"]], "graphscope.framework.dag_utils.clear_edges": [[86, "graphscope-framework-dag-utils-clear-edges"]], "graphscope.framework.dag_utils.clear_graph": [[87, "graphscope-framework-dag-utils-clear-graph"]], "graphscope.framework.dag_utils.context_to_dataframe": [[88, "graphscope-framework-dag-utils-context-to-dataframe"]], "graphscope.framework.dag_utils.context_to_numpy": [[89, "graphscope-framework-dag-utils-context-to-numpy"]], "graphscope.framework.dag_utils.copy_graph": [[90, "graphscope-framework-dag-utils-copy-graph"]], "graphscope.framework.dag_utils.create_app": [[91, "graphscope-framework-dag-utils-create-app"]], "graphscope.framework.dag_utils.create_graph": [[92, "graphscope-framework-dag-utils-create-graph"]], "graphscope.framework.dag_utils.create_graph_view": [[93, "graphscope-framework-dag-utils-create-graph-view"]], "graphscope.framework.dag_utils.create_loader": [[94, "graphscope-framework-dag-utils-create-loader"]], "graphscope.framework.dag_utils.create_subgraph": [[95, "graphscope-framework-dag-utils-create-subgraph"]], "graphscope.framework.dag_utils.create_unload_op": [[96, "graphscope-framework-dag-utils-create-unload-op"]], "graphscope.framework.dag_utils.dynamic_to_arrow": [[97, "graphscope-framework-dag-utils-dynamic-to-arrow"]], "graphscope.framework.dag_utils.fetch_gremlin_result": [[98, "graphscope-framework-dag-utils-fetch-gremlin-result"]], "graphscope.framework.dag_utils.get_context_data": [[99, "graphscope-framework-dag-utils-get-context-data"]], "graphscope.framework.dag_utils.graph_to_dataframe": [[100, "graphscope-framework-dag-utils-graph-to-dataframe"]], "graphscope.framework.dag_utils.graph_to_numpy": [[101, "graphscope-framework-dag-utils-graph-to-numpy"]], "graphscope.framework.dag_utils.gremlin_query": [[102, "graphscope-framework-dag-utils-gremlin-query"]], "graphscope.framework.dag_utils.gremlin_to_subgraph": [[103, "graphscope-framework-dag-utils-gremlin-to-subgraph"]], "graphscope.framework.dag_utils.modify_edges": [[104, "graphscope-framework-dag-utils-modify-edges"]], "graphscope.framework.dag_utils.modify_vertices": [[105, "graphscope-framework-dag-utils-modify-vertices"]], "graphscope.framework.dag_utils.output": [[106, "graphscope-framework-dag-utils-output"]], "graphscope.framework.dag_utils.project_arrow_property_graph": [[107, "graphscope-framework-dag-utils-project-arrow-property-graph"]], "graphscope.framework.dag_utils.project_to_simple": [[108, "graphscope-framework-dag-utils-project-to-simple"]], "graphscope.framework.dag_utils.report_graph": [[109, "graphscope-framework-dag-utils-report-graph"]], "graphscope.framework.dag_utils.run_app": [[110, "graphscope-framework-dag-utils-run-app"]], "graphscope.framework.dag_utils.to_data_sink": [[111, "graphscope-framework-dag-utils-to-data-sink"]], "graphscope.framework.dag_utils.to_directed": [[112, "graphscope-framework-dag-utils-to-directed"]], "graphscope.framework.dag_utils.to_undirected": [[113, "graphscope-framework-dag-utils-to-undirected"]], "graphscope.framework.dag_utils.to_vineyard_dataframe": [[114, "graphscope-framework-dag-utils-to-vineyard-dataframe"]], "graphscope.framework.dag_utils.to_vineyard_tensor": [[115, "graphscope-framework-dag-utils-to-vineyard-tensor"]], "graphscope.framework.dag_utils.unload_app": [[116, "graphscope-framework-dag-utils-unload-app"]], "graphscope.framework.dag_utils.unload_context": [[117, "graphscope-framework-dag-utils-unload-context"]], "graphscope.framework.dag_utils.unload_graph": [[118, "graphscope-framework-dag-utils-unload-graph"]], "graphscope.framework.operation.Operation.__init__": [[119, "graphscope-framework-operation-operation-init"]], "graphscope.framework.operation.Operation.as_op_def": [[120, "graphscope-framework-operation-operation-as-op-def"]], "graphscope.framework.operation.Operation.eval": [[121, "graphscope-framework-operation-operation-eval"]], "graphscope.framework.operation.Operation.evaluated": [[122, "graphscope-framework-operation-operation-evaluated"]], "graphscope.framework.operation.Operation.key": [[123, "graphscope-framework-operation-operation-key"]], "graphscope.framework.operation.Operation.signature": [[124, "graphscope-framework-operation-operation-signature"]], "graphscope.g": [[125, "graphscope-g"]], "graphscope.get_default_session": [[126, "graphscope-get-default-session"]], "graphscope.get_option": [[127, "graphscope-get-option"]], "graphscope.graphlearn": [[128, "graphscope-graphlearn"]], "graphscope.gremlin": [[129, "graphscope-gremlin"]], "graphscope.has_default_session": [[130, "graphscope-has-default-session"]], "graphscope.session": [[131, "graphscope-session"]], "graphscope.set_option": [[132, "graphscope-set-option"]], "Developing Your Own Model": [[133, "developing-your-own-model"]], "How to Build a Graph Learning Algorithm": [[133, "how-to-build-a-graph-learning-algorithm"]], "Sampling": [[133, "sampling"]], "Encoder": [[133, "encoder"], [141, "encoder"]], "Loss Function and Training Process": [[133, "loss-function-and-training-process"]], "Data Source": [[134, "data-source"]], "1 Data format": [[134, "data-format"]], "1.1 Basic format": [[134, "basic-format"]], "1.2 Attribute format\uff08ATTRIBUTED\uff09": [[134, "attribute-format-attributed"]], "1.3 Weight format\uff08WEIGHTED\uff09": [[134, "weight-format-weighted"]], "1.4 Label format\uff08LABELED\uff09": [[134, "label-format-labeled"]], "1.5 Putting together": [[134, "putting-together"]], "2 Data source type": [[134, "data-source-type"]], "2.2 Alibaba Cloud MaxCompute data table": [[134, "alibaba-cloud-maxcompute-data-table"]], "3 User API": [[134, "user-api"]], "Graph Object": [[135, "graph-object"]], "2 Describe the Topology": [[135, "describe-the-topology"]], "3.1 Stand-alone Mode": [[135, "stand-alone-mode"]], "3.2 Distributed Mode \u2013 Client/Server Mode": [[135, "distributed-mode-client-server-mode"]], "Graph Query": [[136, "graph-query"]], "1 Introduction": [[137, "introduction"]], "Graph Sampling Language\uff08GSL)": [[139, "graph-sampling-language-gsl"]], "Install from pip": [[140, "install-from-pip"]], "Get wheel package": [[140, "get-wheel-package"]], "Install using pip": [[140, "install-using-pip"]], "Install TensorFlow": [[140, "install-tensorflow"]], "Build from source": [[140, "build-from-source"]], "Install git": [[140, "install-git"]], "Install dependent libraries": [[140, "install-dependent-libraries"]], "Compile": [[140, "compile"], [143, "compile"]], "Install": [[140, "install"]], "Run test": [[140, "run-test"]], "Docker image": [[140, "docker-image"]], "Graph Learning Model": [[141, "graph-learning-model"]], "Data model": [[141, "data-model"]], "Defining Your Own Operator": [[143, "defining-your-own-operator"]], "Programming Interface": [[143, "programming-interface"]], "Distributed Runtime Design": [[143, "distributed-runtime-design"]], "Implement a New Operator": [[143, "implement-a-new-operator"]], "Clone source code": [[143, "clone-source-code"]], "Implement your operator class": [[143, "implement-your-operator-class"]], "Register Operator": [[143, "register-operator"]], "How to Use an Operator": [[143, "how-to-use-an-operator"]], "Integrating Other Data Sources": [[144, "integrating-other-data-sources"]], "File System Interface": [[144, "file-system-interface"]], "ByteStreamAccessFile": [[144, "bytestreamaccessfile"]], "StructuredAccessFile": [[144, "structuredaccessfile"]], "WritableFile": [[144, "writablefile"]], "Register with Scheme": [[144, "register-with-scheme"]], "Quick Start": [[145, "quick-start"]], "1 Trying out the built-in models": [[145, "trying-out-the-built-in-models"]], "2 How to use the GL APIs": [[145, "how-to-use-the-gl-apis"]], "3 Developing a GNN model": [[145, "developing-a-gnn-model"]], "3.1 Data Preparation": [[145, "data-preparation"]], "3.2 Graph Construction": [[145, "graph-construction"]], "3.3 Graph Sampling": [[145, "graph-sampling"]], "3.4 GNN Model": [[145, "gnn-model"]], "System configuration": [[146, "system-configuration"]], "Graph": [[147, "graph"], [151, "graph"], [285, "graph"]], "Graph object": [[147, "graph-object"]], "Loader object": [[147, "loader-object"]], "Graph Functions": [[147, "graph-functions"]], "Interactive Query": [[148, "interactive-query"]], "Builtin algorithms": [[150, "builtin-algorithms"]], "Nodes": [[151, "nodes"]], "Edges": [[151, "edges"]], "Self loops": [[151, "self-loops"]], "Attributes": [[151, "attributes"]], "Freezing graph structure": [[151, "freezing-graph-structure"]], "graphscope.nx.classes.function.add_cycle": [[152, "graphscope-nx-classes-function-add-cycle"]], "graphscope.nx.classes.function.add_path": [[153, "graphscope-nx-classes-function-add-path"]], "graphscope.nx.classes.function.add_star": [[154, "graphscope-nx-classes-function-add-star"]], "graphscope.nx.classes.function.all_neighbors": [[155, "graphscope-nx-classes-function-all-neighbors"]], "graphscope.nx.classes.function.common_neighbors": [[156, "graphscope-nx-classes-function-common-neighbors"]], "graphscope.nx.classes.function.create_empty_copy": [[157, "graphscope-nx-classes-function-create-empty-copy"]], "graphscope.nx.classes.function.degree": [[158, "graphscope-nx-classes-function-degree"]], "graphscope.nx.classes.function.degree_histogram": [[159, "graphscope-nx-classes-function-degree-histogram"]], "graphscope.nx.classes.function.density": [[160, "graphscope-nx-classes-function-density"]], "graphscope.nx.classes.function.edge_subgraph": [[161, "graphscope-nx-classes-function-edge-subgraph"]], "graphscope.nx.classes.function.edges": [[162, "graphscope-nx-classes-function-edges"]], "graphscope.nx.classes.function.freeze": [[163, "graphscope-nx-classes-function-freeze"]], "graphscope.nx.classes.function.induced_subgraph": [[164, "graphscope-nx-classes-function-induced-subgraph"]], "graphscope.nx.classes.function.info": [[165, "graphscope-nx-classes-function-info"]], "graphscope.nx.classes.function.is_directed": [[166, "graphscope-nx-classes-function-is-directed"]], "graphscope.nx.classes.function.is_empty": [[167, "graphscope-nx-classes-function-is-empty"]], "graphscope.nx.classes.function.is_frozen": [[168, "graphscope-nx-classes-function-is-frozen"]], "graphscope.nx.classes.function.is_negatively_weighted": [[169, "graphscope-nx-classes-function-is-negatively-weighted"]], "graphscope.nx.classes.function.is_weighted": [[170, "graphscope-nx-classes-function-is-weighted"]], "graphscope.nx.classes.function.neighbors": [[171, "graphscope-nx-classes-function-neighbors"]], "graphscope.nx.classes.function.nodes": [[172, "graphscope-nx-classes-function-nodes"]], "graphscope.nx.classes.function.nodes_with_selfloops": [[173, "graphscope-nx-classes-function-nodes-with-selfloops"]], "graphscope.nx.classes.function.non_edges": [[174, "graphscope-nx-classes-function-non-edges"]], "graphscope.nx.classes.function.non_neighbors": [[175, "graphscope-nx-classes-function-non-neighbors"]], "graphscope.nx.classes.function.number_of_edges": [[176, "graphscope-nx-classes-function-number-of-edges"]], "graphscope.nx.classes.function.number_of_nodes": [[177, "graphscope-nx-classes-function-number-of-nodes"]], "graphscope.nx.classes.function.number_of_selfloops": [[178, "graphscope-nx-classes-function-number-of-selfloops"]], "graphscope.nx.classes.function.selfloop_edges": [[179, "graphscope-nx-classes-function-selfloop-edges"]], "graphscope.nx.classes.function.subgraph": [[180, "graphscope-nx-classes-function-subgraph"]], "graphscope.nx.classes.function.to_directed": [[181, "graphscope-nx-classes-function-to-directed"]], "graphscope.nx.classes.function.to_undirected": [[182, "graphscope-nx-classes-function-to-undirected"]], "graphscope.nx.generators.atlas.graph_atlas": [[183, "graphscope-nx-generators-atlas-graph-atlas"]], "graphscope.nx.generators.atlas.graph_atlas_g": [[184, "graphscope-nx-generators-atlas-graph-atlas-g"]], "graphscope.nx.generators.classic.balanced_tree": [[185, "graphscope-nx-generators-classic-balanced-tree"]], "graphscope.nx.generators.classic.barbell_graph": [[186, "graphscope-nx-generators-classic-barbell-graph"]], "graphscope.nx.generators.classic.binomial_tree": [[187, "graphscope-nx-generators-classic-binomial-tree"]], "graphscope.nx.generators.classic.circulant_graph": [[188, "graphscope-nx-generators-classic-circulant-graph"]], "graphscope.nx.generators.classic.circular_ladder_graph": [[189, "graphscope-nx-generators-classic-circular-ladder-graph"]], "graphscope.nx.generators.classic.complete_graph": [[190, "graphscope-nx-generators-classic-complete-graph"]], "graphscope.nx.generators.classic.complete_multipartite_graph": [[191, "graphscope-nx-generators-classic-complete-multipartite-graph"]], "graphscope.nx.generators.classic.cycle_graph": [[192, "graphscope-nx-generators-classic-cycle-graph"]], "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph": [[193, "graphscope-nx-generators-classic-dorogovtsev-goltsev-mendes-graph"]], "graphscope.nx.generators.classic.empty_graph": [[194, "graphscope-nx-generators-classic-empty-graph"]], "graphscope.nx.generators.classic.full_rary_tree": [[195, "graphscope-nx-generators-classic-full-rary-tree"]], "graphscope.nx.generators.classic.ladder_graph": [[196, "graphscope-nx-generators-classic-ladder-graph"]], "graphscope.nx.generators.classic.lollipop_graph": [[197, "graphscope-nx-generators-classic-lollipop-graph"]], "graphscope.nx.generators.classic.null_graph": [[198, "graphscope-nx-generators-classic-null-graph"]], "graphscope.nx.generators.classic.path_graph": [[199, "graphscope-nx-generators-classic-path-graph"]], "graphscope.nx.generators.classic.star_graph": [[200, "graphscope-nx-generators-classic-star-graph"]], "graphscope.nx.generators.classic.trivial_graph": [[201, "graphscope-nx-generators-classic-trivial-graph"]], "graphscope.nx.generators.classic.turan_graph": [[202, "graphscope-nx-generators-classic-turan-graph"]], "graphscope.nx.generators.classic.wheel_graph": [[203, "graphscope-nx-generators-classic-wheel-graph"]], "graphscope.nx.generators.community.LFR_benchmark_graph": [[204, "graphscope-nx-generators-community-lfr-benchmark-graph"]], "graphscope.nx.generators.community.caveman_graph": [[205, "graphscope-nx-generators-community-caveman-graph"]], "graphscope.nx.generators.community.connected_caveman_graph": [[206, "graphscope-nx-generators-community-connected-caveman-graph"]], "graphscope.nx.generators.community.gaussian_random_partition_graph": [[207, "graphscope-nx-generators-community-gaussian-random-partition-graph"]], "graphscope.nx.generators.community.planted_partition_graph": [[208, "graphscope-nx-generators-community-planted-partition-graph"]], "graphscope.nx.generators.community.random_partition_graph": [[209, "graphscope-nx-generators-community-random-partition-graph"]], "graphscope.nx.generators.community.relaxed_caveman_graph": [[210, "graphscope-nx-generators-community-relaxed-caveman-graph"]], "graphscope.nx.generators.community.ring_of_cliques": [[211, "graphscope-nx-generators-community-ring-of-cliques"]], "graphscope.nx.generators.community.stochastic_block_model": [[212, "graphscope-nx-generators-community-stochastic-block-model"]], "graphscope.nx.generators.community.windmill_graph": [[213, "graphscope-nx-generators-community-windmill-graph"]], "graphscope.nx.generators.degree_seq.configuration_model": [[214, "graphscope-nx-generators-degree-seq-configuration-model"]], "graphscope.nx.generators.degree_seq.degree_sequence_tree": [[215, "graphscope-nx-generators-degree-seq-degree-sequence-tree"]], "graphscope.nx.generators.degree_seq.directed_configuration_model": [[216, "graphscope-nx-generators-degree-seq-directed-configuration-model"]], "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph": [[217, "graphscope-nx-generators-degree-seq-directed-havel-hakimi-graph"]], "graphscope.nx.generators.degree_seq.expected_degree_graph": [[218, "graphscope-nx-generators-degree-seq-expected-degree-graph"]], "graphscope.nx.generators.degree_seq.havel_hakimi_graph": [[219, "graphscope-nx-generators-degree-seq-havel-hakimi-graph"]], "graphscope.nx.generators.degree_seq.random_degree_sequence_graph": [[220, "graphscope-nx-generators-degree-seq-random-degree-sequence-graph"]], "graphscope.nx.generators.directed.gn_graph": [[221, "graphscope-nx-generators-directed-gn-graph"]], "graphscope.nx.generators.directed.gnc_graph": [[222, "graphscope-nx-generators-directed-gnc-graph"]], "graphscope.nx.generators.directed.gnr_graph": [[223, "graphscope-nx-generators-directed-gnr-graph"]], "graphscope.nx.generators.directed.random_k_out_graph": [[224, "graphscope-nx-generators-directed-random-k-out-graph"]], "graphscope.nx.generators.directed.scale_free_graph": [[225, "graphscope-nx-generators-directed-scale-free-graph"]], "graphscope.nx.generators.duplication.duplication_divergence_graph": [[226, "graphscope-nx-generators-duplication-duplication-divergence-graph"]], "graphscope.nx.generators.duplication.partial_duplication_graph": [[227, "graphscope-nx-generators-duplication-partial-duplication-graph"]], "graphscope.nx.generators.ego.ego_graph": [[228, "graphscope-nx-generators-ego-ego-graph"]], "graphscope.nx.generators.expanders.chordal_cycle_graph": [[229, "graphscope-nx-generators-expanders-chordal-cycle-graph"]], "graphscope.nx.generators.expanders.margulis_gabber_galil_graph": [[230, "graphscope-nx-generators-expanders-margulis-gabber-galil-graph"]], "graphscope.nx.generators.expanders.paley_graph": [[231, "graphscope-nx-generators-expanders-paley-graph"]], "graphscope.nx.generators.geometric.geographical_threshold_graph": [[232, "graphscope-nx-generators-geometric-geographical-threshold-graph"]], "graphscope.nx.generators.geometric.random_geometric_graph": [[233, "graphscope-nx-generators-geometric-random-geometric-graph"]], "graphscope.nx.generators.geometric.soft_random_geometric_graph": [[234, "graphscope-nx-generators-geometric-soft-random-geometric-graph"]], "graphscope.nx.generators.geometric.thresholded_random_geometric_graph": [[235, "graphscope-nx-generators-geometric-thresholded-random-geometric-graph"]], "graphscope.nx.generators.geometric.waxman_graph": [[236, "graphscope-nx-generators-geometric-waxman-graph"]], "graphscope.nx.generators.harary_graph.hkn_harary_graph": [[237, "graphscope-nx-generators-harary-graph-hkn-harary-graph"]], "graphscope.nx.generators.harary_graph.hnm_harary_graph": [[238, "graphscope-nx-generators-harary-graph-hnm-harary-graph"]], "graphscope.nx.generators.intersection.general_random_intersection_graph": [[239, "graphscope-nx-generators-intersection-general-random-intersection-graph"]], "graphscope.nx.generators.intersection.k_random_intersection_graph": [[240, "graphscope-nx-generators-intersection-k-random-intersection-graph"]], "graphscope.nx.generators.intersection.uniform_random_intersection_graph": [[241, "graphscope-nx-generators-intersection-uniform-random-intersection-graph"]], "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph": [[242, "graphscope-nx-generators-joint-degree-seq-directed-joint-degree-graph"]], "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree": [[243, "graphscope-nx-generators-joint-degree-seq-is-valid-directed-joint-degree"]], "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree": [[244, "graphscope-nx-generators-joint-degree-seq-is-valid-joint-degree"]], "graphscope.nx.generators.joint_degree_seq.joint_degree_graph": [[245, "graphscope-nx-generators-joint-degree-seq-joint-degree-graph"]], "graphscope.nx.generators.mycielski.mycielski_graph": [[246, "graphscope-nx-generators-mycielski-mycielski-graph"]], "graphscope.nx.generators.mycielski.mycielskian": [[247, "graphscope-nx-generators-mycielski-mycielskian"]], "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees": [[248, "graphscope-nx-generators-nonisomorphic-trees-nonisomorphic-trees"]], "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees": [[249, "graphscope-nx-generators-nonisomorphic-trees-number-of-nonisomorphic-trees"]], "graphscope.nx.generators.small.LCF_graph": [[250, "graphscope-nx-generators-small-lcf-graph"]], "graphscope.nx.generators.small.bull_graph": [[251, "graphscope-nx-generators-small-bull-graph"]], "graphscope.nx.generators.small.chvatal_graph": [[252, "graphscope-nx-generators-small-chvatal-graph"]], "graphscope.nx.generators.small.cubical_graph": [[253, "graphscope-nx-generators-small-cubical-graph"]], "graphscope.nx.generators.small.desargues_graph": [[254, "graphscope-nx-generators-small-desargues-graph"]], "graphscope.nx.generators.small.diamond_graph": [[255, "graphscope-nx-generators-small-diamond-graph"]], "graphscope.nx.generators.small.dodecahedral_graph": [[256, "graphscope-nx-generators-small-dodecahedral-graph"]], "graphscope.nx.generators.small.frucht_graph": [[257, "graphscope-nx-generators-small-frucht-graph"]], "graphscope.nx.generators.small.heawood_graph": [[258, "graphscope-nx-generators-small-heawood-graph"]], "graphscope.nx.generators.small.house_graph": [[259, "graphscope-nx-generators-small-house-graph"]], "graphscope.nx.generators.small.house_x_graph": [[260, "graphscope-nx-generators-small-house-x-graph"]], "graphscope.nx.generators.small.icosahedral_graph": [[261, "graphscope-nx-generators-small-icosahedral-graph"]], "graphscope.nx.generators.small.krackhardt_kite_graph": [[262, "graphscope-nx-generators-small-krackhardt-kite-graph"]], "graphscope.nx.generators.small.make_small_graph": [[263, "graphscope-nx-generators-small-make-small-graph"]], "graphscope.nx.generators.small.moebius_kantor_graph": [[264, "graphscope-nx-generators-small-moebius-kantor-graph"]], "graphscope.nx.generators.small.octahedral_graph": [[265, "graphscope-nx-generators-small-octahedral-graph"]], "graphscope.nx.generators.small.pappus_graph": [[266, "graphscope-nx-generators-small-pappus-graph"]], "graphscope.nx.generators.small.petersen_graph": [[267, "graphscope-nx-generators-small-petersen-graph"]], "graphscope.nx.generators.small.sedgewick_maze_graph": [[268, "graphscope-nx-generators-small-sedgewick-maze-graph"]], "graphscope.nx.generators.small.tetrahedral_graph": [[269, "graphscope-nx-generators-small-tetrahedral-graph"]], "graphscope.nx.generators.small.truncated_cube_graph": [[270, "graphscope-nx-generators-small-truncated-cube-graph"]], "graphscope.nx.generators.small.truncated_tetrahedron_graph": [[271, "graphscope-nx-generators-small-truncated-tetrahedron-graph"]], "graphscope.nx.generators.small.tutte_graph": [[272, "graphscope-nx-generators-small-tutte-graph"]], "graphscope.nx.generators.social.davis_southern_women_graph": [[273, "graphscope-nx-generators-social-davis-southern-women-graph"]], "graphscope.nx.generators.social.florentine_families_graph": [[274, "graphscope-nx-generators-social-florentine-families-graph"]], "graphscope.nx.generators.social.karate_club_graph": [[275, "graphscope-nx-generators-social-karate-club-graph"]], "graphscope.nx.generators.social.les_miserables_graph": [[276, "graphscope-nx-generators-social-les-miserables-graph"]], "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge": [[277, "graphscope-nx-generators-spectral-graph-forge-spectral-graph-forge"]], "graphscope.nx.generators.sudoku.sudoku_graph": [[278, "graphscope-nx-generators-sudoku-sudoku-graph"]], "graphscope.nx.generators.trees.prefix_tree": [[279, "graphscope-nx-generators-trees-prefix-tree"]], "graphscope.nx.generators.trees.random_tree": [[280, "graphscope-nx-generators-trees-random-tree"]], "graphscope.nx.generators.triads.triad_graph": [[281, "graphscope-nx-generators-triads-triad-graph"]], "networkx.generators.internet_as_graphs.random_internet_as_graph": [[282, "networkx-generators-internet-as-graphs-random-internet-as-graph"]], "networkx.generators.stochastic.stochastic_graph": [[283, "networkx-generators-stochastic-stochastic-graph"]], "Graph generators": [[284, "graph-generators"]], "Atlas": [[284, "module-graphscope.nx.generators.atlas"]], "Classic": [[284, "module-graphscope.nx.generators.classic"]], "Expanders": [[284, "module-graphscope.nx.generators.expanders"]], "Small": [[284, "module-graphscope.nx.generators.small"]], "Duplication Divergence": [[284, "module-graphscope.nx.generators.duplication"]], "Degree Sequence": [[284, "module-graphscope.nx.generators.degree_seq"]], "Directed": [[284, "module-graphscope.nx.generators.directed"]], "Geometric": [[284, "module-graphscope.nx.generators.geometric"]], "Ego Graph": [[284, "module-graphscope.nx.generators.ego"]], "Stochastic": [[284, "module-networkx.generators.stochastic"]], "AS graph": [[284, "module-networkx.generators.internet_as_graphs"]], "Intersection": [[284, "module-graphscope.nx.generators.intersection"]], "Social Networks": [[284, "module-graphscope.nx.generators.social"]], "Spectral": [[284, "module-graphscope.nx.generators.spectral_graph_forge"]], "Trees": [[284, "module-graphscope.nx.generators.trees"]], "Non Isomorphic Trees": [[284, "module-graphscope.nx.generators.nonisomorphic_trees"]], "Triads": [[284, "module-graphscope.nx.generators.triads"]], "Joint Degree Sequence": [[284, "module-graphscope.nx.generators.joint_degree_seq"]], "Mycielski": [[284, "module-graphscope.nx.generators.mycielski"]], "Harary Graph": [[284, "module-graphscope.nx.generators.harary_graph"]], "Sudoku": [[284, "module-graphscope.nx.generators.sudoku"]], "Graph types": [[285, "graph-types"]], "DiGraph": [[285, "digraph"]], "NetworkX-style API": [[286, "networkx-style-api"]], "Reading graphs": [[287, "reading-graphs"]], "Edge List": [[287, "edge-list"]], "Adjacency List": [[287, "adjacency-list"]], "Graph Transformation": [[288, "graph-transformation"]], "Operation": [[289, "operation"]], "Operation object": [[289, "operation-object"]], "BuiltIn operations": [[289, "module-graphscope.framework.dag_utils"]], "Python API Reference": [[290, "python-api-reference"]], "Selector": [[291, "selector"]], "Selectors in different context": [[291, "selectors-in-different-context"]], "TensorContext": [[291, "tensorcontext"]], "VertexDataContext": [[291, "vertexdatacontext"]], "LabeledVertexDataContext": [[291, "labeledvertexdatacontext"]], "VertexPropertyContext": [[291, "vertexpropertycontext"]], "LabeledVertexPropertyContext": [[291, "labeledvertexpropertycontext"]], "Methods that use selectors": [[291, "methods-that-use-selectors"]], "One-dimensional results": [[291, "one-dimensional-results"]], "Multi-dimensional results": [[291, "multi-dimensional-results"]], "Vertex Range": [[291, "vertex-range"]], "Session": [[292, "session"]], "Session object": [[292, "session-object"]], "Session Functions": [[292, "session-functions"]], "Resources Estimator": [[293, "resources-estimator"]], "GART: Bridging the Gap between Relational OLTP and Graph Workloads": [[294, "gart-bridging-the-gap-between-relational-oltp-and-graph-workloads"]], "Architecture and Workflow": [[294, "architecture-and-workflow"]], "Defining Graph Mapping in GART": [[294, "defining-graph-mapping-in-gart"]], "Loading Logs to GART Storage": [[294, "loading-logs-to-gart-storage"]], "Using Loaded Graphs from GraphScope": [[294, "using-loaded-graphs-from-graphscope"]], "GraphAr: Standard Graph Data File Format": [[296, "graphar-standard-graph-data-file-format"]], "The GraphAr File Format": [[296, "the-graphar-file-format"]], "Features": [[296, "features"]], "File Format": [[296, "file-format"]], "Information files": [[296, "information-files"]], "Data files": [[296, "data-files"]], "GraphAr in GraphScope": [[296, "graphar-in-graphscope"]], "Loading GraphAr Data into GraphScope": [[296, "loading-graphar-data-into-graphscope"]], "Archiving the Graph Data in GraphAr": [[296, "archiving-the-graph-data-in-graphar"]], "GRIN: Graph Retrieval INterface": [[297, "grin-graph-retrieval-interface"]], "Motivations": [[297, "motivations"]], "Unified Graph Retrieval": [[297, "unified-graph-retrieval"]], "GRIN Concepts": [[297, "grin-concepts"]], "Predefined Macros": [[297, "predefined-macros"]], "Partition Strategy": [[297, "partition-strategy"]], "Edge-cut Partition Strategy": [[297, "edge-cut-partition-strategy"]], "Vertex-cut Partition Strategy": [[297, "vertex-cut-partition-strategy"]], "Property Graph Model": [[297, "property-graph-model"]], "Implementation Guideline": [[297, "implementation-guideline"]], "For computing engine": [[297, "for-computing-engine"]], "For storage engine": [[297, "for-storage-engine"]], "Design Details": [[297, "design-details"]], "Handler": [[297, "handler"]], "Edge": [[297, "edge"]], "List": [[297, "list"]], "Array-style Retrieval": [[297, "array-style-retrieval"]], "List Iterator": [[297, "list-iterator"]], "Property": [[297, "property"]], "Label": [[297, "label"], [318, "label"]], "Master and Mirror": [[297, "master-and-mirror"]], "Local Complete": [[297, "local-complete"]], "Natural ID Trait": [[297, "natural-id-trait"]], "Groot: Persistent Graph Store": [[298, "groot-persistent-graph-store"]], "Known Limitation": [[298, "known-limitation"]], "Deploy Groot": [[298, "deploy-groot"]], "Install from ArtifactHub": [[298, "install-from-artifacthub"]], "Installing from a local directory": [[298, "installing-from-a-local-directory"]], "Common Configurations": [[298, "common-configurations"]], "Connecting to Groot": [[298, "connecting-to-groot"]], "Connection": [[298, "connection"]], "Building and Modifying Graph Models": [[298, "building-and-modifying-graph-models"]], "Using Built-in Datasets": [[298, "using-built-in-datasets"]], "Customizing Models and Datasets": [[298, "customizing-models-and-datasets"]], "Querying Data": [[298, "querying-data"]], "Python": [[298, "python"]], "Java": [[298, "java"]], "Node.js": [[298, "node-js"]], "Data Import": [[298, "data-import"]], "Offline Import": [[298, "offline-import"]], "Prerequisite": [[298, "prerequisite"]], "Data Format": [[298, "data-format"]], "Loading Process": [[298, "loading-process"]], "Build: Building a partitioned graph": [[298, "build-building-a-partitioned-graph"]], "Ingest: Loading graph partitions": [[298, "ingest-loading-graph-partitions"]], "Commit: Commit to store service": [[298, "commit-commit-to-store-service"]], "Realtime Write": [[298, "realtime-write"]], "Uninstalling and Restarting": [[298, "uninstalling-and-restarting"]], "Uninstall Groot": [[298, "uninstall-groot"]], "Restart Groot": [[298, "restart-groot"]], "Destroy Groot": [[298, "destroy-groot"]], "Developing Guide": [[298, "developing-guide"]], "Build image": [[298, "build-image"]], "Persistence": [[298, "persistence"]], "Troubleshooting": [[298, "troubleshooting"]], "Viewing logs": [[298, "viewing-logs"]], "Configuring logs": [[298, "configuring-logs"]], "In-memory immutable graphs on Vineyard": [[299, "in-memory-immutable-graphs-on-vineyard"]], "Graphs in Vineyard": [[299, "graphs-in-vineyard"]], "Loading Graphs to Vineyard": [[299, "loading-graphs-to-vineyard"]], "Using Loaded Graphs": [[299, "using-loaded-graphs"]], "Applications and algorithms": [[300, "applications-and-algorithms"]], "Bind application to graph": [[300, "bind-application-to-graph"]], "Built-in algorithms": [[300, "built-in-algorithms"]], "Scaling and repartitioning": [[301, "scaling-and-repartitioning"]], "Fennel": [[301, "fennel"]], "XtraPuLP": [[301, "xtrapulp"]], "Hybrid partitioning": [[301, "hybrid-partitioning"]], "User Guide and Examples of GAE": [[302, "user-guide-and-examples-of-gae"]], "Developing Your Algorithms with Python": [[302, "developing-your-algorithms-with-python"]], "Developing Your Algorithms with C++": [[302, "developing-your-algorithms-with-c"]], "Developing Your Algorithms with Java": [[302, "developing-your-algorithms-with-java"]], "User Guide and Examples of GLE": [[303, "user-guide-and-examples-of-gle"]], "Error Codes": [[304, "error-codes"]], "Command-line Utility gs": [[305, "command-line-utility-gs"]], "How to Find logs": [[306, "how-to-find-logs"]], "Find logs in k8s": [[306, "find-logs-in-k8s"]], "Find logs for Graph Analytical Engine (GAE)": [[306, "find-logs-for-graph-analytical-engine-gae"]], "Find logs for Graph Interactive Engine (GIE)": [[306, "find-logs-for-graph-interactive-engine-gie"]], "Find logs for Graph Learning Engine (GLE)": [[306, "find-logs-for-graph-learning-engine-gle"]], "Find logs for Groot": [[306, "find-logs-for-groot"]], "Monitoring": [[307, "monitoring"]], "\u56fe\u5206\u6790\u5f15\u64ce": [[308, "id1"]], "\u5185\u7f6e\u7b97\u6cd5": [[308, "id2"]], "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": [[308, "id3"]], "\u4f7f\u7528 PIE \u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[308, "pie"]], "\u4f7f\u7528 Pregel \u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[308, "pregel"]], "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528 math.h \u4e2d\u7684\u51fd\u6570": [[308, "math-h"]], "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[308, "id5"]], "\u8fd0\u884cJava\u7f16\u5199\u7684\u7b97\u6cd5": [[308, "java"]], "\u8fd0\u884c\u793a\u4f8b\u7684Java\u7b97\u6cd5": [[308, "id6"]], "\u4f7f\u7528Java\u7f16\u5199\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5": [[308, "id7"]], "\u90e8\u7f72": [[309, "id1"]], "\u4f7f\u7528Helm\u90e8\u7f72GraphScope": [[309, "helmgraphscope"]], "\u5728AWS/\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": [[309, "aws"]], "\u672c\u5730\u90e8\u7f72GraphScope": [[309, "graphscope"]], "\u5f00\u53d1\u8005\u6307\u5357": [[310, "id1"]], "\u57fa\u4e8e Docker \u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5 GraphScope": [[310, "docker-graphscope"]], "\u57fa\u4e8e Kubernetes \u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5 GraphScope": [[310, "kubernetes-graphscope"]], "\u6784\u5efa Python Wheels": [[310, "python-wheels"]], "Linux": [[310, "linux"]], "macOS": [[310, "macos"]], "\u4ee3\u7801\u98ce\u683c": [[310, "id3"]], "\u5e38\u89c1\u95ee\u9898": [[311, "id1"]], "\u5feb\u901f\u4e0a\u624b": [[312, "id1"]], "\u793a\u4f8b: \u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [[312, "id3"]], "\u521b\u5efa\u4f1a\u8bdd": [[312, "id4"]], "\u4ea4\u4e92\u5f0f\u67e5\u8be2": [[312, "id6"]], "\u56fe\u5206\u6790": [[312, "id7"]], "\u56fe\u795e\u7ecf\u7f51\u7edc (GNNs)": [[312, "gnns"]], "\u5173\u95ed\u4f1a\u8bdd": [[312, "id8"]], "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": [[313, "graph-transformation"]], "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": [[313, "id2"]], "\u6295\u5f71": [[313, "id3"]], "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": [[313, "id4"]], "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": [[313, "id5"]], "GraphScope: \u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": [[314, "graphscope"]], "\u76ee\u5f55": [[314, null], [319, null]], "API \u53c2\u8003": [[314, null]], "\u7d22\u5f15": [[314, "id1"]], "\u5b89\u88c5": [[315, "id1"]], "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": [[315, "id2"]], "\u57fa\u4e8e Kubernetes \u5b89\u88c5 GraphScope \u5ba2\u6237\u7aef": [[315, "kubernetes-graphscope"]], "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": [[316, "id1"]], "Apache TinkerPop": [[316, "apache-tinkerpop"]], "\u5229\u7528Python\uff08Gremlin\uff09\u8fde\u63a5GraphScope": [[316, "python-gremlin-graphscope"]], "\u5229\u7528Java\uff08Gremlin\uff09\u8fde\u63a5GraphScope": [[316, "java-gremlin-graphscope"]], "Gremlin Console\uff08\u5f00\u53d1\u63a7\u5236\u53f0\uff09": [[316, "id5"]], "Gremlin\u7f16\u7a0b\u5165\u95e8\u2013101": [[316, "gremlin-101"]], "\u56fe\u6570\u636e\u6a21\u578b": [[316, "id8"]], "\u67e5\u8be2\u8bed\u8a00": [[316, "id9"]], "\u4e00\u4e2a\u4f8b\u5b50": [[316, "id10"]], "Gremlin\u517c\u5bb9\u6027\uff08\u5bf9\u6bd4TinkerPop\uff09": [[316, "gremlin-tinkerpop"]], "\u5c5e\u6027\u56fe\u6a21\u578b\u7ea6\u675f": [[316, "id11"]], "\u5c1a\u4e0d\u652f\u6301\u7684\u529f\u80fd\u7279\u6027": [[316, "id12"]], "\u652f\u6301\u7684Gremlin\u64cd\u4f5c": [[316, "id13"]], "\u5df2\u77e5\u9650\u5236": [[316, "id14"]], "\u56fe\u5b66\u4e60\u5f15\u64ce": [[317, "id1"]], "\u56fe\u5b66\u4e60\u6a21\u578b": [[317, "id2"]], "\u6570\u636e\u6a21\u578b": [[317, "id3"]], "\u7f16\u7801\u5668": [[317, "id4"]], "\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[317, "id5"]], "\u91c7\u6837": [[317, "id6"]], "\u56fe\u6570\u636e\u6d41": [[317, "id7"]], "\u6a21\u578b": [[317, "id8"]], "\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": [[317, "id9"]], "\u8f7d\u56fe": [[318, "loading-graphs"]], "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": [[318, "id3"]], "\u624b\u52a8\u914d\u7f6e\u56fe": [[318, "id4"]], "Build Vertex": [[318, "build-vertex"]], "vertices": [[318, "vertices"]], "properties": [[318, "properties"], [318, "id7"]], "vid_field": [[318, "vid-field"]], "Build Edge": [[318, "build-edge"]], "edges": [[318, "edges"]], "label": [[318, "id6"]], "src_label and dst_label": [[318, "src-label-and-dst-label"]], "src_field and dst_field": [[318, "src-field-and-dst-field"]], "\u9ad8\u7ea7\u7528\u6cd5": [[318, "id8"]], "\u6ca1\u6709\u6b67\u4e49\u65f6\uff0c\u81ea\u52a8\u63a8\u65ad\u70b9\u6807\u7b7e": [[318, "id9"]], "\u4ece\u8fb9\u4e2d\u63a8\u65ad\u70b9": [[318, "id10"]], "\u591a\u79cd\u8fb9\u5173\u7cfb": [[318, "id11"]], "\u6307\u5b9a\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b": [[318, "id12"]], "\u56fe\u7684\u5176\u4ed6\u53c2\u6570": [[318, "id13"]], "\u5b8c\u6574\u7684\u793a\u4f8b": [[318, "id14"]], "\u4ece Pandas \u6216 Numpy \u4e2d\u8f7d\u56fe": [[318, "pandas-numpy"]], "\u4ece Pandas \u4e2d\u8f7d\u56fe": [[318, "pandas"]], "\u4ece Numpy \u4e2d\u8f7d\u56fe": [[318, "numpy"]], "Loader \u7684\u53d8\u79cd": [[318, "loader"]], "\u5165\u95e8\u6559\u7a0b": [[319, "id1"]]}, "indexentries": {"all_pairs_shortest_path_length()": [[0, "all_pairs_shortest_path_length"]], "attribute_assortativity()": [[0, "attribute_assortativity"]], "average_degree_connectivity()": [[0, "average_degree_connectivity"]], "betweenness_centrality()": [[0, "betweenness_centrality"]], "bfs()": [[0, "bfs"]], "built-in function": [[0, "all_pairs_shortest_path_length"], [0, "attribute_assortativity"], [0, "average_degree_connectivity"], [0, "betweenness_centrality"], [0, "bfs"], [0, "closeness_centrality"], [0, "degree_assortativity_coefficient"], [0, "degree_centrality"], [0, "dfs"], [0, "eigenvector_centrality"], [0, "hits"], [0, "id0"], [0, "id1"], [0, "id2"], [0, "katz_centrality"], [0, "kkore"], [0, "kshell"], [0, "lpa"], [0, "sampling_path"], [0, "sssp"]], "closeness_centrality()": [[0, "closeness_centrality"]], "clustering()": [[0, "id0"]], "degree_assortativity_coefficient()": [[0, "degree_assortativity_coefficient"]], "degree_centrality()": [[0, "degree_centrality"]], "dfs()": [[0, "dfs"]], "eigenvector_centrality()": [[0, "eigenvector_centrality"]], "hits()": [[0, "hits"]], "katz_centrality()": [[0, "katz_centrality"]], "kkore()": [[0, "kkore"]], "kshell()": [[0, "kshell"]], "lpa()": [[0, "lpa"]], "pagerank()": [[0, "id1"]], "sampling_path()": [[0, "sampling_path"]], "sssp()": [[0, "sssp"]], "voterank()": [[0, "id2"]], "gs::appbase (c++ class)": [[73, "_CPPv4I00EN2gs7AppBaseE"]], "gs::appbase::appbase (c++ function)": [[73, "_CPPv4N2gs7AppBase7AppBaseEv"]], "gs::appbase::inceval (c++ function)": [[73, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::appbase::peval (c++ function)": [[73, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::appbase::load_strategy (c++ member)": [[73, "_CPPv4N2gs7AppBase13load_strategyE"]], "gs::appbase::message_manager_t (c++ type)": [[73, "_CPPv4N2gs7AppBase17message_manager_tE"]], "gs::appbase::message_strategy (c++ member)": [[73, "_CPPv4N2gs7AppBase16message_strategyE"]], "gs::appbase::need_split_edges (c++ member)": [[73, "_CPPv4N2gs7AppBase16need_split_edgesE"]], "gs::appbase::~appbase (c++ function)": [[73, "_CPPv4N2gs7AppBaseD0Ev"]], "gs::appentry (c++ class)": [[73, "_CPPv4N2gs8AppEntryE"]], "gs::appentry::appentry (c++ function)": [[73, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE"]], "gs::appentry::createworker (c++ function)": [[73, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::appentry::init (c++ function)": [[73, "_CPPv4N2gs8AppEntry4InitEv"]], "gs::appentry::query (c++ function)": [[73, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE"]], "gs::argtypeat (c++ struct)": [[73, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE"]], "gs::argsnum (c++ struct)": [[73, "_CPPv4I0EN2gs7ArgsNumE"]], "gs::argsunpacker (c++ struct)": [[73, "_CPPv4I0EN2gs12ArgsUnpackerE"]], "gs::arrowfragmentloader (c++ class)": [[73, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE"]], "gs::arrowfragmentloader::addlabelstofragment (c++ function)": [[73, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE"]], "gs::arrowfragmentloader::addlabelstofragmentasfragmentgroup (c++ function)": [[73, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE"]], "gs::arrowfragmentloader::arrowfragmentloader (c++ function)": [[73, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE"], [73, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb"]], "gs::arrowfragmentloader::loadedgetables (c++ function)": [[73, "_CPPv4N2gs19ArrowFragmentLoader14LoadEdgeTablesEv"]], "gs::arrowfragmentloader::loadfragment (c++ function)": [[73, "_CPPv4N2gs19ArrowFragmentLoader12LoadFragmentEv"]], "gs::arrowfragmentloader::loadfragmentasfragmentgroup (c++ function)": [[73, "_CPPv4N2gs19ArrowFragmentLoader27LoadFragmentAsFragmentGroupEv"]], "gs::arrowfragmentloader::loadvertexedgetables (c++ function)": [[73, "_CPPv4N2gs19ArrowFragmentLoader20LoadVertexEdgeTablesEv"]], "gs::arrowfragmentloader::loadvertextables (c++ function)": [[73, "_CPPv4N2gs19ArrowFragmentLoader16LoadVertexTablesEv"]], "gs::arrowfragmentloader::initpartitioner (c++ function)": [[73, "_CPPv4N2gs19ArrowFragmentLoader15initPartitionerEv"]], "gs::arrowfragmentloader::~arrowfragmentloader (c++ function)": [[73, "_CPPv4N2gs19ArrowFragmentLoaderD0Ev"]], "gs::arrowprojectedfragment (c++ class)": [[73, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE"]], "gs::arrowprojectedfragment::construct (c++ function)": [[73, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE"]], "gs::arrowprojectedfragment::create (c++ function)": [[73, "_CPPv4N2gs22ArrowProjectedFragment6CreateEv"]], "gs::arrowprojectedfragment::getdata (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t"]], "gs::arrowprojectedfragment::getedgenum (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment10GetEdgeNumEv"]], "gs::arrowprojectedfragment::getfragid (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t"]], "gs::arrowprojectedfragment::getid (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinedgenum (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment12GetInEdgeNumEv"]], "gs::arrowprojectedfragment::getincomingadjlist (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t"], [73, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t5fid_t"]], "gs::arrowprojectedfragment::getincomingedgenum (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingEdgeNumEv"]], "gs::arrowprojectedfragment::getincominginnervertexadjlist (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListERK8vertex_t"]], "gs::arrowprojectedfragment::getincomingoutervertexadjlist (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertex (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexgid (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexid (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexinternalid (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinnerverticesnum (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment19GetInnerVerticesNumEv"]], "gs::arrowprojectedfragment::getinternalid (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getlocalindegree (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t"]], "gs::arrowprojectedfragment::getlocaloutdegree (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t"]], "gs::arrowprojectedfragment::getoutedgenum (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment13GetOutEdgeNumEv"]], "gs::arrowprojectedfragment::getoutervertex (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexgid (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexid (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexinternalid (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getouterverticesnum (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment19GetOuterVerticesNumEv"]], "gs::arrowprojectedfragment::getoutgoingadjlist (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t"], [73, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t5fid_t"]], "gs::arrowprojectedfragment::getoutgoingedgenum (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingEdgeNumEv"]], "gs::arrowprojectedfragment::getoutgoinginnervertexadjlist (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListERK8vertex_t"]], "gs::arrowprojectedfragment::getoutgoingoutervertexadjlist (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListERK8vertex_t"]], "gs::arrowprojectedfragment::gettotalverticesnum (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment19GetTotalVerticesNumEv"]], "gs::arrowprojectedfragment::getvertex (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getvertexmap (c++ function)": [[73, "_CPPv4N2gs22ArrowProjectedFragment12GetVertexMapEv"], [73, "_CPPv4NK2gs22ArrowProjectedFragment12GetVertexMapEv"]], "gs::arrowprojectedfragment::getverticesnum (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment14GetVerticesNumEv"]], "gs::arrowprojectedfragment::gid2oid (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t"]], "gs::arrowprojectedfragment::gid2vertex (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::iedests (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::ioedests (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::innervertexgid2vertex (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::innervertices (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment13InnerVerticesEv"]], "gs::arrowprojectedfragment::isinnervertex (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t"]], "gs::arrowprojectedfragment::isoutervertex (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t"]], "gs::arrowprojectedfragment::mirrorvertices (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t"]], "gs::arrowprojectedfragment::oedests (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::oid2gid (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t"], [73, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t"]], "gs::arrowprojectedfragment::outervertexgid2vertex (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::outervertices (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t"], [73, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesEv"]], "gs::arrowprojectedfragment::preparetorunapp (c++ function)": [[73, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE"]], "gs::arrowprojectedfragment::project (c++ function)": [[73, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t"]], "gs::arrowprojectedfragment::vertex2gid (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t"]], "gs::arrowprojectedfragment::vertices (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment8VerticesEv"]], "gs::arrowprojectedfragment::adj_list_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment10adj_list_tE"]], "gs::arrowprojectedfragment::const_adj_list_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment16const_adj_list_tE"]], "gs::arrowprojectedfragment::directed (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment8directedEv"]], "gs::arrowprojectedfragment::edata_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment7edata_tE"]], "gs::arrowprojectedfragment::edge_label (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment10edge_labelEv"]], "gs::arrowprojectedfragment::edge_prop_id (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment12edge_prop_idEv"]], "gs::arrowprojectedfragment::eid_array_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment11eid_array_tE"]], "gs::arrowprojectedfragment::eid_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment5eid_tE"]], "gs::arrowprojectedfragment::fid (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment3fidEv"]], "gs::arrowprojectedfragment::fnum (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment4fnumEv"]], "gs::arrowprojectedfragment::get_arrow_fragment (c++ function)": [[73, "_CPPv4N2gs22ArrowProjectedFragment18get_arrow_fragmentEv"]], "gs::arrowprojectedfragment::get_edata_array_accessor (c++ function)": [[73, "_CPPv4N2gs22ArrowProjectedFragment24get_edata_array_accessorEv"]], "gs::arrowprojectedfragment::get_ie_offsets_begin_ptr (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment24get_ie_offsets_begin_ptrEv"]], "gs::arrowprojectedfragment::get_ie_offsets_end_ptr (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment22get_ie_offsets_end_ptrEv"]], "gs::arrowprojectedfragment::get_in_edges_ptr (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment16get_in_edges_ptrEv"]], "gs::arrowprojectedfragment::get_oe_offsets_begin_ptr (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment24get_oe_offsets_begin_ptrEv"]], "gs::arrowprojectedfragment::get_oe_offsets_end_ptr (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment22get_oe_offsets_end_ptrEv"]], "gs::arrowprojectedfragment::get_out_edges_ptr (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment17get_out_edges_ptrEv"]], "gs::arrowprojectedfragment::get_vdata_array_accessor (c++ function)": [[73, "_CPPv4N2gs22ArrowProjectedFragment24get_vdata_array_accessorEv"]], "gs::arrowprojectedfragment::inner_vertex_array_t (c++ type)": [[73, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE"]], "gs::arrowprojectedfragment::inner_vertices_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment16inner_vertices_tE"]], "gs::arrowprojectedfragment::internal_oid_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment14internal_oid_tE"]], "gs::arrowprojectedfragment::label_id_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment10label_id_tE"]], "gs::arrowprojectedfragment::load_strategy (c++ member)": [[73, "_CPPv4N2gs22ArrowProjectedFragment13load_strategyE"]], "gs::arrowprojectedfragment::nbr_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment5nbr_tE"]], "gs::arrowprojectedfragment::nbr_unit_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment10nbr_unit_tE"]], "gs::arrowprojectedfragment::oid_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment5oid_tE"]], "gs::arrowprojectedfragment::outer_vertex_array_t (c++ type)": [[73, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE"]], "gs::arrowprojectedfragment::outer_vertices_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment16outer_vertices_tE"]], "gs::arrowprojectedfragment::prop_id_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment9prop_id_tE"]], "gs::arrowprojectedfragment::property_graph_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment16property_graph_tE"]], "gs::arrowprojectedfragment::property_vertex_map_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment21property_vertex_map_tE"]], "gs::arrowprojectedfragment::sub_vertices_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment14sub_vertices_tE"]], "gs::arrowprojectedfragment::vdata_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment7vdata_tE"]], "gs::arrowprojectedfragment::vertex_array_t (c++ type)": [[73, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE"]], "gs::arrowprojectedfragment::vertex_label (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment12vertex_labelEv"]], "gs::arrowprojectedfragment::vertex_map_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment12vertex_map_tE"]], "gs::arrowprojectedfragment::vertex_prop_id (c++ function)": [[73, "_CPPv4NK2gs22ArrowProjectedFragment14vertex_prop_idEv"]], "gs::arrowprojectedfragment::vertex_range_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment14vertex_range_tE"]], "gs::arrowprojectedfragment::vertex_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment8vertex_tE"]], "gs::arrowprojectedfragment::vertices_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment10vertices_tE"]], "gs::arrowprojectedfragment::vid_array_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment11vid_array_tE"]], "gs::arrowprojectedfragment::vid_t (c++ type)": [[73, "_CPPv4N2gs22ArrowProjectedFragment5vid_tE"]], "gs::arrowprojectedfragment::~arrowprojectedfragment (c++ function)": [[73, "_CPPv4N2gs22ArrowProjectedFragmentD0Ev"]], "gs::arrowprojectedvertexmap (c++ class)": [[73, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE"]], "gs::arrowprojectedvertexmap::construct (c++ function)": [[73, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE"]], "gs::arrowprojectedvertexmap::create (c++ function)": [[73, "_CPPv4N2gs23ArrowProjectedVertexMap6CreateEv"]], "gs::arrowprojectedvertexmap::getfidfromgid (c++ function)": [[73, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t"]], "gs::arrowprojectedvertexmap::getgid (c++ function)": [[73, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t"], [73, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t"]], "gs::arrowprojectedvertexmap::getinnervertexsize (c++ function)": [[73, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t"]], "gs::arrowprojectedvertexmap::getlidfromgid (c++ function)": [[73, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t"]], "gs::arrowprojectedvertexmap::getoffsetfromlid (c++ function)": [[73, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t"]], "gs::arrowprojectedvertexmap::getoid (c++ function)": [[73, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t"]], "gs::arrowprojectedvertexmap::gettotalverticesnum (c++ function)": [[73, "_CPPv4NK2gs23ArrowProjectedVertexMap19GetTotalVerticesNumEv"]], "gs::arrowprojectedvertexmap::offset2lid (c++ function)": [[73, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t"]], "gs::arrowprojectedvertexmap::project (c++ function)": [[73, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t"]], "gs::ctxwrapperbuilder (c++ struct)": [[73, "_CPPv4I00EN2gs17CtxWrapperBuilderE"]], "gs::defaultpropertyworker (c++ class)": [[73, "_CPPv4I0EN2gs21DefaultPropertyWorkerE"]], "gs::defaultpropertyworker::defaultpropertyworker (c++ function)": [[73, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::defaultpropertyworker::finalize (c++ function)": [[73, "_CPPv4N2gs21DefaultPropertyWorker8FinalizeEv"]], "gs::defaultpropertyworker::getcontext (c++ function)": [[73, "_CPPv4N2gs21DefaultPropertyWorker10GetContextEv"]], "gs::defaultpropertyworker::init (c++ function)": [[73, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::defaultpropertyworker::output (c++ function)": [[73, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE"]], "gs::defaultpropertyworker::query (c++ function)": [[73, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args"]], "gs::defaultpropertyworker::context_t (c++ type)": [[73, "_CPPv4N2gs21DefaultPropertyWorker9context_tE"]], "gs::defaultpropertyworker::fragment_t (c++ type)": [[73, "_CPPv4N2gs21DefaultPropertyWorker10fragment_tE"]], "gs::defaultpropertyworker::message_manager_t (c++ type)": [[73, "_CPPv4N2gs21DefaultPropertyWorker17message_manager_tE"]], "gs::defaultpropertyworker::~defaultpropertyworker (c++ function)": [[73, "_CPPv4N2gs21DefaultPropertyWorkerD0Ev"]], "gs::defaultworker (c++ class)": [[73, "_CPPv4I0EN2gs13DefaultWorkerE"]], "gs::defaultworker::defaultworker (c++ function)": [[73, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::defaultworker::finalize (c++ function)": [[73, "_CPPv4N2gs13DefaultWorker8FinalizeEv"]], "gs::defaultworker::getcontext (c++ function)": [[73, "_CPPv4N2gs13DefaultWorker10GetContextEv"]], "gs::defaultworker::init (c++ function)": [[73, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::defaultworker::output (c++ function)": [[73, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE"]], "gs::defaultworker::query (c++ function)": [[73, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args"]], "gs::defaultworker::context_t (c++ type)": [[73, "_CPPv4N2gs13DefaultWorker9context_tE"]], "gs::defaultworker::fragment_t (c++ type)": [[73, "_CPPv4N2gs13DefaultWorker10fragment_tE"]], "gs::defaultworker::message_manager_t (c++ type)": [[73, "_CPPv4N2gs13DefaultWorker17message_manager_tE"]], "gs::defaultworker::~defaultworker (c++ function)": [[73, "_CPPv4N2gs13DefaultWorkerD0Ev"]], "gs::dispatchresult (c++ class)": [[73, "_CPPv4N2gs14DispatchResultE"]], "gs::dispatchresult::aggregatepolicy (c++ enum)": [[73, "_CPPv4N2gs14DispatchResult15AggregatePolicyE"]], "gs::dispatchresult::aggregatepolicy::kconcat (c++ enumerator)": [[73, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE"]], "gs::dispatchresult::aggregatepolicy::kmergegraphdef (c++ enumerator)": [[73, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE"]], "gs::dispatchresult::aggregatepolicy::kpickfirst (c++ enumerator)": [[73, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE"]], "gs::dispatchresult::aggregatepolicy::kpickfirstnonempty (c++ enumerator)": [[73, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE"]], "gs::dispatchresult::aggregatepolicy::kpickfirstnonemptygraphdef (c++ enumerator)": [[73, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE"]], "gs::dispatchresult::aggregatepolicy::krequireconsistent (c++ enumerator)": [[73, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE"]], "gs::dispatchresult::dispatchresult (c++ function)": [[73, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE"], [73, "_CPPv4N2gs14DispatchResult14DispatchResultEv"]], "gs::dispatchresult::aggregate_policy (c++ function)": [[73, "_CPPv4NK2gs14DispatchResult16aggregate_policyEv"]], "gs::dispatchresult::data (c++ function)": [[73, "_CPPv4NK2gs14DispatchResult4dataEv"]], "gs::dispatchresult::error_code (c++ function)": [[73, "_CPPv4NK2gs14DispatchResult10error_codeEv"]], "gs::dispatchresult::graph_def (c++ function)": [[73, "_CPPv4N2gs14DispatchResult9graph_defEv"], [73, "_CPPv4NK2gs14DispatchResult9graph_defEv"]], "gs::dispatchresult::has_large_data (c++ function)": [[73, "_CPPv4NK2gs14DispatchResult14has_large_dataEv"]], "gs::dispatchresult::message (c++ function)": [[73, "_CPPv4N2gs14DispatchResult7messageEv"]], "gs::dispatchresult::set_data (c++ function)": [[73, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb"], [73, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb"]], "gs::dispatchresult::set_error (c++ function)": [[73, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE"]], "gs::dispatchresult::set_graph_def (c++ function)": [[73, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy"]], "gs::dispatchresult::worker_id (c++ function)": [[73, "_CPPv4NK2gs14DispatchResult9worker_idEv"]], "gs::dispatcher (c++ class)": [[73, "_CPPv4N2gs10DispatcherE"]], "gs::dispatcher::dispatch (c++ function)": [[73, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE"]], "gs::dispatcher::dispatcher (c++ function)": [[73, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE"]], "gs::dispatcher::setcommand (c++ function)": [[73, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE"]], "gs::dispatcher::start (c++ function)": [[73, "_CPPv4N2gs10Dispatcher5StartEv"]], "gs::dispatcher::stop (c++ function)": [[73, "_CPPv4N2gs10Dispatcher4StopEv"]], "gs::dispatcher::subscribe (c++ function)": [[73, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE"]], "gs::engineconfig (c++ struct)": [[73, "_CPPv4N2gs12EngineConfigE"]], "gs::engineconfig::tojsonstring (c++ function)": [[73, "_CPPv4NK2gs12EngineConfig12ToJsonStringEv"]], "gs::engineconfig::enable_java_sdk (c++ member)": [[73, "_CPPv4N2gs12EngineConfig15enable_java_sdkE"]], "gs::engineconfig::networkx (c++ member)": [[73, "_CPPv4N2gs12EngineConfig8networkxE"]], "gs::engineconfig::vineyard_rpc_endpoint (c++ member)": [[73, "_CPPv4N2gs12EngineConfig21vineyard_rpc_endpointE"]], "gs::engineconfig::vineyard_socket (c++ member)": [[73, "_CPPv4N2gs12EngineConfig15vineyard_socketE"]], "gs::fragmentwrapper (c++ class)": [[73, "_CPPv4I0EN2gs15FragmentWrapperE"]], "gs::gsobject (c++ class)": [[73, "_CPPv4N2gs8GSObjectE"]], "gs::gsobject::gsobject (c++ function)": [[73, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType"]], "gs::gsobject::tostring (c++ function)": [[73, "_CPPv4NK2gs8GSObject8ToStringEv"]], "gs::gsobject::id (c++ function)": [[73, "_CPPv4NK2gs8GSObject2idEv"]], "gs::gsobject::type (c++ function)": [[73, "_CPPv4NK2gs8GSObject4typeEv"]], "gs::gsobject::~gsobject (c++ function)": [[73, "_CPPv4N2gs8GSObjectD0Ev"]], "gs::grapeengine (c++ class)": [[73, "_CPPv4N2gs11GrapeEngineE"]], "gs::grapeengine::grapeengine (c++ function)": [[73, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE"], [73, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi"]], "gs::grapeengine::rundagfile (c++ function)": [[73, "_CPPv4N2gs11GrapeEngine10RunDAGFileEv"]], "gs::grapeengine::start (c++ function)": [[73, "_CPPv4N2gs11GrapeEngine5StartEv"]], "gs::grapeengine::stop (c++ function)": [[73, "_CPPv4N2gs11GrapeEngine4StopEv"]], "gs::grapeinstance (c++ class)": [[73, "_CPPv4N2gs13GrapeInstanceE"]], "gs::grapeinstance::grapeinstance (c++ function)": [[73, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE"]], "gs::grapeinstance::init (c++ function)": [[73, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE"]], "gs::grapeinstance::onreceive (c++ function)": [[73, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE"]], "gs::objectmanager (c++ class)": [[73, "_CPPv4N2gs13ObjectManagerE"]], "gs::objectmanager::getobject (c++ function)": [[73, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE"], [73, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE"]], "gs::objectmanager::hasobject (c++ function)": [[73, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE"]], "gs::objectmanager::putobject (c++ function)": [[73, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE"]], "gs::objectmanager::removeobject (c++ function)": [[73, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE"]], "gs::parallelpropertyworker (c++ class)": [[73, "_CPPv4I0EN2gs22ParallelPropertyWorkerE"]], "gs::parallelpropertyworker::finalize (c++ function)": [[73, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv"]], "gs::parallelpropertyworker::getcontext (c++ function)": [[73, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv"]], "gs::parallelpropertyworker::init (c++ function)": [[73, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::parallelpropertyworker::output (c++ function)": [[73, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE"]], "gs::parallelpropertyworker::parallelpropertyworker (c++ function)": [[73, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::parallelpropertyworker::query (c++ function)": [[73, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args"]], "gs::parallelpropertyworker::context_t (c++ type)": [[73, "_CPPv4N2gs22ParallelPropertyWorker9context_tE"]], "gs::parallelpropertyworker::fragment_t (c++ type)": [[73, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE"]], "gs::parallelpropertyworker::message_manager_t (c++ type)": [[73, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE"]], "gs::parallelpropertyworker::~parallelpropertyworker (c++ function)": [[73, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev"]], "gs::propertyappbase (c++ class)": [[73, "_CPPv4I00EN2gs15PropertyAppBaseE"]], "gs::propertyappbase::inceval (c++ function)": [[73, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::propertyappbase::peval (c++ function)": [[73, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::propertyappbase::propertyappbase (c++ function)": [[73, "_CPPv4N2gs15PropertyAppBase15PropertyAppBaseEv"]], "gs::propertyappbase::load_strategy (c++ member)": [[73, "_CPPv4N2gs15PropertyAppBase13load_strategyE"]], "gs::propertyappbase::message_manager_t (c++ type)": [[73, "_CPPv4N2gs15PropertyAppBase17message_manager_tE"]], "gs::propertyappbase::message_strategy (c++ member)": [[73, "_CPPv4N2gs15PropertyAppBase16message_strategyE"]], "gs::propertyappbase::need_split_edges (c++ member)": [[73, "_CPPv4N2gs15PropertyAppBase16need_split_edgesE"]], "gs::propertyappbase::~propertyappbase (c++ function)": [[73, "_CPPv4N2gs15PropertyAppBaseD0Ev"]], "gs::propertyautoappbase (c++ class)": [[73, "_CPPv4I00EN2gs19PropertyAutoAppBaseE"]], "gs::propertyautoappbase::inceval (c++ function)": [[73, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T"]], "gs::propertyautoappbase::peval (c++ function)": [[73, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T"]], "gs::propertyautoappbase::propertyautoappbase (c++ function)": [[73, "_CPPv4N2gs19PropertyAutoAppBase19PropertyAutoAppBaseEv"]], "gs::propertyautoappbase::load_strategy (c++ member)": [[73, "_CPPv4N2gs19PropertyAutoAppBase13load_strategyE"]], "gs::propertyautoappbase::message_strategy (c++ member)": [[73, "_CPPv4N2gs19PropertyAutoAppBase16message_strategyE"]], "gs::propertyautoappbase::need_split_edges (c++ member)": [[73, "_CPPv4N2gs19PropertyAutoAppBase16need_split_edgesE"]], "gs::propertyautoappbase::~propertyautoappbase (c++ function)": [[73, "_CPPv4N2gs19PropertyAutoAppBaseD0Ev"]], "gs::propertyautoworker (c++ class)": [[73, "_CPPv4I0EN2gs18PropertyAutoWorkerE"]], "gs::propertyautoworker::finalize (c++ function)": [[73, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv"]], "gs::propertyautoworker::getcontext (c++ function)": [[73, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv"]], "gs::propertyautoworker::init (c++ function)": [[73, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::propertyautoworker::output (c++ function)": [[73, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE"]], "gs::propertyautoworker::propertyautoworker (c++ function)": [[73, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::propertyautoworker::query (c++ function)": [[73, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args"]], "gs::propertyautoworker::context_t (c++ type)": [[73, "_CPPv4N2gs18PropertyAutoWorker9context_tE"]], "gs::propertyautoworker::fragment_t (c++ type)": [[73, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE"]], "gs::propertyautoworker::message_manager_t (c++ type)": [[73, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE"]], "gs::propertyautoworker::~propertyautoworker (c++ function)": [[73, "_CPPv4N2gs18PropertyAutoWorkerD0Ev"]], "gs::tensorcontext (c++ class)": [[73, "_CPPv4I00EN2gs13TensorContextE"]], "gs::tensorcontext::tensorcontext (c++ function)": [[73, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t"]], "gs::tensorcontext::assign (c++ function)": [[73, "_CPPv4N2gs13TensorContext6assignERK6data_t"], [73, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE"]], "gs::tensorcontext::data_t (c++ type)": [[73, "_CPPv4N2gs13TensorContext6data_tE"]], "gs::tensorcontext::fragment (c++ function)": [[73, "_CPPv4N2gs13TensorContext8fragmentEv"]], "gs::tensorcontext::set_shape (c++ function)": [[73, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE"]], "gs::tensorcontext::shape (c++ function)": [[73, "_CPPv4NK2gs13TensorContext5shapeEv"]], "gs::tensorcontext::tensor (c++ function)": [[73, "_CPPv4N2gs13TensorContext6tensorEv"]], "gs::tensorcontextwrapper (c++ class)": [[73, "_CPPv4I000EN2gs20TensorContextWrapperE"]], "gs::tensorcontextwrapper::tensorcontextwrapper (c++ function)": [[73, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE"]], "gs::tensorcontextwrapper::toarrowarrays (c++ function)": [[73, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE"]], "gs::tensorcontextwrapper::todataframe (c++ function)": [[73, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE"]], "gs::tensorcontextwrapper::tondarray (c++ function)": [[73, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t"]], "gs::tensorcontextwrapper::tovineyarddataframe (c++ function)": [[73, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE"]], "gs::tensorcontextwrapper::tovineyardtensor (c++ function)": [[73, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t"]], "gs::tensorcontextwrapper::context_type (c++ function)": [[73, "_CPPv4N2gs20TensorContextWrapper12context_typeEv"]], "gs::tensorcontextwrapper::fragment_wrapper (c++ function)": [[73, "_CPPv4N2gs20TensorContextWrapper16fragment_wrapperEv"]], "gs::vertexdatacontextwrapper (c++ class)": [[73, "_CPPv4I00EN2gs24VertexDataContextWrapperE"]], "gs::vertexdatacontextwrapper::toarrowarrays (c++ function)": [[73, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE"]], "gs::vertexdatacontextwrapper::todataframe (c++ function)": [[73, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tondarray (c++ function)": [[73, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tovineyarddataframe (c++ function)": [[73, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tovineyardtensor (c++ function)": [[73, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::vertexdatacontextwrapper (c++ function)": [[73, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE"]], "gs::vertexdatacontextwrapper::context_type (c++ function)": [[73, "_CPPv4N2gs24VertexDataContextWrapper12context_typeEv"]], "gs::vertexdatacontextwrapper::fragment_wrapper (c++ function)": [[73, "_CPPv4N2gs24VertexDataContextWrapper16fragment_wrapperEv"]], "gs::vertexpropertycontext (c++ class)": [[73, "_CPPv4I0EN2gs21VertexPropertyContextE"]], "gs::vertexpropertycontext::vertexpropertycontext (c++ function)": [[73, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t"]], "gs::vertexpropertycontext::add_column (c++ function)": [[73, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType"]], "gs::vertexpropertycontext::fragment (c++ function)": [[73, "_CPPv4N2gs21VertexPropertyContext8fragmentEv"]], "gs::vertexpropertycontext::fragment_t (c++ type)": [[73, "_CPPv4N2gs21VertexPropertyContext10fragment_tE"]], "gs::vertexpropertycontext::get_column (c++ function)": [[73, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t"], [73, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE"]], "gs::vertexpropertycontext::get_typed_column (c++ function)": [[73, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t"], [73, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE"]], "gs::vertexpropertycontext::oid_t (c++ type)": [[73, "_CPPv4N2gs21VertexPropertyContext5oid_tE"]], "gs::vertexpropertycontext::prop_id_t (c++ type)": [[73, "_CPPv4N2gs21VertexPropertyContext9prop_id_tE"]], "gs::vertexpropertycontext::properties_map (c++ function)": [[73, "_CPPv4N2gs21VertexPropertyContext14properties_mapEv"]], "gs::vertexpropertycontext::vertex_properties (c++ function)": [[73, "_CPPv4N2gs21VertexPropertyContext17vertex_propertiesEv"]], "gs::vertexpropertycontext::vertex_t (c++ type)": [[73, "_CPPv4N2gs21VertexPropertyContext8vertex_tE"]], "gs::rpc::analyticalserver (c++ class)": [[73, "_CPPv4N2gs3rpc16AnalyticalServerE"]], "gs::rpc::analyticalserver::analyticalserver (c++ function)": [[73, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi"]], "gs::rpc::analyticalserver::startserver (c++ function)": [[73, "_CPPv4N2gs3rpc16AnalyticalServer11StartServerEv"]], "gs::rpc::analyticalserver::stopserver (c++ function)": [[73, "_CPPv4N2gs3rpc16AnalyticalServer10StopServerEv"]], "app (class in graphscope.framework.app)": [[74, "graphscope.framework.app.App"]], "appassets (class in graphscope.framework.app)": [[74, "graphscope.framework.app.AppAssets"]], "appdagnode (class in graphscope.framework.app)": [[74, "graphscope.framework.app.AppDAGNode"]], "javaapp (class in graphscope.analytical.app)": [[74, "graphscope.analytical.app.JavaApp"]], "__call__() (graphscope.analytical.app.javaapp method)": [[74, "graphscope.analytical.app.JavaApp.__call__"]], "__del__() (graphscope.framework.app.app method)": [[74, "graphscope.framework.app.App.__del__"]], "__init__() (graphscope.analytical.app.javaapp method)": [[74, "graphscope.analytical.app.JavaApp.__init__"]], "__init__() (graphscope.framework.app.app method)": [[74, "graphscope.framework.app.App.__init__"]], "__init__() (graphscope.framework.app.appassets method)": [[74, "graphscope.framework.app.AppAssets.__init__"]], "algo (graphscope.framework.app.appassets property)": [[74, "graphscope.framework.app.AppAssets.algo"]], "attribute_assortativity_coefficient() (in module graphscope)": [[74, "graphscope.attribute_assortativity_coefficient"]], "average_degree_connectivity() (in module graphscope)": [[74, "graphscope.average_degree_connectivity"]], "average_shortest_path_length() (in module graphscope)": [[74, "graphscope.average_shortest_path_length"]], "avg_clustering() (in module graphscope)": [[74, "graphscope.avg_clustering"]], "bfs() (in module graphscope)": [[74, "graphscope.bfs"]], "cdlp() (in module graphscope)": [[74, "graphscope.cdlp"]], "clustering() (in module graphscope)": [[74, "graphscope.clustering"]], "context_type (graphscope.framework.app.appassets property)": [[74, "graphscope.framework.app.AppAssets.context_type"]], "degree_assortativity_coefficient() (in module graphscope)": [[74, "graphscope.degree_assortativity_coefficient"]], "degree_centrality() (in module graphscope)": [[74, "graphscope.degree_centrality"]], "eigenvector_centrality() (in module graphscope)": [[74, "graphscope.eigenvector_centrality"]], "gar (graphscope.framework.app.appassets property)": [[74, "graphscope.framework.app.AppAssets.gar"]], "hits() (in module graphscope)": [[74, "graphscope.hits"]], "is_compatible() (graphscope.analytical.app.javaapp method)": [[74, "graphscope.analytical.app.JavaApp.is_compatible"]], "is_compatible() (graphscope.framework.app.appassets method)": [[74, "graphscope.framework.app.AppAssets.is_compatible"]], "is_simple_path() (in module graphscope)": [[74, "graphscope.is_simple_path"]], "k_core() (in module graphscope)": [[74, "graphscope.k_core"]], "k_shell() (in module graphscope)": [[74, "graphscope.k_shell"]], "katz_centrality() (in module graphscope)": [[74, "graphscope.katz_centrality"]], "key (graphscope.framework.app.app property)": [[74, "graphscope.framework.app.App.key"]], "louvain() (in module graphscope)": [[74, "graphscope.louvain"]], "lpa() (in module graphscope)": [[74, "graphscope.lpa"]], "lpa_u2i() (in module graphscope)": [[74, "graphscope.lpa_u2i"]], "numeric_assortativity_coefficient() (in module graphscope)": [[74, "graphscope.numeric_assortativity_coefficient"]], "pagerank() (in module graphscope)": [[74, "graphscope.pagerank"]], "pagerank_nx() (in module graphscope)": [[74, "graphscope.pagerank_nx"]], "signature (graphscope.framework.app.app property)": [[74, "graphscope.framework.app.App.signature"]], "signature (graphscope.framework.app.appassets property)": [[74, "graphscope.framework.app.AppAssets.signature"]], "signature() (graphscope.analytical.app.javaapp method)": [[74, "graphscope.analytical.app.JavaApp.signature"]], "sssp() (in module graphscope)": [[74, "graphscope.sssp"]], "triangles() (in module graphscope)": [[74, "graphscope.triangles"]], "type (graphscope.framework.app.appassets property)": [[74, "graphscope.framework.app.AppAssets.type"]], "voterank() (in module graphscope)": [[74, "graphscope.voterank"]], "wcc() (in module graphscope)": [[74, "graphscope.wcc"]], "basecontextdagnode (class in graphscope.framework.context)": [[75, "graphscope.framework.context.BaseContextDAGNode"]], "context (class in graphscope.framework.context)": [[75, "graphscope.framework.context.Context"]], "dynamicvertexdatacontext (class in graphscope.framework.context)": [[75, "graphscope.framework.context.DynamicVertexDataContext"]], "labeledvertexdatacontextdagnode (class in graphscope.framework.context)": [[75, "graphscope.framework.context.LabeledVertexDataContextDAGNode"]], "labeledvertexpropertycontextdagnode (class in graphscope.framework.context)": [[75, "graphscope.framework.context.LabeledVertexPropertyContextDAGNode"]], "resultdagnode (class in graphscope.framework.context)": [[75, "graphscope.framework.context.ResultDAGNode"]], "tensorcontextdagnode (class in graphscope.framework.context)": [[75, "graphscope.framework.context.TensorContextDAGNode"]], "vertexdatacontextdagnode (class in graphscope.framework.context)": [[75, "graphscope.framework.context.VertexDataContextDAGNode"]], "vertexpropertycontextdagnode (class in graphscope.framework.context)": [[75, "graphscope.framework.context.VertexPropertyContextDAGNode"]], "to_dataframe() (graphscope.framework.context.basecontextdagnode method)": [[75, "graphscope.framework.context.BaseContextDAGNode.to_dataframe"]], "to_numpy() (graphscope.framework.context.basecontextdagnode method)": [[75, "graphscope.framework.context.BaseContextDAGNode.to_numpy"]], "to_vineyard_dataframe() (graphscope.framework.context.basecontextdagnode method)": [[75, "graphscope.framework.context.BaseContextDAGNode.to_vineyard_dataframe"]], "to_vineyard_tensor() (graphscope.framework.context.basecontextdagnode method)": [[75, "graphscope.framework.context.BaseContextDAGNode.to_vineyard_tensor"]], "vertex (in module graphscope)": [[79, "graphscope.Vertex"]], "declare() (in module graphscope)": [[80, "graphscope.declare"]], "load_app() (in module graphscope.framework.app)": [[81, "graphscope.framework.app.load_app"]], "add_column() (in module graphscope.framework.dag_utils)": [[82, "graphscope.framework.dag_utils.add_column"]], "add_labels_to_graph() (in module graphscope.framework.dag_utils)": [[83, "graphscope.framework.dag_utils.add_labels_to_graph"]], "arrow_to_dynamic() (in module graphscope.framework.dag_utils)": [[84, "graphscope.framework.dag_utils.arrow_to_dynamic"]], "bind_app() (in module graphscope.framework.dag_utils)": [[85, "graphscope.framework.dag_utils.bind_app"]], "clear_edges() (in module graphscope.framework.dag_utils)": [[86, "graphscope.framework.dag_utils.clear_edges"]], "clear_graph() (in module graphscope.framework.dag_utils)": [[87, "graphscope.framework.dag_utils.clear_graph"]], "context_to_dataframe() (in module graphscope.framework.dag_utils)": [[88, "graphscope.framework.dag_utils.context_to_dataframe"]], "context_to_numpy() (in module graphscope.framework.dag_utils)": [[89, "graphscope.framework.dag_utils.context_to_numpy"]], "copy_graph() (in module graphscope.framework.dag_utils)": [[90, "graphscope.framework.dag_utils.copy_graph"]], "create_app() (in module graphscope.framework.dag_utils)": [[91, "graphscope.framework.dag_utils.create_app"]], "create_graph() (in module graphscope.framework.dag_utils)": [[92, "graphscope.framework.dag_utils.create_graph"]], "create_graph_view() (in module graphscope.framework.dag_utils)": [[93, "graphscope.framework.dag_utils.create_graph_view"]], "create_loader() (in module graphscope.framework.dag_utils)": [[94, "graphscope.framework.dag_utils.create_loader"]], "create_subgraph() (in module graphscope.framework.dag_utils)": [[95, "graphscope.framework.dag_utils.create_subgraph"]], "create_unload_op() (in module graphscope.framework.dag_utils)": [[96, "graphscope.framework.dag_utils.create_unload_op"]], "dynamic_to_arrow() (in module graphscope.framework.dag_utils)": [[97, "graphscope.framework.dag_utils.dynamic_to_arrow"]], "fetch_gremlin_result() (in module graphscope.framework.dag_utils)": [[98, "graphscope.framework.dag_utils.fetch_gremlin_result"]], "get_context_data() (in module graphscope.framework.dag_utils)": [[99, "graphscope.framework.dag_utils.get_context_data"]], "graph_to_dataframe() (in module graphscope.framework.dag_utils)": [[100, "graphscope.framework.dag_utils.graph_to_dataframe"]], "graph_to_numpy() (in module graphscope.framework.dag_utils)": [[101, "graphscope.framework.dag_utils.graph_to_numpy"]], "gremlin_query() (in module graphscope.framework.dag_utils)": [[102, "graphscope.framework.dag_utils.gremlin_query"]], "gremlin_to_subgraph() (in module graphscope.framework.dag_utils)": [[103, "graphscope.framework.dag_utils.gremlin_to_subgraph"]], "modify_edges() (in module graphscope.framework.dag_utils)": [[104, "graphscope.framework.dag_utils.modify_edges"]], "modify_vertices() (in module graphscope.framework.dag_utils)": [[105, "graphscope.framework.dag_utils.modify_vertices"]], "output() (in module graphscope.framework.dag_utils)": [[106, "graphscope.framework.dag_utils.output"]], "project_arrow_property_graph() (in module graphscope.framework.dag_utils)": [[107, "graphscope.framework.dag_utils.project_arrow_property_graph"]], "project_to_simple() (in module graphscope.framework.dag_utils)": [[108, "graphscope.framework.dag_utils.project_to_simple"]], "report_graph() (in module graphscope.framework.dag_utils)": [[109, "graphscope.framework.dag_utils.report_graph"]], "run_app() (in module graphscope.framework.dag_utils)": [[110, "graphscope.framework.dag_utils.run_app"]], "to_data_sink() (in module graphscope.framework.dag_utils)": [[111, "graphscope.framework.dag_utils.to_data_sink"]], "to_directed() (in module graphscope.framework.dag_utils)": [[112, "graphscope.framework.dag_utils.to_directed"]], "to_undirected() (in module graphscope.framework.dag_utils)": [[113, "graphscope.framework.dag_utils.to_undirected"]], "to_vineyard_dataframe() (in module graphscope.framework.dag_utils)": [[114, "graphscope.framework.dag_utils.to_vineyard_dataframe"]], "to_vineyard_tensor() (in module graphscope.framework.dag_utils)": [[115, "graphscope.framework.dag_utils.to_vineyard_tensor"]], "unload_app() (in module graphscope.framework.dag_utils)": [[116, "graphscope.framework.dag_utils.unload_app"]], "unload_context() (in module graphscope.framework.dag_utils)": [[117, "graphscope.framework.dag_utils.unload_context"]], "unload_graph() (in module graphscope.framework.dag_utils)": [[118, "graphscope.framework.dag_utils.unload_graph"]], "__init__() (graphscope.framework.operation.operation method)": [[119, "graphscope.framework.operation.Operation.__init__"]], "as_op_def() (graphscope.framework.operation.operation method)": [[120, "graphscope.framework.operation.Operation.as_op_def"]], "eval() (graphscope.framework.operation.operation method)": [[121, "graphscope.framework.operation.Operation.eval"]], "evaluated (graphscope.framework.operation.operation property)": [[122, "graphscope.framework.operation.Operation.evaluated"]], "key (graphscope.framework.operation.operation property)": [[123, "graphscope.framework.operation.Operation.key"]], "signature (graphscope.framework.operation.operation property)": [[124, "graphscope.framework.operation.Operation.signature"]], "g() (in module graphscope)": [[125, "graphscope.g"]], "get_default_session() (in module graphscope)": [[126, "graphscope.get_default_session"]], "get_option() (in module graphscope)": [[127, "graphscope.get_option"]], "graphlearn() (in module graphscope)": [[128, "graphscope.graphlearn"]], "gremlin() (in module graphscope)": [[129, "graphscope.gremlin"]], "has_default_session() (in module graphscope)": [[130, "graphscope.has_default_session"]], "session (in module graphscope)": [[131, "graphscope.session"]], "set_option() (in module graphscope)": [[132, "graphscope.set_option"]], "graph (class in graphscope.framework.graph)": [[147, "graphscope.framework.graph.Graph"]], "graphdagnode (class in graphscope.framework.graph)": [[147, "graphscope.framework.graph.GraphDAGNode"]], "loader (class in graphscope.framework.loader)": [[147, "graphscope.framework.loader.Loader"]], "__init__() (graphscope.framework.graph.graph method)": [[147, "graphscope.framework.graph.Graph.__init__"]], "__init__() (graphscope.framework.graph.graphdagnode method)": [[147, "graphscope.framework.graph.GraphDAGNode.__init__"]], "__init__() (graphscope.framework.loader.loader method)": [[147, "graphscope.framework.loader.Loader.__init__"]], "add_column() (graphscope.framework.graph.graphdagnode method)": [[147, "graphscope.framework.graph.GraphDAGNode.add_column"]], "add_edges() (graphscope.framework.graph.graphdagnode method)": [[147, "graphscope.framework.graph.GraphDAGNode.add_edges"]], "add_vertices() (graphscope.framework.graph.graphdagnode method)": [[147, "graphscope.framework.graph.GraphDAGNode.add_vertices"]], "detach() (graphscope.framework.graph.graph method)": [[147, "graphscope.framework.graph.Graph.detach"]], "key (graphscope.framework.graph.graph property)": [[147, "graphscope.framework.graph.Graph.key"]], "load_from() (graphscope.framework.graph.graph class method)": [[147, "graphscope.framework.graph.Graph.load_from"]], "load_from() (in module graphscope.framework.graph_builder)": [[147, "graphscope.framework.graph_builder.load_from"]], "loaded() (graphscope.framework.graph.graph method)": [[147, "graphscope.framework.graph.Graph.loaded"]], "project() (graphscope.framework.graph.graphdagnode method)": [[147, "graphscope.framework.graph.GraphDAGNode.project"]], "save_to() (graphscope.framework.graph.graph method)": [[147, "graphscope.framework.graph.Graph.save_to"]], "schema (graphscope.framework.graph.graph property)": [[147, "graphscope.framework.graph.Graph.schema"]], "schema_path (graphscope.framework.graph.graph property)": [[147, "graphscope.framework.graph.Graph.schema_path"]], "session_id (graphscope.framework.graph.graph property)": [[147, "graphscope.framework.graph.Graph.session_id"]], "to_dataframe() (graphscope.framework.graph.graph method)": [[147, "graphscope.framework.graph.Graph.to_dataframe"]], "to_directed() (graphscope.framework.graph.graph method)": [[147, "graphscope.framework.graph.Graph.to_directed"]], "to_numpy() (graphscope.framework.graph.graph method)": [[147, "graphscope.framework.graph.Graph.to_numpy"]], "to_undirected() (graphscope.framework.graph.graph method)": [[147, "graphscope.framework.graph.Graph.to_undirected"]], "vineyard_id (graphscope.framework.graph.graph property)": [[147, "graphscope.framework.graph.Graph.vineyard_id"]], "interactivequery (class in graphscope.interactive.query)": [[148, "graphscope.interactive.query.InteractiveQuery"]], "__init__() (graphscope.interactive.query.interactivequery method)": [[148, "graphscope.interactive.query.InteractiveQuery.__init__"]], "close() (graphscope.interactive.query.interactivequery method)": [[148, "graphscope.interactive.query.InteractiveQuery.close"]], "execute() (graphscope.interactive.query.interactivequery method)": [[148, "graphscope.interactive.query.InteractiveQuery.execute"]], "graph_url (graphscope.interactive.query.interactivequery property)": [[148, "graphscope.interactive.query.InteractiveQuery.graph_url"]], "object_id (graphscope.interactive.query.interactivequery property)": [[148, "graphscope.interactive.query.InteractiveQuery.object_id"]], "session (graphscope.interactive.query.interactivequery property)": [[148, "graphscope.interactive.query.InteractiveQuery.session"]], "session_id (graphscope.interactive.query.interactivequery property)": [[148, "graphscope.interactive.query.InteractiveQuery.session_id"]], "subgraph() (graphscope.interactive.query.interactivequery method)": [[148, "graphscope.interactive.query.InteractiveQuery.subgraph"]], "submit() (graphscope.interactive.query.interactivequery method)": [[148, "graphscope.interactive.query.InteractiveQuery.submit"]], "traversal_source() (graphscope.interactive.query.interactivequery method)": [[148, "graphscope.interactive.query.InteractiveQuery.traversal_source"]], "e() (graphscope.learning.graph.graph method)": [[149, "graphscope.learning.graph.Graph.E"]], "graph (class in graphscope.learning.graph)": [[149, "graphscope.learning.graph.Graph"]], "v() (graphscope.learning.graph.graph method)": [[149, "graphscope.learning.graph.Graph.V"]], "__init__() (graphscope.learning.graph.graph method)": [[149, "graphscope.learning.graph.Graph.__init__"]], "get_handle() (graphscope.learning.graph.graph method)": [[149, "graphscope.learning.graph.Graph.get_handle"]], "average_clustering() (in module graphscope.nx.builtin)": [[150, "graphscope.nx.builtin.average_clustering"]], "average_shortest_path_length() (in module graphscope.nx.builtin)": [[150, "graphscope.nx.builtin.average_shortest_path_length"]], "bfs_edges() (in module graphscope.nx.builtin)": [[150, "graphscope.nx.builtin.bfs_edges"]], "clustering() (in module graphscope.nx.builtin)": [[150, "graphscope.nx.builtin.clustering"]], "degree_centrality() (in module graphscope.nx.builtin)": [[150, "graphscope.nx.builtin.degree_centrality"]], "eigenvector_centrality() (in module graphscope.nx.builtin)": [[150, "graphscope.nx.builtin.eigenvector_centrality"]], "has_path() (in module graphscope.nx.builtin)": [[150, "graphscope.nx.builtin.has_path"]], "hits() (in module graphscope.nx.builtin)": [[150, "graphscope.nx.builtin.hits"]], "in_degree_centrality() (in module graphscope.nx.builtin)": [[150, "graphscope.nx.builtin.in_degree_centrality"]], "k_core() (in module graphscope.nx.builtin)": [[150, "graphscope.nx.builtin.k_core"]], "katz_centrality() (in module graphscope.nx.builtin)": [[150, "graphscope.nx.builtin.katz_centrality"]], "out_degree_centrality() (in module graphscope.nx.builtin)": [[150, "graphscope.nx.builtin.out_degree_centrality"]], "triangles() (in module graphscope.nx.builtin)": [[150, "graphscope.nx.builtin.triangles"]], "graphscope.nx.classes.function": [[151, "module-graphscope.nx.classes.function"]], "module": [[151, "module-graphscope.nx.classes.function"], [284, "module-graphscope.nx.generators.atlas"], [284, "module-graphscope.nx.generators.classic"], [284, "module-graphscope.nx.generators.community"], [284, "module-graphscope.nx.generators.degree_seq"], [284, "module-graphscope.nx.generators.directed"], [284, "module-graphscope.nx.generators.duplication"], [284, "module-graphscope.nx.generators.ego"], [284, "module-graphscope.nx.generators.expanders"], [284, "module-graphscope.nx.generators.geometric"], [284, "module-graphscope.nx.generators.harary_graph"], [284, "module-graphscope.nx.generators.intersection"], [284, "module-graphscope.nx.generators.joint_degree_seq"], [284, "module-graphscope.nx.generators.mycielski"], [284, "module-graphscope.nx.generators.nonisomorphic_trees"], [284, "module-graphscope.nx.generators.small"], [284, "module-graphscope.nx.generators.social"], [284, "module-graphscope.nx.generators.spectral_graph_forge"], [284, "module-graphscope.nx.generators.sudoku"], [284, "module-graphscope.nx.generators.trees"], [284, "module-graphscope.nx.generators.triads"], [284, "module-networkx.generators.internet_as_graphs"], [284, "module-networkx.generators.stochastic"], [289, "module-graphscope.framework.dag_utils"]], "add_cycle() (in module graphscope.nx.classes.function)": [[152, "graphscope.nx.classes.function.add_cycle"]], "add_path() (in module graphscope.nx.classes.function)": [[153, "graphscope.nx.classes.function.add_path"]], "add_star() (in module graphscope.nx.classes.function)": [[154, "graphscope.nx.classes.function.add_star"]], "all_neighbors() (in module graphscope.nx.classes.function)": [[155, "graphscope.nx.classes.function.all_neighbors"]], "common_neighbors() (in module graphscope.nx.classes.function)": [[156, "graphscope.nx.classes.function.common_neighbors"]], "create_empty_copy() (in module graphscope.nx.classes.function)": [[157, "graphscope.nx.classes.function.create_empty_copy"]], "degree() (in module graphscope.nx.classes.function)": [[158, "graphscope.nx.classes.function.degree"]], "degree_histogram() (in module graphscope.nx.classes.function)": [[159, "graphscope.nx.classes.function.degree_histogram"]], "density() (in module graphscope.nx.classes.function)": [[160, "graphscope.nx.classes.function.density"]], "edge_subgraph() (in module graphscope.nx.classes.function)": [[161, "graphscope.nx.classes.function.edge_subgraph"]], "edges() (in module graphscope.nx.classes.function)": [[162, "graphscope.nx.classes.function.edges"]], "freeze() (in module graphscope.nx.classes.function)": [[163, "graphscope.nx.classes.function.freeze"]], "induced_subgraph() (in module graphscope.nx.classes.function)": [[164, "graphscope.nx.classes.function.induced_subgraph"]], "info() (in module graphscope.nx.classes.function)": [[165, "graphscope.nx.classes.function.info"]], "is_directed() (in module graphscope.nx.classes.function)": [[166, "graphscope.nx.classes.function.is_directed"]], "is_empty() (in module graphscope.nx.classes.function)": [[167, "graphscope.nx.classes.function.is_empty"]], "is_frozen() (in module graphscope.nx.classes.function)": [[168, "graphscope.nx.classes.function.is_frozen"]], "is_negatively_weighted() (in module graphscope.nx.classes.function)": [[169, "graphscope.nx.classes.function.is_negatively_weighted"]], "is_weighted() (in module graphscope.nx.classes.function)": [[170, "graphscope.nx.classes.function.is_weighted"]], "neighbors() (in module graphscope.nx.classes.function)": [[171, "graphscope.nx.classes.function.neighbors"]], "nodes() (in module graphscope.nx.classes.function)": [[172, "graphscope.nx.classes.function.nodes"]], "nodes_with_selfloops() (in module graphscope.nx.classes.function)": [[173, "graphscope.nx.classes.function.nodes_with_selfloops"]], "non_edges() (in module graphscope.nx.classes.function)": [[174, "graphscope.nx.classes.function.non_edges"]], "non_neighbors() (in module graphscope.nx.classes.function)": [[175, "graphscope.nx.classes.function.non_neighbors"]], "number_of_edges() (in module graphscope.nx.classes.function)": [[176, "graphscope.nx.classes.function.number_of_edges"]], "number_of_nodes() (in module graphscope.nx.classes.function)": [[177, "graphscope.nx.classes.function.number_of_nodes"]], "number_of_selfloops() (in module graphscope.nx.classes.function)": [[178, "graphscope.nx.classes.function.number_of_selfloops"]], "selfloop_edges() (in module graphscope.nx.classes.function)": [[179, "graphscope.nx.classes.function.selfloop_edges"]], "subgraph() (in module graphscope.nx.classes.function)": [[180, "graphscope.nx.classes.function.subgraph"]], "to_directed() (in module graphscope.nx.classes.function)": [[181, "graphscope.nx.classes.function.to_directed"]], "to_undirected() (in module graphscope.nx.classes.function)": [[182, "graphscope.nx.classes.function.to_undirected"]], "graph_atlas() (in module graphscope.nx.generators.atlas)": [[183, "graphscope.nx.generators.atlas.graph_atlas"]], "graph_atlas_g() (in module graphscope.nx.generators.atlas)": [[184, "graphscope.nx.generators.atlas.graph_atlas_g"]], "balanced_tree() (in module graphscope.nx.generators.classic)": [[185, "graphscope.nx.generators.classic.balanced_tree"]], "barbell_graph() (in module graphscope.nx.generators.classic)": [[186, "graphscope.nx.generators.classic.barbell_graph"]], "binomial_tree() (in module graphscope.nx.generators.classic)": [[187, "graphscope.nx.generators.classic.binomial_tree"]], "circulant_graph() (in module graphscope.nx.generators.classic)": [[188, "graphscope.nx.generators.classic.circulant_graph"]], "circular_ladder_graph() (in module graphscope.nx.generators.classic)": [[189, "graphscope.nx.generators.classic.circular_ladder_graph"]], "complete_graph() (in module graphscope.nx.generators.classic)": [[190, "graphscope.nx.generators.classic.complete_graph"]], "complete_multipartite_graph() (in module graphscope.nx.generators.classic)": [[191, "graphscope.nx.generators.classic.complete_multipartite_graph"]], "cycle_graph() (in module graphscope.nx.generators.classic)": [[192, "graphscope.nx.generators.classic.cycle_graph"]], "dorogovtsev_goltsev_mendes_graph() (in module graphscope.nx.generators.classic)": [[193, "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph"]], "empty_graph() (in module graphscope.nx.generators.classic)": [[194, "graphscope.nx.generators.classic.empty_graph"]], "full_rary_tree() (in module graphscope.nx.generators.classic)": [[195, "graphscope.nx.generators.classic.full_rary_tree"]], "ladder_graph() (in module graphscope.nx.generators.classic)": [[196, "graphscope.nx.generators.classic.ladder_graph"]], "lollipop_graph() (in module graphscope.nx.generators.classic)": [[197, "graphscope.nx.generators.classic.lollipop_graph"]], "null_graph() (in module graphscope.nx.generators.classic)": [[198, "graphscope.nx.generators.classic.null_graph"]], "path_graph() (in module graphscope.nx.generators.classic)": [[199, "graphscope.nx.generators.classic.path_graph"]], "star_graph() (in module graphscope.nx.generators.classic)": [[200, "graphscope.nx.generators.classic.star_graph"]], "trivial_graph() (in module graphscope.nx.generators.classic)": [[201, "graphscope.nx.generators.classic.trivial_graph"]], "turan_graph() (in module graphscope.nx.generators.classic)": [[202, "graphscope.nx.generators.classic.turan_graph"]], "wheel_graph() (in module graphscope.nx.generators.classic)": [[203, "graphscope.nx.generators.classic.wheel_graph"]], "lfr_benchmark_graph() (in module graphscope.nx.generators.community)": [[204, "graphscope.nx.generators.community.LFR_benchmark_graph"]], "caveman_graph() (in module graphscope.nx.generators.community)": [[205, "graphscope.nx.generators.community.caveman_graph"]], "connected_caveman_graph() (in module graphscope.nx.generators.community)": [[206, "graphscope.nx.generators.community.connected_caveman_graph"]], "gaussian_random_partition_graph() (in module graphscope.nx.generators.community)": [[207, "graphscope.nx.generators.community.gaussian_random_partition_graph"]], "planted_partition_graph() (in module graphscope.nx.generators.community)": [[208, "graphscope.nx.generators.community.planted_partition_graph"]], "random_partition_graph() (in module graphscope.nx.generators.community)": [[209, "graphscope.nx.generators.community.random_partition_graph"]], "relaxed_caveman_graph() (in module graphscope.nx.generators.community)": [[210, "graphscope.nx.generators.community.relaxed_caveman_graph"]], "ring_of_cliques() (in module graphscope.nx.generators.community)": [[211, "graphscope.nx.generators.community.ring_of_cliques"]], "stochastic_block_model() (in module graphscope.nx.generators.community)": [[212, "graphscope.nx.generators.community.stochastic_block_model"]], "windmill_graph() (in module graphscope.nx.generators.community)": [[213, "graphscope.nx.generators.community.windmill_graph"]], "configuration_model() (in module graphscope.nx.generators.degree_seq)": [[214, "graphscope.nx.generators.degree_seq.configuration_model"]], "degree_sequence_tree() (in module graphscope.nx.generators.degree_seq)": [[215, "graphscope.nx.generators.degree_seq.degree_sequence_tree"]], "directed_configuration_model() (in module graphscope.nx.generators.degree_seq)": [[216, "graphscope.nx.generators.degree_seq.directed_configuration_model"]], "directed_havel_hakimi_graph() (in module graphscope.nx.generators.degree_seq)": [[217, "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph"]], "expected_degree_graph() (in module graphscope.nx.generators.degree_seq)": [[218, "graphscope.nx.generators.degree_seq.expected_degree_graph"]], "havel_hakimi_graph() (in module graphscope.nx.generators.degree_seq)": [[219, "graphscope.nx.generators.degree_seq.havel_hakimi_graph"]], "random_degree_sequence_graph() (in module graphscope.nx.generators.degree_seq)": [[220, "graphscope.nx.generators.degree_seq.random_degree_sequence_graph"]], "gn_graph() (in module graphscope.nx.generators.directed)": [[221, "graphscope.nx.generators.directed.gn_graph"]], "gnc_graph() (in module graphscope.nx.generators.directed)": [[222, "graphscope.nx.generators.directed.gnc_graph"]], "gnr_graph() (in module graphscope.nx.generators.directed)": [[223, "graphscope.nx.generators.directed.gnr_graph"]], "random_k_out_graph() (in module graphscope.nx.generators.directed)": [[224, "graphscope.nx.generators.directed.random_k_out_graph"]], "scale_free_graph() (in module graphscope.nx.generators.directed)": [[225, "graphscope.nx.generators.directed.scale_free_graph"]], "duplication_divergence_graph() (in module graphscope.nx.generators.duplication)": [[226, "graphscope.nx.generators.duplication.duplication_divergence_graph"]], "partial_duplication_graph() (in module graphscope.nx.generators.duplication)": [[227, "graphscope.nx.generators.duplication.partial_duplication_graph"]], "ego_graph() (in module graphscope.nx.generators.ego)": [[228, "graphscope.nx.generators.ego.ego_graph"]], "chordal_cycle_graph() (in module graphscope.nx.generators.expanders)": [[229, "graphscope.nx.generators.expanders.chordal_cycle_graph"]], "margulis_gabber_galil_graph() (in module graphscope.nx.generators.expanders)": [[230, "graphscope.nx.generators.expanders.margulis_gabber_galil_graph"]], "paley_graph() (in module graphscope.nx.generators.expanders)": [[231, "graphscope.nx.generators.expanders.paley_graph"]], "geographical_threshold_graph() (in module graphscope.nx.generators.geometric)": [[232, "graphscope.nx.generators.geometric.geographical_threshold_graph"]], "random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[233, "graphscope.nx.generators.geometric.random_geometric_graph"]], "soft_random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[234, "graphscope.nx.generators.geometric.soft_random_geometric_graph"]], "thresholded_random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[235, "graphscope.nx.generators.geometric.thresholded_random_geometric_graph"]], "waxman_graph() (in module graphscope.nx.generators.geometric)": [[236, "graphscope.nx.generators.geometric.waxman_graph"]], "hkn_harary_graph() (in module graphscope.nx.generators.harary_graph)": [[237, "graphscope.nx.generators.harary_graph.hkn_harary_graph"]], "hnm_harary_graph() (in module graphscope.nx.generators.harary_graph)": [[238, "graphscope.nx.generators.harary_graph.hnm_harary_graph"]], "general_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[239, "graphscope.nx.generators.intersection.general_random_intersection_graph"]], "k_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[240, "graphscope.nx.generators.intersection.k_random_intersection_graph"]], "uniform_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[241, "graphscope.nx.generators.intersection.uniform_random_intersection_graph"]], "directed_joint_degree_graph() (in module graphscope.nx.generators.joint_degree_seq)": [[242, "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph"]], "is_valid_directed_joint_degree() (in module graphscope.nx.generators.joint_degree_seq)": [[243, "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree"]], "is_valid_joint_degree() (in module graphscope.nx.generators.joint_degree_seq)": [[244, "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree"]], "joint_degree_graph() (in module graphscope.nx.generators.joint_degree_seq)": [[245, "graphscope.nx.generators.joint_degree_seq.joint_degree_graph"]], "mycielski_graph() (in module graphscope.nx.generators.mycielski)": [[246, "graphscope.nx.generators.mycielski.mycielski_graph"]], "mycielskian() (in module graphscope.nx.generators.mycielski)": [[247, "graphscope.nx.generators.mycielski.mycielskian"]], "nonisomorphic_trees() (in module graphscope.nx.generators.nonisomorphic_trees)": [[248, "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees"]], "number_of_nonisomorphic_trees() (in module graphscope.nx.generators.nonisomorphic_trees)": [[249, "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees"]], "lcf_graph() (in module graphscope.nx.generators.small)": [[250, "graphscope.nx.generators.small.LCF_graph"]], "bull_graph() (in module graphscope.nx.generators.small)": [[251, "graphscope.nx.generators.small.bull_graph"]], "chvatal_graph() (in module graphscope.nx.generators.small)": [[252, "graphscope.nx.generators.small.chvatal_graph"]], "cubical_graph() (in module graphscope.nx.generators.small)": [[253, "graphscope.nx.generators.small.cubical_graph"]], "desargues_graph() (in module graphscope.nx.generators.small)": [[254, "graphscope.nx.generators.small.desargues_graph"]], "diamond_graph() (in module graphscope.nx.generators.small)": [[255, "graphscope.nx.generators.small.diamond_graph"]], "dodecahedral_graph() (in module graphscope.nx.generators.small)": [[256, "graphscope.nx.generators.small.dodecahedral_graph"]], "frucht_graph() (in module graphscope.nx.generators.small)": [[257, "graphscope.nx.generators.small.frucht_graph"]], "heawood_graph() (in module graphscope.nx.generators.small)": [[258, "graphscope.nx.generators.small.heawood_graph"]], "house_graph() (in module graphscope.nx.generators.small)": [[259, "graphscope.nx.generators.small.house_graph"]], "house_x_graph() (in module graphscope.nx.generators.small)": [[260, "graphscope.nx.generators.small.house_x_graph"]], "icosahedral_graph() (in module graphscope.nx.generators.small)": [[261, "graphscope.nx.generators.small.icosahedral_graph"]], "krackhardt_kite_graph() (in module graphscope.nx.generators.small)": [[262, "graphscope.nx.generators.small.krackhardt_kite_graph"]], "make_small_graph() (in module graphscope.nx.generators.small)": [[263, "graphscope.nx.generators.small.make_small_graph"]], "moebius_kantor_graph() (in module graphscope.nx.generators.small)": [[264, "graphscope.nx.generators.small.moebius_kantor_graph"]], "octahedral_graph() (in module graphscope.nx.generators.small)": [[265, "graphscope.nx.generators.small.octahedral_graph"]], "pappus_graph() (in module graphscope.nx.generators.small)": [[266, "graphscope.nx.generators.small.pappus_graph"]], "petersen_graph() (in module graphscope.nx.generators.small)": [[267, "graphscope.nx.generators.small.petersen_graph"]], "sedgewick_maze_graph() (in module graphscope.nx.generators.small)": [[268, "graphscope.nx.generators.small.sedgewick_maze_graph"]], "tetrahedral_graph() (in module graphscope.nx.generators.small)": [[269, "graphscope.nx.generators.small.tetrahedral_graph"]], "truncated_cube_graph() (in module graphscope.nx.generators.small)": [[270, "graphscope.nx.generators.small.truncated_cube_graph"]], "truncated_tetrahedron_graph() (in module graphscope.nx.generators.small)": [[271, "graphscope.nx.generators.small.truncated_tetrahedron_graph"]], "tutte_graph() (in module graphscope.nx.generators.small)": [[272, "graphscope.nx.generators.small.tutte_graph"]], "davis_southern_women_graph() (in module graphscope.nx.generators.social)": [[273, "graphscope.nx.generators.social.davis_southern_women_graph"]], "florentine_families_graph() (in module graphscope.nx.generators.social)": [[274, "graphscope.nx.generators.social.florentine_families_graph"]], "karate_club_graph() (in module graphscope.nx.generators.social)": [[275, "graphscope.nx.generators.social.karate_club_graph"]], "les_miserables_graph() (in module graphscope.nx.generators.social)": [[276, "graphscope.nx.generators.social.les_miserables_graph"]], "spectral_graph_forge() (in module graphscope.nx.generators.spectral_graph_forge)": [[277, "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge"]], "sudoku_graph() (in module graphscope.nx.generators.sudoku)": [[278, "graphscope.nx.generators.sudoku.sudoku_graph"]], "prefix_tree() (in module graphscope.nx.generators.trees)": [[279, "graphscope.nx.generators.trees.prefix_tree"]], "random_tree() (in module graphscope.nx.generators.trees)": [[280, "graphscope.nx.generators.trees.random_tree"]], "triad_graph() (in module graphscope.nx.generators.triads)": [[281, "graphscope.nx.generators.triads.triad_graph"]], "random_internet_as_graph() (in module networkx.generators.internet_as_graphs)": [[282, "networkx.generators.internet_as_graphs.random_internet_as_graph"]], "stochastic_graph() (in module networkx.generators.stochastic)": [[283, "networkx.generators.stochastic.stochastic_graph"]], "graphscope.nx.generators.atlas": [[284, "module-graphscope.nx.generators.atlas"]], "graphscope.nx.generators.classic": [[284, "module-graphscope.nx.generators.classic"]], "graphscope.nx.generators.community": [[284, "module-graphscope.nx.generators.community"]], "graphscope.nx.generators.degree_seq": [[284, "module-graphscope.nx.generators.degree_seq"]], "graphscope.nx.generators.directed": [[284, "module-graphscope.nx.generators.directed"]], "graphscope.nx.generators.duplication": [[284, "module-graphscope.nx.generators.duplication"]], "graphscope.nx.generators.ego": [[284, "module-graphscope.nx.generators.ego"]], "graphscope.nx.generators.expanders": [[284, "module-graphscope.nx.generators.expanders"]], "graphscope.nx.generators.geometric": [[284, "module-graphscope.nx.generators.geometric"]], "graphscope.nx.generators.harary_graph": [[284, "module-graphscope.nx.generators.harary_graph"]], "graphscope.nx.generators.intersection": [[284, "module-graphscope.nx.generators.intersection"]], "graphscope.nx.generators.joint_degree_seq": [[284, "module-graphscope.nx.generators.joint_degree_seq"]], "graphscope.nx.generators.mycielski": [[284, "module-graphscope.nx.generators.mycielski"]], "graphscope.nx.generators.nonisomorphic_trees": [[284, "module-graphscope.nx.generators.nonisomorphic_trees"]], "graphscope.nx.generators.small": [[284, "module-graphscope.nx.generators.small"]], "graphscope.nx.generators.social": [[284, "module-graphscope.nx.generators.social"]], "graphscope.nx.generators.spectral_graph_forge": [[284, "module-graphscope.nx.generators.spectral_graph_forge"]], "graphscope.nx.generators.sudoku": [[284, "module-graphscope.nx.generators.sudoku"]], "graphscope.nx.generators.trees": [[284, "module-graphscope.nx.generators.trees"]], "graphscope.nx.generators.triads": [[284, "module-graphscope.nx.generators.triads"]], "networkx.generators.internet_as_graphs": [[284, "module-networkx.generators.internet_as_graphs"]], "networkx.generators.stochastic": [[284, "module-networkx.generators.stochastic"]], "digraph (class in graphscope.nx)": [[285, "graphscope.nx.DiGraph"]], "graph (class in graphscope.nx)": [[285, "graphscope.nx.Graph"]], "__contains__() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.__contains__"]], "__contains__() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.__contains__"]], "__getitem__() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.__getitem__"]], "__getitem__() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.__getitem__"]], "__init__() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.__init__"]], "__init__() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.__init__"]], "__iter__() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.__iter__"]], "__iter__() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.__iter__"]], "__len__() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.__len__"]], "__len__() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.__len__"]], "add_edge() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.add_edge"]], "add_edge() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.add_edge"]], "add_edges_from() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.add_edges_from"]], "add_edges_from() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.add_edges_from"]], "add_node() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.add_node"]], "add_node() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.add_node"]], "add_nodes_from() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.add_nodes_from"]], "add_nodes_from() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.add_nodes_from"]], "add_weighted_edges_from() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.add_weighted_edges_from"]], "add_weighted_edges_from() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.add_weighted_edges_from"]], "adj (graphscope.nx.digraph property)": [[285, "graphscope.nx.DiGraph.adj"]], "adj (graphscope.nx.graph property)": [[285, "graphscope.nx.Graph.adj"]], "adjacency() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.adjacency"]], "adjacency() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.adjacency"]], "adjlist_inner_dict_factory (graphscope.nx.digraph attribute)": [[285, "graphscope.nx.DiGraph.adjlist_inner_dict_factory"]], "adjlist_inner_dict_factory (graphscope.nx.graph attribute)": [[285, "graphscope.nx.Graph.adjlist_inner_dict_factory"]], "adjlist_outer_dict_factory (graphscope.nx.digraph attribute)": [[285, "graphscope.nx.DiGraph.adjlist_outer_dict_factory"]], "adjlist_outer_dict_factory (graphscope.nx.graph attribute)": [[285, "graphscope.nx.Graph.adjlist_outer_dict_factory"]], "clear() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.clear"]], "clear() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.clear"]], "clear_edges() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.clear_edges"]], "clear_edges() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.clear_edges"]], "copy() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.copy"]], "copy() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.copy"]], "degree (graphscope.nx.digraph property)": [[285, "graphscope.nx.DiGraph.degree"]], "degree (graphscope.nx.graph property)": [[285, "graphscope.nx.Graph.degree"]], "edge_attr_dict_factory (graphscope.nx.digraph attribute)": [[285, "graphscope.nx.DiGraph.edge_attr_dict_factory"]], "edge_attr_dict_factory (graphscope.nx.graph attribute)": [[285, "graphscope.nx.Graph.edge_attr_dict_factory"]], "edge_subgraph() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.edge_subgraph"]], "edge_subgraph() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.edge_subgraph"]], "edges (graphscope.nx.digraph property)": [[285, "graphscope.nx.DiGraph.edges"]], "edges (graphscope.nx.graph property)": [[285, "graphscope.nx.Graph.edges"]], "get_edge_data() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.get_edge_data"]], "get_edge_data() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.get_edge_data"]], "graph_attr_dict_factory (graphscope.nx.digraph attribute)": [[285, "graphscope.nx.DiGraph.graph_attr_dict_factory"]], "graph_attr_dict_factory (graphscope.nx.graph attribute)": [[285, "graphscope.nx.Graph.graph_attr_dict_factory"]], "graph_cache_factory (graphscope.nx.digraph attribute)": [[285, "graphscope.nx.DiGraph.graph_cache_factory"]], "graph_cache_factory (graphscope.nx.graph attribute)": [[285, "graphscope.nx.Graph.graph_cache_factory"]], "graph_type (graphscope.nx.digraph property)": [[285, "graphscope.nx.DiGraph.graph_type"]], "graph_type (graphscope.nx.graph property)": [[285, "graphscope.nx.Graph.graph_type"]], "has_edge() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.has_edge"]], "has_edge() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.has_edge"]], "has_node() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.has_node"]], "has_node() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.has_node"]], "has_predecessor() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.has_predecessor"]], "has_successor() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.has_successor"]], "in_degree (graphscope.nx.digraph property)": [[285, "graphscope.nx.DiGraph.in_degree"]], "in_edges (graphscope.nx.digraph property)": [[285, "graphscope.nx.DiGraph.in_edges"]], "is_directed() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.is_directed"]], "is_directed() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.is_directed"]], "is_multigraph() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.is_multigraph"]], "is_multigraph() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.is_multigraph"]], "key (graphscope.nx.digraph property)": [[285, "graphscope.nx.DiGraph.key"]], "key (graphscope.nx.graph property)": [[285, "graphscope.nx.Graph.key"]], "name (graphscope.nx.digraph property)": [[285, "graphscope.nx.DiGraph.name"]], "name (graphscope.nx.graph property)": [[285, "graphscope.nx.Graph.name"]], "nbunch_iter() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.nbunch_iter"]], "nbunch_iter() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.nbunch_iter"]], "neighbors() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.neighbors"]], "neighbors() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.neighbors"]], "node_attr_dict_factory (graphscope.nx.digraph attribute)": [[285, "graphscope.nx.DiGraph.node_attr_dict_factory"]], "node_attr_dict_factory (graphscope.nx.graph attribute)": [[285, "graphscope.nx.Graph.node_attr_dict_factory"]], "node_dict_factory (graphscope.nx.digraph attribute)": [[285, "graphscope.nx.DiGraph.node_dict_factory"]], "node_dict_factory (graphscope.nx.graph attribute)": [[285, "graphscope.nx.Graph.node_dict_factory"]], "nodes (graphscope.nx.digraph property)": [[285, "graphscope.nx.DiGraph.nodes"]], "nodes (graphscope.nx.graph property)": [[285, "graphscope.nx.Graph.nodes"]], "number_of_edges() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.number_of_edges"]], "number_of_edges() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.number_of_edges"]], "number_of_nodes() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.number_of_nodes"]], "number_of_nodes() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.number_of_nodes"]], "op (graphscope.nx.digraph property)": [[285, "graphscope.nx.DiGraph.op"]], "op (graphscope.nx.graph property)": [[285, "graphscope.nx.Graph.op"]], "order() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.order"]], "order() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.order"]], "out_degree (graphscope.nx.digraph property)": [[285, "graphscope.nx.DiGraph.out_degree"]], "out_edges (graphscope.nx.digraph property)": [[285, "graphscope.nx.DiGraph.out_edges"]], "pred (graphscope.nx.digraph property)": [[285, "graphscope.nx.DiGraph.pred"]], "predecessors() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.predecessors"]], "remove_edge() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.remove_edge"]], "remove_edge() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.remove_edge"]], "remove_edges_from() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.remove_edges_from"]], "remove_edges_from() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.remove_edges_from"]], "remove_node() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.remove_node"]], "remove_node() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.remove_node"]], "remove_nodes_from() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.remove_nodes_from"]], "remove_nodes_from() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.remove_nodes_from"]], "reverse() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.reverse"]], "schema (graphscope.nx.digraph property)": [[285, "graphscope.nx.DiGraph.schema"]], "schema (graphscope.nx.graph property)": [[285, "graphscope.nx.Graph.schema"]], "session (graphscope.nx.digraph property)": [[285, "graphscope.nx.DiGraph.session"]], "session (graphscope.nx.graph property)": [[285, "graphscope.nx.Graph.session"]], "session_id (graphscope.nx.digraph property)": [[285, "graphscope.nx.DiGraph.session_id"]], "session_id (graphscope.nx.graph property)": [[285, "graphscope.nx.Graph.session_id"]], "set_edge_data() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.set_edge_data"]], "set_edge_data() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.set_edge_data"]], "set_node_data() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.set_node_data"]], "set_node_data() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.set_node_data"]], "signature (graphscope.nx.digraph property)": [[285, "graphscope.nx.DiGraph.signature"]], "signature (graphscope.nx.graph property)": [[285, "graphscope.nx.Graph.signature"]], "size() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.size"]], "size() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.size"]], "subgraph() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.subgraph"]], "subgraph() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.subgraph"]], "succ (graphscope.nx.digraph property)": [[285, "graphscope.nx.DiGraph.succ"]], "successors() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.successors"]], "to_directed() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.to_directed"]], "to_directed() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.to_directed"]], "to_undirected() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.to_undirected"]], "to_undirected() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.to_undirected"]], "to_undirected_class() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.to_undirected_class"]], "to_undirected_class() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.to_undirected_class"]], "update() (graphscope.nx.digraph method)": [[285, "graphscope.nx.DiGraph.update"]], "update() (graphscope.nx.graph method)": [[285, "graphscope.nx.Graph.update"]], "read_adjlist() (in module graphscope.nx)": [[287, "graphscope.nx.read_adjlist"]], "read_edgelist() (in module graphscope.nx)": [[287, "graphscope.nx.read_edgelist"]], "__init__() (in module graphscope.nx.graph)": [[288, "graphscope.nx.Graph.__init__"]], "_convert_arrow_to_dynamic() (in module graphscope.nx.graph)": [[288, "graphscope.nx.Graph._convert_arrow_to_dynamic"]], "operation (class in graphscope.framework.operation)": [[289, "graphscope.framework.operation.Operation"]], "graphscope.framework.dag_utils": [[289, "module-graphscope.framework.dag_utils"]], "session (class in graphscope)": [[292, "graphscope.Session"]], "__enter__() (graphscope.session method)": [[292, "graphscope.Session.__enter__"]], "__exit__() (graphscope.session method)": [[292, "graphscope.Session.__exit__"]], "__init__() (graphscope.session method)": [[292, "graphscope.Session.__init__"]], "add_lib() (graphscope.session method)": [[292, "graphscope.Session.add_lib"]], "as_default() (graphscope.session method)": [[292, "graphscope.Session.as_default"]], "close() (graphscope.session method)": [[292, "graphscope.Session.close"]], "connected() (graphscope.session method)": [[292, "graphscope.Session.connected"]], "engine_config (graphscope.session property)": [[292, "graphscope.Session.engine_config"]], "get_config() (graphscope.session method)": [[292, "graphscope.Session.get_config"]], "graphlearn() (graphscope.session method)": [[292, "graphscope.Session.graphlearn"]], "gremlin() (graphscope.session method)": [[292, "graphscope.Session.gremlin"]], "info (graphscope.session property)": [[292, "graphscope.Session.info"]], "learning() (graphscope.session method)": [[292, "graphscope.Session.learning"]], "load_from() (graphscope.session method)": [[292, "graphscope.Session.load_from"]], "run_fetches() (graphscope.session method)": [[292, "graphscope.Session.run_fetches"]]}})